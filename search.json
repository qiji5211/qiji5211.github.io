[{"title":"关于本站的搭建","url":"/2023/11/23/zhan/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E7%9A%84%E6%90%AD%E5%BB%BA/","content":"<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>本博客是基于 node.js 中的 hexo 快速搭建的资源信息共享站，旨在帮助同学们快速有效地查找资料，免于信息差的焦虑和在各大群聊的奔波。评本站所有资料都可采用直链形式下载，因此可跨设备随想随看。</p>\n<p>评论系统和搜索功能是用一些免费的企业服务对接完成的，后续会加上自己的后端，后续诸多功能会继续完善和更新。 目前部署在了 github 和 gitee 的服务器上，可以通过网址直接进行访问 ​ 所有文章均采用 Markdown 语法编写 md 文件，再由渲染器渲染成 html 文件，即可以说每一遍文章其实都是一个 html 文件。</p>\n<h2 id=\"hexo-的基本介绍\"><a class=\"anchor\" href=\"#hexo-的基本介绍\">#</a> hexo 的基本介绍</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">hexo</span> 是一个快速、简洁且高效的博客框架，它支持几条简短的命令发布博客，因此是对于初学者比较友好的博客框架。</p>\n<p>在 Gitee/GitHub 上有很多这样的框架，我们深入学习编程，就要拥有阅读文档并使用它们的能力，在这个过程中我们会接触很多配置，不必去深究其中的原理，重在应用就可以啦，就像会开车，并不一定需要知道如何造汽车。</p>\n<h2 id=\"hexo-的基本文件结构\"><a class=\"anchor\" href=\"#hexo-的基本文件结构\">#</a> hexo 的基本文件结构</h2>\n<ol>\n<li>\n<p>_config.yml 文件：站点配置文件，很多功能、插件需要修改该配置文件应用生效。</p>\n</li>\n<li>\n<p>node_modules 文件夹：包含依赖的模块。</p>\n</li>\n<li>\n<p>package.json 文件：依赖的模块列表。说明见：package.json:Specifics of npm’s package.json handling</p>\n</li>\n<li>\n<p>package-lock.json 文件：依赖的模块安装记录。说明见：npm-package-locks:An explanation of npm lockfiles</p>\n</li>\n<li>\n<p>public 文件夹：包含生成的网页静态文件。(可以直接部署在服务器上)</p>\n</li>\n<li>\n<p>scaffolds 文件夹：包含创建的文章、分类、标签界面的模板。博客的定制修改会对模板进行修改。</p>\n</li>\n<li>\n<p>source 文件夹：包含生成网页所需要的源文件，包括包含我们心血的 Markdown 文稿，这也是最重要的内容。</p>\n</li>\n<li>\n<p>themes 文件夹：其中 landscape 是默认的主题，其他文件夹是克隆下来时的主题 (本博客使用的主题是 shoka)。</p>\n</li>\n</ol>\n<h2 id=\"hexo-的优势\"><a class=\"anchor\" href=\"#hexo-的优势\">#</a> hexo 的优势</h2>\n<p>hexo 是静态博客生成器 (SSG), 这意味着它不需要服务端来进行渲染，只需要将文件发送给客户端即可<br />\n因此，hexo 脱离了服务器的限制，可以在 github pages 等静态页面托管平台上部署 hexo 基于 NODEJS, 具有较强的扩展性，性能也相对较高</p>\n<h2 id=\"依赖的插件\"><a class=\"anchor\" href=\"#依赖的插件\">#</a> 依赖的插件</h2>\n<ol>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-it</span></p>\n<p>(md 文件渲染器，压缩 css/js/html)</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvcHJlZml4ZXI=\">hexo-autoprefixer</span></p>\n<p>(给生成的 css 文件们添加浏览器前缀)</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hbGdvbGlhc2VhcmNo\">hexo-algoliasearch</span></p>\n<p>(站内搜索功能)</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1zeW1ib2xzLWNvdW50LXRpbWU=\">hexo-symbols-count-time</span></p>\n<p>(文章或站点字数及阅读时间统计)</p>\n</li>\n</ol>\n<h2 id=\"评论系统和搜索功能\"><a class=\"anchor\" href=\"#评论系统和搜索功能\">#</a> 评论系统和搜索功能</h2>\n<p>评论系统:</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmxlYW5jbG91ZC5jbi8=\">LeanCloud</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly92YWxpbmUuanMub3JnL3F1aWNrc3RhcnQuaHRtbA==\">教程</span></p>\n</li>\n</ul>\n<p>搜索功能:</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxnb2xpYS5jb20v\">algolia</span></p>\n</li>\n<li>\n<p>教程 (自行百度)</p>\n</li>\n</ul>\n<h2 id=\"本博客使用到的-api\"><a class=\"anchor\" href=\"#本博客使用到的-api\">#</a> 本博客使用到的 api</h2>\n<p>随机图片: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGkucjEwMDg2LmNvbS9pbWctYXBpLnBocD90eXBlPSVFNSU4QSVBOCVFNiVCQyVBQiVFNyVCQiVCQyVFNSU5MCU4ODE=\">https://api.r10086.com/img-api.php?type = 动漫综合 1</span><br />\n 音乐: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGkuaW5qYWhvdy5jbi9tZXRpbmc=\">https://api.injahow.cn/meting</span> (然后加上自己的随机歌单)</p>\n<h2 id=\"本博客的特色功能\"><a class=\"anchor\" href=\"#本博客的特色功能\">#</a> 本博客的特色功能</h2>\n<ul>\n<li>好看</li>\n<li>搜索功能</li>\n<li>音乐系统</li>\n<li>点击产生粒子效果</li>\n<li>自动定位上次查看的文章位置</li>\n<li>可以切换夜间主题</li>\n<li>响应式</li>\n</ul>\n","categories":["站点搭建"],"tags":["慧试"]},{"title":"Hexo 主题 Shoka & multi-markdown-it 渲染器使用说明","url":"/2023/11/23/zhan/Hexo%20%E4%B8%BB%E9%A2%98%20Shoka%20&%20multi-markdown-it%20%E6%B8%B2%E6%9F%93%E5%99%A8%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/","content":"<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==\">hexo-theme-shoka</span> ：本博客自用的主题</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-markdown-it</span>：配套的 markdown 渲染器</li>\n</ul>\n<p>已经支持 hexo 5。</p>\n<p>本项目是完全开源的，也有做一些 example 示例，大家可以随便拿随便改。<br />\n但是很抱歉，博主我暂时不能提供更多的支持，这个写的乱七八糟的文档，暂时也没有时间把它写得更专业一些。<br />\n非常对不住大家！</p>\n<p>当前版本更新至 0.2.5，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8jJUU2JTlCJUI0JUU2JTk2JUIwJUU4JUFFJUIwJUU1JUJEJTk1\">更新记录点此</span></p>\n<p><a href=\"https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/\"><strong>🚀快速开始</strong></a> - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kZXBlbmRlbnRzLw==\">💌依赖插件</span> - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcv\">📌基本配置</span> - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5Lw==\">🌈界面显示</span> - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9zcGVjaWFsLw==\">🦄特殊功能</span></p>\n<h1 id=\"设计缘由\"><a class=\"anchor\" href=\"#设计缘由\">#</a> 设计缘由</h1>\n<p>前几年在 Bear 和 Evernote 上整理了大量笔记，非常喜欢 Bear 默认的 markdown 渲染样式。<br />\n后来因为换了安卓手机，用不了 Bear，四处搜寻替代品，没有满意的。<br />\n然后阴差阳错知道了 Hexo，又得知 Github 也可以免费建私有仓库了，故再次转移阵地到了自建博客，并部署在 Github Pages。</p>\n<p>因为这个博客是用来记笔记的，故起名  <code>书架</code>  。<br />\n对应的主题即  <code>Theme.Shoka</code>  ，可以说是为了笔记阅读而生的主题。<br />\n样式严重参考 Bear，部分代码严重参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQv\">NexT</span>。</p>\n<p>Hexo 的默认及常用渲染器均使用  <code>highlight.js</code>  进行代码高亮，而我喜欢  <code>Prism.js</code>  ，故重写了一个渲染器配合主题食用。<br />\n渲染器取名  <code>multi</code>  ，因为集成了很多很多很多  <code>markdown-it</code>  插件，以及压缩静态文件的功能。<br />\n（最新版的默认渲染器也支持  <code>Prism.js</code>  了，可喜可贺，但不想用，哈哈哈哈哈哈哈</p>\n<p>墙内 Github Pages 访问速度时而感人，所以用了 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qc2RlbGl2ci5jb20v\">jsDelivr</span> 加速，主要是因为它可以按需合并依赖文件。</p>\n<h1 id=\"快速安装\"><a class=\"anchor\" href=\"#快速安装\">#</a> 快速安装</h1>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td># cd your-blog</td>\n</tr>\n<tr>\n<td>git clone <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYS5naXQ=\">https://github.com/amehime/hexo-theme-shoka.git</span> ./themes/shoka</td>\n</tr>\n</tbody>\n</table>\n<p>打开主题目录，内有  <code>example</code>  文件夹，提供了配置文件的 demo 供参考。</p>\n<h1 id=\"安装依赖插件\"><a class=\"anchor\" href=\"#安装依赖插件\">#</a> 安装依赖插件</h1>\n<p>在应用主题之前，必须至少安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-markdown-it</span> 渲染插件 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvcHJlZml4ZXI=\">hexo-autoprefixer</span>。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kZXBlbmRlbnRzLw==\">插件安装与配置教程戳此</span></p>\n<h1 id=\"应用主题\"><a class=\"anchor\" href=\"#应用主题\">#</a> 应用主题</h1>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8jJUU0JUJGJUFFJUU2JTk0JUI5JUU3JUFCJTk5JUU3JTgyJUI5JUU5JTg1JThEJUU3JUJEJUFF\">#</span>修改站点配置</h2>\n<p>修改站点配置文件  <code>&lt;root&gt;/_config.yml</code>  ，把主题改为  <code>shoka</code></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>theme: shoka</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"修改主题配置\"><a class=\"anchor\" href=\"#修改主题配置\">#</a> 修改主题配置</h2>\n<p>主题配置的所有参数在  <code>&lt;root&gt;/themes/shoka/_config.yml</code>  文件中。</p>\n<p>为了方便主题升级，请在根目录新建一个 yml 文件，命名为  <code>_config.shoka.yml</code>  。<br />\n也就是说，所有主题的自定义配置均保存于  <code>&lt;root&gt;/_config.shoka.yml</code>  文件。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcv\">主题的基础配置可以参考这里</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5Lw==\">界面显示相关的配置参考这里</span></p>\n<h1 id=\"更新记录\"><a class=\"anchor\" href=\"#更新记录\">#</a> 更新记录</h1>\n<p>标签含义：<br />\n❗ 需要手动操作的更新信息<br />\n⚠️ 需要注意的更新信息<br />\n🔧 已修复的问题<br />\n⌛ TODO</p>\n<h2 id=\"024-025\"><a class=\"anchor\" href=\"#024-025\">#</a> 0.2.4 👉 0.2.5</h2>\n<p>💡 避免直接修改主题文件，添加各种自定义：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5LyMlRTglODclQUElRTUlQUUlOUElRTQlQjklODklRTklQTElQjUlRTklOUQlQTIlRTklODUlOEQlRTglODklQjI=\">样式</span>：包括配色、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvI2ljb25mb250JUU1JTlCJUJFJUU2JUEwJTg3\">icon</span>、其他自定义样式</li>\n<li>图片：包括<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5LyMlRTglODclQUElRTUlQUUlOUElRTQlQjklODklRTQlQjglQkIlRTklQTIlOTglRTUlOUIlQkUlRTclODklODc=\">主题图片</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFOSU5QSU4RiVFNiU5QyVCQSVFNSU5QiVCRSVFNSVCQSU5Mw==\">随机图库</span></li>\n</ul>\n<p>🔧 修复一些 BUG</p>\n<h2 id=\"023-024\"><a class=\"anchor\" href=\"#023-024\">#</a> 0.2.3 👉 0.2.4</h2>\n<p>⚠️ <strong>评论功能更新</strong></p>\n<ul>\n<li>MiniValine 魔改版更新至 beta10，修改过主题默认  <code>_config.yml</code>  的同学，记得更新末尾的  <code>vendors</code>  到最新哦</li>\n<li>❗ 评论相关的配置有更新，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFNiU5NiU4NyVFNyVBQiVBMCVFOCVBRiU4NCVFOCVBRSVCQQ==\">配置戳此</span>\n<ul>\n<li>主要增加的 Tag 配置，现在可以各种自定义啦</li>\n</ul>\n</li>\n</ul>\n<p>⚠️ 配置新增</p>\n<ul>\n<li>夜间模式  <code>darkmode</code>  ，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFNSVBNCU5QyVFOSU5NyVCNCVFNiVBOCVBMSVFNSVCQyU4Rg==\">配置戳此</span></li>\n<li>自动定位  <code>auto_scroll</code>  ，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFOCU4NyVBQSVFNSU4QSVBOCVFNSVBRSU5QSVFNCVCRCU4RA==\">配置戳此</span></li>\n<li>图床 API 设置  <code>image_server</code>  ，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFOSU5QSU4RiVFNiU5QyVCQSVFNSU5QiVCRSVFNSVCQSU5Mw==\">配置戳此</span></li>\n</ul>\n<p>⚠️ 背景音乐功能增强，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFOCU4MyU4QyVFNiU5OSVBRiVFOSU5RiVCMyVFNCVCOSU5MA==\">配置戳此</span></p>\n<ul>\n<li>可以添加多个播放列表</li>\n<li>加了一些控制按钮</li>\n</ul>\n<p>⚠️ 增加  <code>media</code>  标签，在文章中插入音频和视频播放列表，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9zcGVjaWFsLyNtZWRpYSVFNSVBNCU5QSVFNSVBQSU5MiVFNCVCRCU5Mw==\">方法戳此</span><br />\n⌛ 视频播放器有待增强（显示分段标签，字幕）</p>\n<p>🔧 随机图库支持非渣浪图床的任意图片<br />\n🔧 还有许多小 BUG</p>\n<h2 id=\"022-023\"><a class=\"anchor\" href=\"#022-023\">#</a> 0.2.2 👉 0.2.3</h2>\n<p>❗ 增加主题文件外自定义语言包的功能，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5LyMlRTglODclQUElRTUlQUUlOUElRTQlQjklODklRTglQUYlQUQlRTglQTglODAlRTUlOEMlODU=\">配置戳此</span><br />\n🔧 提高低版本浏览器兼容性</p>\n<h2 id=\"021-022\"><a class=\"anchor\" href=\"#021-022\">#</a> 0.2.1 👉 0.2.2</h2>\n<p>⚠️ 弃用  <code>mediumzoom</code>  ，改成  <code>fancybox</code>  ，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5LyMlRTUlOUIlQkUlRTclODklODclRTUlQjElOTUlRTclQTQlQkElRTQlQjglOEUlRTclOUIlQjglRTUlODYlOEM=\">配置戳此</span><br />\n💡 增加语言包：  <code>繁体中文</code>  和  <code>日语</code> <br />\n💡 quiz 功能优化，根据语言显示题型标签<br />\n🔧 修复评论功能中反复初始化 leancloud-storage<br />\n🔧 修复  <code>audio: false</code>  时不能隐藏播放按钮、停止播放</p>\n<h2 id=\"021\"><a class=\"anchor\" href=\"#021\">#</a> 👉 0.2.1</h2>\n<p>⚠️ 配置文件添加  <code>loader</code>  参数，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFNSU4QSVBMCVFOCVCRCVCRCVFNSU4QSVBOCVFNyU5NCVCQg==\">配置戳此</span><br />\n💡 二级 list 区别显示<br />\n🔧 修复浏览位置定位 BUG<br />\n🔧 修复 firework 动画延迟<br />\n🔧 优化评论功能</p>\n<h2 id=\"019-02\"><a class=\"anchor\" href=\"#019-02\">#</a> 0.1.9 👉 0.2</h2>\n<p>⚠️ <strong>评论功能大改</strong></p>\n<ul>\n<li>弃用不开源的 Valine，改用 MiniValine，并且进行了魔改，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvTWluaVZhbGluZQ==\">项目戳此</span><br />\n主要是大量压缩了代码，弃用一些花里胡哨的功能，又加了一些别的花里胡哨的功能。</li>\n<li>为防止泄露用户邮箱、IP 等隐私信息，弃用 QQ 号获取昵称及头像。<br />\n❗ 同时需要手动进行一些迁移，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ltYWVnb28vVmFsaW5l\">具体步骤戳此</span></li>\n<li>❗ 评论相关的配置亦有更新，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFNiU5NiU4NyVFNyVBQiVBMCVFOCVBRiU4NCVFOCVBRSVCQQ==\">配置戳此</span></li>\n</ul>\n<p>⚠️ 增加单击页面烟花效果，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFOSVBMSVCNSVFOSU5RCVBMiVFNyU4OSVCOSVFNiU5NSU4OA==\">配置戳此</span><br />\n💡 弃用 Velocity，改用 anime.js，方便未来添加更多花里胡哨的功能严重拖慢页面滑行速度<br />\n🔧 新增多枚 icon，包括豆瓣  <code>i-douban</code>  等<br />\n🔧 一些显示问题</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvdGFncy9IZXhvLw==\">Hexo</span>  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvdGFncy8lRTYlOTUlOTklRTclQTglOEIv\">教程</span></p>\n<ul>\n<li><strong>本文作者：</strong> Ruri Shimotsuki __@__優萌初華</li>\n<li><strong>本文链接：</strong> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\">https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/</span></li>\n</ul>\n","categories":["站点搭建"],"tags":["慧试"]},{"title":"TypeScript教程","url":"/2023/11/23/qianduan/TSs/%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","content":"<h1 id=\"第一章-快速入门\"><a class=\"anchor\" href=\"#第一章-快速入门\">#</a> 第一章 快速入门</h1>\n<h2 id=\"typescript简介\"><a class=\"anchor\" href=\"#typescript简介\">#</a> TypeScript 简介</h2>\n<ol>\n<li>TypeScript 是 JavaScript 的超集。</li>\n<li>它对 JS 进行了扩展，向 JS 中引入了类型的概念，并添加了许多新的特性。</li>\n<li>TS 代码需要通过编译器编译为 JS，然后再交由 JS 解析器执行。</li>\n<li>TS 完全兼容 JS，换言之，任何的 JS 代码都可以直接当成 JS 使用。</li>\n<li>相较于 JS 而言，TS 拥有了静态类型，更加严格的语法，更强大的功能；TS 可以在代码执行前就完成代码的检查，减小了运行时异常的出现的几率；TS 代码可以编译为任意版本的 JS 代码，可有效解决不同 JS 运行环境的兼容问题；同样的功能，TS 的代码量要大于 JS，但由于 TS 的代码结构更加清晰，变量类型更加明确，在后期代码的维护中 TS 却远远胜于 JS。</li>\n</ol>\n<h2 id=\"typescript-开发环境搭建\"><a class=\"anchor\" href=\"#typescript-开发环境搭建\">#</a> TypeScript 开发环境搭建</h2>\n<ol>\n<li>\n<p>下载 Node.js</p>\n<ul>\n<li>64 位：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2Rpc3QvdjE0LjE1LjEvbm9kZS12MTQuMTUuMS14NjQubXNp\">https://nodejs.org/dist/v14.15.1/node-v14.15.1-x64.msi</span></li>\n<li>32 位：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2Rpc3QvdjE0LjE1LjEvbm9kZS12MTQuMTUuMS14ODYubXNp\">https://nodejs.org/dist/v14.15.1/node-v14.15.1-x86.msi</span></li>\n</ul>\n</li>\n<li>\n<p>安装 Node.js</p>\n</li>\n<li>\n<p>使用 npm 全局安装 typescript</p>\n<ul>\n<li>进入命令行</li>\n<li>输入：npm i -g typescript</li>\n</ul>\n</li>\n<li>\n<p>创建一个 ts 文件</p>\n</li>\n<li>\n<p>使用 tsc 对 ts 文件进行编译</p>\n<ul>\n<li>\n<p>进入命令行</p>\n</li>\n<li>\n<p>进入 ts 文件所在目录</p>\n</li>\n<li>\n<p>执行命令：tsc xxx.ts</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"基本类型\"><a class=\"anchor\" href=\"#基本类型\">#</a> 基本类型</h2>\n<ul>\n<li>\n<p>类型声明</p>\n<ul>\n<li>\n<p>类型声明是 TS 非常重要的一个特点</p>\n</li>\n<li>\n<p>通过类型声明可以指定 TS 中变量（参数、形参）的类型</p>\n</li>\n<li>\n<p>指定类型后，当为变量赋值时，TS 编译器会自动检查值是否符合类型声明，符合则赋值，否则报错</p>\n</li>\n<li>\n<p>简而言之，类型声明给变量设置了类型，使得变量只能存储某种类型的值</p>\n</li>\n<li>\n<p>语法：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> 变量<span class=\"token operator\">:</span> 类型<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">let</span> 变量<span class=\"token operator\">:</span> 类型 <span class=\"token operator\">=</span> 值<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>参数<span class=\"token operator\">:</span> 类型<span class=\"token punctuation\">,</span> 参数<span class=\"token operator\">:</span> 类型<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> 类型<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>自动类型判断</p>\n<ul>\n<li>TS 拥有自动的类型判断机制</li>\n<li>当对变量的声明和赋值是同时进行的，TS 编译器会自动判断变量的类型</li>\n<li>所以如果你的变量的声明和赋值时同时进行的，可以省略掉类型声明</li>\n</ul>\n</li>\n<li>\n<p>类型：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">例子</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">number</td>\n<td style=\"text-align:center\">1, -33, 2.5</td>\n<td style=\"text-align:center\">任意数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">string</td>\n<td style=\"text-align:center\">'hi', &quot;hi&quot;,  <code>hi</code></td>\n<td style=\"text-align:center\">任意字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">true、false</td>\n<td style=\"text-align:center\">布尔值 true 或 false</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">字面量</td>\n<td style=\"text-align:center\">其本身</td>\n<td style=\"text-align:center\">限制变量的值就是该字面量的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">any</td>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:center\">任意类型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">unknown</td>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:center\">类型安全的 any</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">void</td>\n<td style=\"text-align:center\">空值（undefined）</td>\n<td style=\"text-align:center\">没有值（或 undefined）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">never</td>\n<td style=\"text-align:center\">没有值</td>\n<td style=\"text-align:center\">不能是任何值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">object</td>\n<td style=\"text-align:center\" name:孙悟空=\"\"></td>\n<td style=\"text-align:center\">任意的 JS 对象</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">array</td>\n<td style=\"text-align:center\">[1,2,3]</td>\n<td style=\"text-align:center\">任意 JS 数组</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tuple</td>\n<td style=\"text-align:center\">[4,5]</td>\n<td style=\"text-align:center\">元素，TS 新增类型，固定长度数组</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">enum</td>\n<td style=\"text-align:center\" A,=\"\" B=\"\">enum</td>\n<td style=\"text-align:center\">枚举，TS 中新增类型</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>number</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> decimal<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> hex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xf00d</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">let</span> binary<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">0b1010</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">let</span> octal<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">0o744</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">let</span> big<span class=\"token operator\">:</span> bigint <span class=\"token operator\">=</span> <span class=\"token number\">100n</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>boolean</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> isDone<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>string</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> color<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>color <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">let</span> fullName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bob Bobbington</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">let</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">37</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">let</span> sentence<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, my name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>fullName<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>I'll be </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>age <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> years old next month.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>字面量</p>\n<ul>\n<li>\n<p>也可以使用字面量去指定变量的类型，通过字面量可以确定变量的取值范围</p>\n</li>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> color<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'blue'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> num<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token number\">2</span> <span class=\"token operator\">|</span> <span class=\"token number\">3</span> <span class=\"token operator\">|</span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>any</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> d<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>unknown</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> notSure<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>notSure <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>void</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> unusable<span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>never</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">error</span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">never</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>object（没啥用）</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> obj<span class=\"token operator\">:</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>array</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> list<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> list<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>tuple</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> x<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>enum</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">enum</span> Color <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  Red<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  Green<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  Blue<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">let</span> c<span class=\"token operator\">:</span> Color <span class=\"token operator\">=</span> Color<span class=\"token punctuation\">.</span>Green<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">enum</span> Color <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  Red <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  Green<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  Blue<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">let</span> c<span class=\"token operator\">:</span> Color <span class=\"token operator\">=</span> Color<span class=\"token punctuation\">.</span>Green<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">enum</span> Color <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  Red <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  Green <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  Blue <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">let</span> c<span class=\"token operator\">:</span> Color <span class=\"token operator\">=</span> Color<span class=\"token punctuation\">.</span>Green<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>类型断言</p>\n<ul>\n<li>\n<p>有些情况下，变量的类型对于我们来说是很明确，但是 TS 编译器却并不清楚，此时，可以通过类型断言来告诉编译器变量的类型，断言有两种形式：</p>\n<ul>\n<li>\n<p>第一种</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> someValue<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is a string\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> strLength<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>someValue <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>第二种</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> someValue<span class=\"token operator\">:</span> <span class=\"token builtin\">unknown</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is a string\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> strLength<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span>someValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"编译选项\"><a class=\"anchor\" href=\"#编译选项\">#</a> 编译选项</h2>\n<ul>\n<li>\n<p>自动编译文件</p>\n<ul>\n<li>\n<p>编译文件时，使用 -w 指令后，TS 编译器会自动监视文件的变化，并在文件发生变化时对文件进行重新编译。</p>\n</li>\n<li>\n<p>示例：</p>\n<ul>\n<li>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tsc xxx<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">-</span>w</pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>自动编译整个项目</p>\n<ul>\n<li>\n<p>如果直接使用 tsc 指令，则可以自动将当前项目下的所有 ts 文件编译为 js 文件。</p>\n</li>\n<li>\n<p>但是能直接使用 tsc 命令的前提时，要先在项目根目录下创建一个 ts 的配置文件 tsconfig.json</p>\n</li>\n<li>\n<p>tsconfig.json 是一个 JSON 文件，添加配置文件后，只需只需 tsc 命令即可完成对整个项目的编译</p>\n</li>\n<li>\n<p>配置选项：</p>\n<ul>\n<li>\n<p>include</p>\n<ul>\n<li>\n<p>定义希望被编译文件所在的目录</p>\n</li>\n<li>\n<p>默认值：[&quot;**/*&quot;]</p>\n</li>\n<li>\n<p>示例：</p>\n<ul>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"src/**/*\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tests/**/*\"</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure></li>\n<li>\n<p>上述示例中，所有 src 目录和 tests 目录下的文件都会被编译</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>exclude</p>\n<ul>\n<li>\n<p>定义需要排除在外的目录</p>\n</li>\n<li>\n<p>默认值：[&quot;node_modules&quot;, &quot;bower_components&quot;, &quot;jspm_packages&quot;]</p>\n</li>\n<li>\n<p>示例：</p>\n<ul>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/hello/**/*\"</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure></li>\n<li>\n<p>上述示例中，src 下 hello 目录下的文件都不会被编译</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>extends</p>\n<ul>\n<li>\n<p>定义被继承的配置文件</p>\n</li>\n<li>\n<p>示例：</p>\n<ul>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./configs/base\"</span></pre></td></tr></table></figure></li>\n<li>\n<p>上述示例中，当前配置文件中会自动包含 config 目录下 base.json 中的所有配置信息</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>files</p>\n<ul>\n<li>\n<p>指定被编译文件的列表，只有需要编译的文件少时才会用到</p>\n</li>\n<li>\n<p>示例：</p>\n<ul>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">\"core.ts\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">\"sys.ts\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"types.ts\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"scanner.ts\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">\"parser.ts\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"utilities.ts\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">\"binder.ts\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">\"checker.ts\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">\"tsc.ts\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr></table></figure></li>\n<li>\n<p>列表中的文件都会被 TS 编译器所编译</p>\n</li>\n</ul>\n</li>\n<li>\n<p>compilerOptions</p>\n<ul>\n<li>\n<p>编译选项是配置文件中非常重要也比较复杂的配置选项</p>\n</li>\n<li>\n<p>在 compilerOptions 中包含多个子选项，用来完成对编译的配置</p>\n</li>\n<li>\n<p>项目选项</p>\n</li>\n<li>\n<p>target</p>\n</li>\n<li>\n<p>设置 ts 代码编译的目标版本</p>\n</li>\n<li>\n<p>可选值：</p>\n</li>\n<li>\n<p>ES3（默认）、ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext</p>\n<ul>\n<li>\n<p>示例：</p>\n</li>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ES6\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>如上设置，我们所编写的 ts 代码将会被编译为 ES6 版本的 js 代码</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>lib</p>\n<ul>\n<li>\n<p>指定代码运行时所包含的库（宿主环境）</p>\n</li>\n<li>\n<p>可选值：</p>\n</li>\n<li>\n<p>ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext、DOM、WebWorker、ScriptHost ......</p>\n</li>\n<li>\n<p>示例：</p>\n</li>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ES6\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ES6\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"DOM\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"outFile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/aa.js\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>module</p>\n<ul>\n<li>\n<p>设置编译后代码使用的模块化系统</p>\n</li>\n<li>\n<p>可选值：</p>\n</li>\n<li>\n<p>CommonJS、UMD、AMD、System、ES2020、ESNext、None</p>\n</li>\n<li>\n<p>示例：</p>\n</li>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string-property property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string-property property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CommonJS\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>outDir</p>\n<ul>\n<li>\n<p>编译后文件的所在目录</p>\n</li>\n<li>\n<p>默认情况下，编译后的 js 文件会和 ts 文件位于相同的目录，设置 outDir 后可以改变编译后文件的位置</p>\n</li>\n<li>\n<p>示例：</p>\n</li>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>设置后编译后的 js 文件将会生成到 dist 目录</p>\n</li>\n<li>\n<p>outFile</p>\n<ul>\n<li>\n<p>将所有的文件编译为一个 js 文件</p>\n</li>\n<li>\n<p>默认会将所有的编写在全局作用域中的代码合并为一个 js 文件，如果 module 制定了 None、System 或 AMD 则会将模块一起合并到文件之中</p>\n</li>\n<li>\n<p>示例：</p>\n</li>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"outFile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/app.js\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>rootDir</p>\n<ul>\n<li>\n<p>指定代码的根目录，默认情况下编译后文件的目录结构会以最长的公共目录为根目录，通过 rootDir 可以手动指定根目录</p>\n</li>\n<li>\n<p>示例：</p>\n</li>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"rootDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./src\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>allowJs</p>\n<ul>\n<li>\n<p>是否对 js 文件编译</p>\n</li>\n<li>\n<p>checkJs</p>\n</li>\n<li>\n<p>是否对 js 文件进行检查</p>\n</li>\n<li>\n<p>示例：</p>\n</li>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"allowJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"checkJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>removeComments</p>\n<ul>\n<li>是否删除注释</li>\n<li>默认值：false</li>\n</ul>\n</li>\n<li>\n<p>noEmit</p>\n<ul>\n<li>不对代码进行编译</li>\n<li>默认值：false</li>\n</ul>\n</li>\n<li>\n<p>sourceMap</p>\n<ul>\n<li>是否生成 sourceMap</li>\n<li>默认值：false</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>严格检查</p>\n<ul>\n<li>strict\n<ul>\n<li>启用所有的严格检查，默认值为 true，设置后相当于开启了所有的严格检查</li>\n</ul>\n</li>\n<li>alwaysStrict\n<ul>\n<li>总是以严格模式对代码进行编译</li>\n</ul>\n</li>\n<li>noImplicitAny\n<ul>\n<li>禁止隐式的 any 类型</li>\n</ul>\n</li>\n<li>noImplicitThis\n<ul>\n<li>禁止类型不明确的 this</li>\n</ul>\n</li>\n<li>strictBindCallApply\n<ul>\n<li>严格检查 bind、call 和 apply 的参数列表</li>\n</ul>\n</li>\n<li>strictFunctionTypes\n<ul>\n<li>严格检查函数的类型</li>\n</ul>\n</li>\n<li>strictNullChecks\n<ul>\n<li>严格的空值检查</li>\n</ul>\n</li>\n<li>strictPropertyInitialization\n<ul>\n<li>严格检查属性是否初始化</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>额外检查</p>\n<ul>\n<li>noFallthroughCasesInSwitch\n<ul>\n<li>检查 switch 语句包含正确的 break</li>\n</ul>\n</li>\n<li>noImplicitReturns\n<ul>\n<li>检查函数没有隐式的返回值</li>\n</ul>\n</li>\n<li>noUnusedLocals\n<ul>\n<li>检查未使用的局部变量</li>\n</ul>\n</li>\n<li>noUnusedParameters\n<ul>\n<li>检查未使用的参数</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>高级</p>\n<ul>\n<li>allowUnreachableCode\n<ul>\n<li>检查不可达代码</li>\n<li>可选值：\n<ul>\n<li>true，忽略不可达代码</li>\n<li>false，不可达代码将引起错误</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>noEmitOnError\n<ul>\n<li>有错误的情况下不进行编译</li>\n<li>默认值：false</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"webpack\"><a class=\"anchor\" href=\"#webpack\">#</a> webpack</h2>\n<ul>\n<li>\n<p>通常情况下，实际开发中我们都需要使用构建工具对代码进行打包，TS 同样也可以结合构建工具一起使用，下边以 webpack 为例介绍一下如何结合构建工具使用 TS。</p>\n</li>\n<li>\n<p>步骤：</p>\n<ol>\n<li>\n<p>初始化项目</p>\n<ul>\n<li>进入项目根目录，执行命令  <code>npm init -y</code>\n<ul>\n<li>主要作用：创建 package.json 文件</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>下载构建工具</p>\n<ul>\n<li><code>npm i -D webpack webpack-cli webpack-dev-server typescript ts-loader clean-webpack-plugin</code>\n<ul>\n<li>共安装了 7 个包\n<ul>\n<li>webpack\n<ul>\n<li>构建工具 webpack</li>\n</ul>\n</li>\n<li>webpack-cli\n<ul>\n<li>webpack 的命令行工具</li>\n</ul>\n</li>\n<li>webpack-dev-server\n<ul>\n<li>webpack 的开发服务器</li>\n</ul>\n</li>\n<li>typescript\n<ul>\n<li>ts 编译器</li>\n</ul>\n</li>\n<li>ts-loader\n<ul>\n<li>ts 加载器，用于在 webpack 中编译 ts 文件</li>\n</ul>\n</li>\n<li>html-webpack-plugin\n<ul>\n<li>webpack 中 html 插件，用来自动创建 html 文件</li>\n</ul>\n</li>\n<li>clean-webpack-plugin\n<ul>\n<li>webpack 中的清除插件，每次构建都会先清除目录</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>根目录下创建 webpack 的配置文件 webpack.config.js</p>\n<ul>\n<li>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> HtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"html-webpack-plugin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> CleanWebpackPlugin <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clean-webpack-plugin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">optimization</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">minimize</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// 关闭代码压缩，可选</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./src/index.ts\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token literal-property property\">devtool</span><span class=\"token operator\">:</span> <span class=\"token string\">\"inline-source-map\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token literal-property property\">devServer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token literal-property property\">contentBase</span><span class=\"token operator\">:</span> <span class=\"token string\">'./dist'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bundle.js\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token literal-property property\">environment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token literal-property property\">arrowFunction</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// 关闭 webpack 的箭头函数，可选</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token literal-property property\">extensions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\".ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".js\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.ts$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                   <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ts-loader\"</span>     </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token literal-property property\">exclude</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">new</span> <span class=\"token class-name\">CleanWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span><span class=\"token string\">'TS测试'</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>根目录下创建 tsconfig.json，配置可以根据自己需要</p>\n<ul>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ES2015\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ES2015\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>修改 package.json 添加如下配置</p>\n<ul>\n<li>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  ...略...</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack serve --open chrome.exe\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  ...略...</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>在 src 下创建 ts 文件，并在并命令行执行 <code>npm run build</code>  对代码进行编译，或者执行 <code>npm start</code>  来启动开发服务器</p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"babel\"><a class=\"anchor\" href=\"#babel\">#</a> Babel</h2>\n<ul>\n<li>\n<p>经过一系列的配置，使得 TS 和 webpack 已经结合到了一起，除了 webpack，开发中还经常需要结合 babel 来对代码进行转换以使其可以兼容到更多的浏览器，在上述步骤的基础上，通过以下步骤再将 babel 引入到项目中。</p>\n<ol>\n<li>\n<p>安装依赖包：</p>\n<ul>\n<li><code>npm i -D @babel/core @babel/preset-env babel-loader core-js</code></li>\n<li>共安装了 4 个包，分别是：\n<ul>\n<li>@babel/core\n<ul>\n<li>babel 的核心工具</li>\n</ul>\n</li>\n<li>@babel/preset-env\n<ul>\n<li>babel 的预定义环境</li>\n</ul>\n</li>\n<li>@babel-loader\n<ul>\n<li>babel 在 webpack 中的加载器</li>\n</ul>\n</li>\n<li>core-js\n<ul>\n<li>core-js 用来使老版本的浏览器支持新版 ES 语法</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>修改 webpack.config.js 配置文件</p>\n</li>\n</ol>\n<ul>\n<li>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">...</span>略<span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.ts$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                  <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">\"babel-loader\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                  <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token literal-property property\">presets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                      <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                        <span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                            <span class=\"token string-property property\">\"targets\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                <span class=\"token string-property property\">\"chrome\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"58\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                <span class=\"token string-property property\">\"ie\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"11\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                              <span class=\"token string-property property\">\"corejs\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                              <span class=\"token string-property property\">\"useBuiltIns\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"usage\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                      <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                  <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ts-loader\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token literal-property property\">exclude</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token operator\">...</span>略<span class=\"token operator\">...</span></pre></td></tr></table></figure><ul>\n<li>如此一来，使用 ts 编译后的文件将会再次被 babel 处理，使得代码可以在大部分浏览器中直接使用，可以在配置选项的 targets 中指定要兼容的浏览器版本。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"第二章-面向对象\"><a class=\"anchor\" href=\"#第二章-面向对象\">#</a> 第二章 面向对象</h1>\n<p>面向对象是程序中一个非常重要的思想，它被很多同学理解成了一个比较难，比较深奥的问题，其实不然。面向对象很简单，简而言之就是程序之中所有的操作都需要通过对象来完成。</p>\n<ul>\n<li>举例来说：\n<ul>\n<li>操作浏览器要使用 window 对象</li>\n<li>操作网页要使用 document 对象</li>\n<li>操作控制台要使用 console 对象</li>\n</ul>\n</li>\n</ul>\n<p>一切操作都要通过对象，也就是所谓的面向对象，那么对象到底是什么呢？这就要先说到程序是什么，计算机程序的本质就是对现实事物的抽象，抽象的反义词是具体，比如：照片是对一个具体的人的抽象，汽车模型是对具体汽车的抽象等等。程序也是对事物的抽象，在程序中我们可以表示一个人、一条狗、一把枪、一颗子弹等等所有的事物。一个事物到了程序中就变成了一个对象。</p>\n<p>在程序中所有的对象都被分成了两个部分数据和功能，以人为例，人的姓名、性别、年龄、身高、体重等属于数据，人可以说话、走路、吃饭、睡觉这些属于人的功能。数据在对象中被成为属性，而功能就被称为方法。所以简而言之，在程序中一切皆是对象。</p>\n<h2 id=\"类class\"><a class=\"anchor\" href=\"#类class\">#</a> 类 (class)</h2>\n<p>要想面向对象，操作对象，首先便要拥有对象，那么下一个问题就是如何创建对象。要创建对象，必须要先定义类，所谓的类可以理解为对象的模型，程序中可以根据类创建指定类型的对象，举例来说：可以通过 Person 类来创建人的对象，通过 Dog 类创建狗的对象，通过 Car 类来创建汽车的对象，不同的类可以用来创建不同的对象。</p>\n<ul>\n<li>\n<p>定义类：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">类名</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   属性名<span class=\"token operator\">:</span> 类型<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>参数<span class=\"token operator\">:</span> 类型<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>属性名 <span class=\"token operator\">=</span> 参数<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">方法名</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>示例：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">大家好，我是</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>使用类：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'孙悟空'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  p<span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"面向对象的特点\"><a class=\"anchor\" href=\"#面向对象的特点\">#</a> 面向对象的特点</h2>\n<ul>\n<li>\n<p>封装</p>\n<ul>\n<li>\n<p>对象实质上就是属性和方法的容器，它的主要作用就是存储属性和方法，这就是所谓的封装</p>\n</li>\n<li>\n<p>默认情况下，对象的属性是可以任意的修改的，为了确保数据的安全性，在 TS 中可以对属性的权限进行设置</p>\n</li>\n<li>\n<p>只读属性（readonly）：</p>\n<ul>\n<li>如果在声明属性时添加一个 readonly，则属性便成了只读属性无法修改</li>\n</ul>\n</li>\n<li>\n<p>TS 中属性具有三种修饰符：</p>\n<ul>\n<li>public（默认值），可以在类、子类和对象中修改</li>\n<li>protected ，可以在类、子类中修改</li>\n<li>private ，可以在类中修改</li>\n</ul>\n</li>\n<li>\n<p>示例：</p>\n<ul>\n<li>\n<p>public</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 写或什么都不写都是 public</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 可以在类中修改</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">大家好，我是</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 子类中可以修改</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'孙悟空'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  p<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'猪八戒'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 可以通过对象修改</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>protected</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">protected</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">protected</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 可以修改</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">大家好，我是</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 子类中可以修改</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'孙悟空'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'猪八戒'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 不能修改</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>private</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 可以修改</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">大家好，我是</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 子类中不能修改</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'孙悟空'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'猪八戒'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 不能修改</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>属性存取器</p>\n<ul>\n<li>\n<p>对于一些不希望被任意修改的属性，可以将其设置为 private</p>\n</li>\n<li>\n<p>直接将其设置为 private 将导致无法再通过对象修改其中的属性</p>\n</li>\n<li>\n<p>我们可以在类中定义一组读取、设置属性的方法，这种对属性读取或设置的属性被称为属性的存取器</p>\n</li>\n<li>\n<p>读取属性的方法叫做 setter 方法，设置属性的方法叫做 getter 方法</p>\n</li>\n<li>\n<p>示例：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> _name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">set</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">const</span> p1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'孙悟空'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 通过 getter 读取 name 属性</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p1<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'猪八戒'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 通过 setter 修改 name 属性</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>静态属性</p>\n<ul>\n<li>\n<p>静态属性（方法），也称为类属性。使用静态属性无需创建实例，通过类即可直接使用</p>\n</li>\n<li>\n<p>静态属性（方法）使用 static 开头</p>\n</li>\n<li>\n<p>示例：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Tools</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token constant\">PI</span> <span class=\"token operator\">=</span> <span class=\"token number\">3.1415926</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>num1<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> num2<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Tools<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Tools<span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">456</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>this</p>\n<ul>\n<li>在类中，使用 this 表示当前对象</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>继承</p>\n<ul>\n<li>\n<p>继承时面向对象中的又一个特性</p>\n</li>\n<li>\n<p>通过继承可以将其他类中的属性和方法引入到当前类中</p>\n<ul>\n<li>\n<p>示例：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">bark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">在汪汪叫！</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">const</span> dog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'旺财'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>dog<span class=\"token punctuation\">.</span><span class=\"token function\">bark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>通过继承可以在不修改类的情况下完成对类的扩展</p>\n</li>\n<li>\n<p>重写</p>\n<ul>\n<li>\n<p>发生继承时，如果子类中的方法会替换掉父类中的同名方法，这就称为方法的重写</p>\n</li>\n<li>\n<p>示例：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">父类中的run方法！</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">bark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">在汪汪叫！</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">子类中的run方法，会重写父类中的run方法！</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">const</span> dog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'旺财'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>dog<span class=\"token punctuation\">.</span><span class=\"token function\">bark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>在子类中可以使用 super 来完成对父类的引用</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>抽象类（abstract class）</p>\n<ul>\n<li>\n<p>抽象类是专门用来被其他类所继承的类，它只能被其他类所继承不能用来创建实例</p>\n</li>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">abstract</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">bark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'动物在叫~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Animals</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'狗在跑~'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>使用 abstract 开头的方法叫做抽象方法，抽象方法没有方法体只能定义在抽象类中，继承抽象类时抽象方法必须要实现</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"接口interface\"><a class=\"anchor\" href=\"#接口interface\">#</a> 接口（Interface）</h2>\n<p>接口的作用类似于抽象类，不同点在于接口中的所有方法和属性都是没有实值的，换句话说接口中的所有方法都是抽象方法。接口主要负责定义一个类的结构，接口可以去限制一个对象的接口，对象只有包含接口中定义的所有属性和方法时才能匹配接口。同时，可以让一个类去实现接口，实现接口时类中要保护接口中的所有属性。</p>\n<ul>\n<li>\n<p>示例（检查对象类型）：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>per<span class=\"token operator\">:</span> Person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    per<span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">:</span><span class=\"token string\">'孙悟空'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, 我是 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>示例（实现）</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">public</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'大家好，我是'</span><span class=\"token operator\">+</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"泛型generic\"><a class=\"anchor\" href=\"#泛型generic\">#</a> 泛型（Generic）</h2>\n<p>定义一个函数或类时，有些情况下无法确定其中要使用的具体类型（返回值、参数、属性的类型不能确定），此时泛型便能够发挥作用。</p>\n<ul>\n<li>\n<p>举个例子：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>arg<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">return</span> arg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>上例中，test 函数有一个参数类型不确定，但是能确定的时其返回值的类型和参数的类型是相同的，由于类型不确定所以参数和返回值均使用了 any，但是很明显这样做是不合适的，首先使用 any 会关闭 TS 的类型检查，其次这样设置也不能体现出参数和返回值是相同的类型</p>\n</li>\n<li>\n<p>使用泛型：</p>\n</li>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">test</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>arg<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">return</span> arg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>这里的 <code>&lt;T&gt;</code>  就是泛型，T 是我们给这个类型起的名字（不一定非叫 T），设置泛型后即可在函数中使用 T 来表示该类型。所以泛型其实很好理解，就表示某个类型。</p>\n</li>\n<li>\n<p>那么如何使用上边的函数呢？</p>\n<ul>\n<li>\n<p>方式一（直接使用）：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>使用时可以直接传递参数使用，类型会由 TS 自动推断出来，但有时编译器无法自动推断时还需要使用下面的方式</p>\n</li>\n</ul>\n</li>\n<li>\n<p>方式二（指定类型）：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token generic-function\"><span class=\"token function\">test</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>也可以在函数后手动指定泛型</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>可以同时指定多个泛型，泛型间使用逗号隔开：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">test</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">K</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">K</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token generic-function\"><span class=\"token function\">test</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>使用泛型时，完全可以将泛型当成是一个普通的类去使用</p>\n</li>\n</ul>\n</li>\n<li>\n<p>类中同样可以使用泛型：</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    prop<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>prop<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>prop <span class=\"token operator\">=</span> prop<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>除此之外，也可以对泛型的范围进行约束</p>\n<ul>\n<li>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">interface</span> <span class=\"token class-name\">MyInter</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    length<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">test</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> MyInter<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>arg<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> arg<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>使用 Textends MyInter 表示泛型 T 必须是 MyInter 的子类，不一定非要使用接口类和抽象类同样适用。</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","categories":["前端学习","TS"],"tags":["TS"]},{"title":"JavaScript高级教程","url":"/2023/11/23/qianduan/JS/JS%E9%AB%98%E7%BA%A7/","content":"<h1 id=\"基础总结深入\"><a class=\"anchor\" href=\"#基础总结深入\">#</a> 基础总结深入</h1>\n<h2 id=\"数据类型的分类和判断\"><a class=\"anchor\" href=\"#数据类型的分类和判断\">#</a> 数据类型的分类和判断</h2>\n<ul>\n<li>基本 (值) 类型\n<ul>\n<li>Number ----- 任意数值 -------- typeof</li>\n<li>String ----- 任意字符串 ------ typeof</li>\n<li>Boolean ---- true/false ----- typeof</li>\n<li>undefined --- undefined ----- typeof/===</li>\n<li>null -------- null ---------- ===</li>\n</ul>\n</li>\n<li>对象 (引用) 类型\n<ul>\n<li>Object ----- typeof/instanceof</li>\n<li>Array ------ instanceof</li>\n<li>Function ---- typeof</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"数据变量-内存的理解\"><a class=\"anchor\" href=\"#数据变量-内存的理解\">#</a> 数据，变量，内存的理解</h2>\n<ul>\n<li>什么是数据？\n<ul>\n<li>在内存中可读的，可传递的保存了特定信息的 ' 东东'</li>\n<li>一切皆数据，函数也是数据</li>\n<li>在内存中的所有操作的目标：数据</li>\n</ul>\n</li>\n<li>什么是变量？\n<ul>\n<li>在程序运行过程中它的值是允许改变的量</li>\n<li>一个变量对应一块小内存，它的值保存在此内存中</li>\n</ul>\n</li>\n<li>什么是内存？\n<ul>\n<li>内存条通电后产生的存储空间 (临时的)</li>\n<li>一块内存包含 2 个方面的数据\n<ul>\n<li>内部存储的数据</li>\n<li>地址值数据</li>\n</ul>\n</li>\n<li>内存空间的分类\n<ul>\n<li>栈空间：全局变量和局部变量</li>\n<li>堆空间：对象</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>内存，数据，变量三者之间的关系\n<ul>\n<li>内存是容器，用来存储不同数据</li>\n<li>变量是内存的标识，通过变量我们可以操作 (读 / 写) 内存中的数据</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"对象的理解和使用\"><a class=\"anchor\" href=\"#对象的理解和使用\">#</a> 对象的理解和使用</h2>\n<ul>\n<li>什么是对象？\n<ul>\n<li>多个数据 (属性) 的集合</li>\n<li>用来保存多个数据 (属性) 的容器</li>\n</ul>\n</li>\n<li>属性组成:\n<ul>\n<li>属性名：字符串 (标识)</li>\n<li>属性值：任意类型</li>\n</ul>\n</li>\n<li>属性的分类:\n<ul>\n<li>一般：属性值不是 function  描述对象的状态</li>\n<li>方法：属性值为 function 的属性  描述对象的行为</li>\n</ul>\n</li>\n<li>特别的对象\n<ul>\n<li>数组：属性名是 0,1,2,3 之类的索引</li>\n<li>函数：可以执行的</li>\n</ul>\n</li>\n<li>如何操作内部属性 (方法)\n<ul>\n<li>. 属性名</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"函数的理解和使用\"><a class=\"anchor\" href=\"#函数的理解和使用\">#</a> 函数的理解和使用</h2>\n<ul>\n<li>什么是函数？\n<ul>\n<li>用来实现特定功能的，n 条语句的封装体</li>\n<li>只有函数类型的数据是可以执行的，其它的都不可以</li>\n</ul>\n</li>\n<li>为什么要用函数？\n<ul>\n<li>提高复用性</li>\n<li>便于阅读交流</li>\n</ul>\n</li>\n<li>函数也是对象\n<ul>\n<li>instanceof Object===true</li>\n<li>函数有属性: prototype</li>\n<li>函数有方法: call ()/apply ()</li>\n<li>可以添加新的属性 / 方法</li>\n</ul>\n</li>\n<li>函数的 3 种不同角色\n<ul>\n<li>一般函数：直接调用</li>\n<li>构造函数：通过 new 调用</li>\n<li>对象：通过。调用内部的属性 / 方法</li>\n</ul>\n</li>\n<li>函数中的 this\n<ul>\n<li>显式指定谁: <span class=\"exturl\" data-url=\"aHR0cDovL29iai54eHg=\">obj.xxx</span>()</li>\n<li>通过 call/apply 指定谁调用: xxx.call (obj)</li>\n<li>不指定谁调用: xxx ()  : window</li>\n<li>回调函数：看背后是通过谁来调用的: window / 其它</li>\n</ul>\n</li>\n<li>匿名函数自调用:<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">w<span class=\"token punctuation\">,</span> obj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// 实现代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>专业术语为: IIFE (Immediately Invoked Function Expression) 立即调用函数表达式</li>\n</ul>\n</li>\n<li>回调函数的理解\n<ul>\n<li>什么函数才是回调函数？\n<ul>\n<li>你定义的</li>\n<li>你没有调用</li>\n<li>但它最终执行了 (在一定条件下或某个时刻)</li>\n</ul>\n</li>\n<li>常用的回调函数\n<ul>\n<li>dom 事件回调函数</li>\n<li>定时器回调函数</li>\n<li>ajax 请求回调函数 (后面讲解)</li>\n<li>生命周期回调函数 (后面讲解)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"函数高级\"><a class=\"anchor\" href=\"#函数高级\">#</a> 函数高级</h1>\n<h2 id=\"原型与原型链\"><a class=\"anchor\" href=\"#原型与原型链\">#</a> 原型与原型链</h2>\n<ul>\n<li>所有函数都有一个特别的属性:\n<ul>\n<li><code>prototype</code>  : 显式原型属性</li>\n</ul>\n</li>\n<li>所有实例对象都有一个特别的属性:\n<ul>\n<li><code>__proto__</code>  : 隐式原型属性</li>\n</ul>\n</li>\n<li>显式原型与隐式原型的关系\n<ul>\n<li>函数的 prototype: 定义函数时被自动赋值，值默认为 {}, 即用为原型对象</li>\n<li>实例对象的__proto__: 在创建实例对象时被自动添加，并赋值为构造函数的 prototype 值</li>\n<li>原型对象即为当前实例对象的父对象</li>\n</ul>\n</li>\n<li>原型链\n<ul>\n<li>所有的实例对象都有__proto__属性，它指向的就是原型对象</li>\n<li>这样通过__proto__属性就形成了一个链的结构 ----&gt; 原型链</li>\n<li>当查找对象内部的属性 / 方法时，js 引擎自动沿着这个原型链查找</li>\n<li>当给对象属性赋值时不会使用原型链，而只是在当前对象中进行操作</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"执行上下文与执行上下文栈\"><a class=\"anchor\" href=\"#执行上下文与执行上下文栈\">#</a> 执行上下文与执行上下文栈</h2>\n<ul>\n<li>变量提升与函数提升\n<ul>\n<li>变量提升：在变量定义语句之前，就可以访问到这个变量 (undefined)</li>\n<li>函数提升：在函数定义语句之前，就执行该函数</li>\n<li>先有变量提升，再有函数提升</li>\n</ul>\n</li>\n<li>理解\n<ul>\n<li>执行上下文：由 js 引擎自动创建的对象，包含对应作用域中的所有变量属性</li>\n<li>执行上下文栈：用来管理产生的多个执行上下文</li>\n</ul>\n</li>\n<li>分类:\n<ul>\n<li>全局: window</li>\n<li>函数：对程序员来说是透明的</li>\n</ul>\n</li>\n<li>生命周期\n<ul>\n<li>全局：准备执行全局代码前产生，当页面刷新 / 关闭页面时死亡</li>\n<li>函数：调用函数时产生，函数执行完时死亡</li>\n</ul>\n</li>\n<li>包含哪些属性:\n<ul>\n<li>全局 :\n<ul>\n<li>用 var 定义的全局变量  ==&gt;undefined</li>\n<li>使用 function 声明的函数   ===&gt;function</li>\n<li>this   ===&gt;window</li>\n</ul>\n</li>\n<li>函数\n<ul>\n<li>用 var 定义的局部变量  ==&gt;undefined</li>\n<li>使用 function 声明的函数   ===&gt;function</li>\n<li>this   ===&gt; 调用函数的对象，如果没有指定就是 window</li>\n<li>形参变量   ===&gt; 对应实参值</li>\n<li>arguments ===&gt; 实参列表的伪数组</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>执行上下文创建和初始化的过程\n<ul>\n<li>全局:\n<ul>\n<li>在全局代码执行前最先创建一个全局执行上下文 (window)</li>\n<li>收集一些全局变量，并初始化</li>\n<li>将这些变量设置为 window 的属性</li>\n</ul>\n</li>\n<li>函数:\n<ul>\n<li>在调用函数时，在执行函数体之前先创建一个函数执行上下文</li>\n<li>收集一些局部变量，并初始化</li>\n<li>将这些变量设置为执行上下文的属性</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"作用域与作用域链\"><a class=\"anchor\" href=\"#作用域与作用域链\">#</a> 作用域与作用域链</h2>\n<ul>\n<li>理解:\n<ul>\n<li>作用域：一块代码区域，在编码时就确定了，不会再变化</li>\n<li>作用域链：多个嵌套的作用域形成的由内向外的结构，用于查找变量</li>\n</ul>\n</li>\n<li>分类:\n<ul>\n<li>全局</li>\n<li>函数</li>\n<li>js 没有块作用域 (在 ES6 之前)</li>\n</ul>\n</li>\n<li>作用\n<ul>\n<li>作用域：隔离变量，可以在不同作用域定义同名的变量不冲突</li>\n<li>作用域链：查找变量</li>\n</ul>\n</li>\n<li>区别作用域与执行上下文\n<ul>\n<li>作用域：静态的，编码时就确定了 (不是在运行时), 一旦确定就不会变化了</li>\n<li>执行上下文：动态的，执行代码时动态创建，当执行结束消失</li>\n<li>联系：执行上下文环境是在对应的作用域中的</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"闭包\"><a class=\"anchor\" href=\"#闭包\">#</a> 闭包</h2>\n<ul>\n<li>理解:\n<ul>\n<li>当嵌套的内部函数引用了外部函数的变量时就产生了闭包</li>\n<li>通过 chrome 工具得知：闭包本质是内部函数中的一个对象，这个对象中包含引用的变量属性</li>\n</ul>\n</li>\n<li>作用:\n<ul>\n<li>延长局部变量的生命周期</li>\n<li>让函数外部能操作内部的局部变量</li>\n</ul>\n</li>\n<li>写一个闭包程序</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> fn2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>闭包应用:\n<ul>\n<li>模块化：封装一些数据以及操作数据的函数，向外暴露一些行为</li>\n<li>循环遍历加监听</li>\n<li>JS 框架 (jQuery) 大量使用了闭包</li>\n</ul>\n</li>\n<li>缺点:\n<ul>\n<li>变量占用内存的时间可能会过长</li>\n<li>可能导致内存泄露</li>\n<li>解决:\n<ul>\n<li>及时释放 : f = null; // 让内部函数对象成为垃圾对象</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"内存溢出与内存泄露\"><a class=\"anchor\" href=\"#内存溢出与内存泄露\">#</a> 内存溢出与内存泄露</h2>\n<ol>\n<li>内存溢出</li>\n</ol>\n<ul>\n<li>一种程序运行出现的错误</li>\n<li>当程序运行需要的内存超过了剩余的内存时，就出抛出内存溢出的错误</li>\n</ul>\n<ol start=\"2\">\n<li>内存泄露</li>\n</ol>\n<ul>\n<li>占用的内存没有及时释放</li>\n<li>内存泄露积累多了就容易导致内存溢出</li>\n<li>常见的内存泄露:\n<ul>\n<li>意外的全局变量</li>\n<li>没有及时清理的计时器或回调函数</li>\n<li>闭包</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"对象高级\"><a class=\"anchor\" href=\"#对象高级\">#</a> 对象高级</h1>\n<h2 id=\"对象的创建模式\"><a class=\"anchor\" href=\"#对象的创建模式\">#</a> 对象的创建模式</h2>\n<ul>\n<li>\n<p>Object 构造函数模式</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>obj<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Tom'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>obj<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>对象字面量模式</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">name</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Tom'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function-variable function\">setName</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>构造函数模式</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tom'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>构造函数 + 原型的组合模式</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tom'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"继承模式\"><a class=\"anchor\" href=\"#继承模式\">#</a> 继承模式</h2>\n<ul>\n<li>原型链继承：得到方法<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Parent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">test</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 子类型的原型指向父类型实例</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">=</span> Child</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 有 test ()</span></pre></td></tr></table></figure></li>\n<li>借用构造函数：得到属性<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xxx</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xxx <span class=\"token operator\">=</span> xxx<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Parent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">test</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Child</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xxx<span class=\"token punctuation\">,</span>yyy</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">Parent</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> xxx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 借用构造函数   this.Parent (xxx)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//child.xxx 为 'a', 但 child 没有 test ()</span></pre></td></tr></table></figure></li>\n<li>组合<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xxx</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xxx <span class=\"token operator\">=</span> xxx<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Parent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">test</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Child</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xxx<span class=\"token punctuation\">,</span>yyy</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">Parent</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> xxx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 借用构造函数   this.Parent (xxx)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 得到 test ()</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">var</span> child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//child.xxx 为 'a', 也有 test ()</span></pre></td></tr></table></figure></li>\n<li>new 一个对象背后做了些什么？\n<ul>\n<li>创建一个空对象</li>\n<li>给对象设置__proto__, 值为构造函数对象的 prototype 属性值   this.<strong>proto</strong> = Fn.prototype</li>\n<li>执行构造函数体 (给对象添加属性 / 方法)</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"线程机制与事件机制\"><a class=\"anchor\" href=\"#线程机制与事件机制\">#</a> 线程机制与事件机制</h1>\n<h2 id=\"线程与进程\"><a class=\"anchor\" href=\"#线程与进程\">#</a> 线程与进程</h2>\n<ul>\n<li>进程:\n<ul>\n<li>程序的一次执行，它占有一片独有的内存空间</li>\n<li>可以通过 windows 任务管理器查看进程</li>\n</ul>\n</li>\n<li>线程:\n<ul>\n<li>是进程内的一个独立执行单元</li>\n<li>是程序执行的一个完整流程</li>\n<li>是 CPU 的最小的调度单元</li>\n</ul>\n</li>\n<li>关系\n<ul>\n<li>一个进程至少有一个线程 (主)</li>\n<li>程序是在某个进程中的某个线程执行的</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"浏览器内核模块组成\"><a class=\"anchor\" href=\"#浏览器内核模块组成\">#</a> 浏览器内核模块组成</h2>\n<ul>\n<li>主线程\n<ul>\n<li>js 引擎模块：负责 js 程序的编译与运行</li>\n<li>html,css 文档解析模块：负责页面文本的解析</li>\n<li>DOM/CSS 模块：负责 dom/css 在内存中的相关处理</li>\n<li>布局和渲染模块：负责页面的布局和效果的绘制 (内存中的对象)</li>\n</ul>\n</li>\n<li>分线程\n<ul>\n<li>定时器模块：负责定时器的管理</li>\n<li>DOM 事件模块：负责事件的管理</li>\n<li>网络请求模块：负责 Ajax 请求</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"js线程\"><a class=\"anchor\" href=\"#js线程\">#</a> js 线程</h2>\n<ul>\n<li>js 是单线程执行的 (回调函数也是在主线程)</li>\n<li>H5 提出了实现多线程的方案: Web Workers</li>\n<li>只能是主线程更新界面</li>\n</ul>\n<h2 id=\"定时器问题\"><a class=\"anchor\" href=\"#定时器问题\">#</a> 定时器问题:</h2>\n<ul>\n<li>定时器并不真正完全定时</li>\n<li>如果在主线程执行了一个长时间的操作，可能导致延时才处理</li>\n</ul>\n<h2 id=\"事件处理机制图\"><a class=\"anchor\" href=\"#事件处理机制图\">#</a> 事件处理机制 (图)</h2>\n<ul>\n<li>代码分类\n<ul>\n<li>初始化执行代码：包含绑定 dom 事件监听，设置定时器，发送 ajax 请求的代码</li>\n<li>回调执行代码：处理回调逻辑</li>\n</ul>\n</li>\n<li>js 引擎执行代码的基本流程:\n<ul>\n<li>初始化代码 ===&gt; 回调代码</li>\n</ul>\n</li>\n<li>模型的 2 个重要组成部分:\n<ul>\n<li>事件管理模块</li>\n<li>回调队列</li>\n</ul>\n</li>\n<li>模型的运转流程\n<ul>\n<li>执行初始化代码，将事件回调函数交给对应模块管理</li>\n<li>当事件发生时，管理模块会将回调函数及其数据添加到回调列队中</li>\n<li>只有当初始化代码执行完后 (可能要一定时间), 才会遍历读取回调队列中的回调函数执行</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"h5-web-workers\"><a class=\"anchor\" href=\"#h5-web-workers\">#</a> H5 Web Workers</h2>\n<ul>\n<li>\n<p>可以让 js 在分线程执行</p>\n</li>\n<li>\n<p>Worker</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> worker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token string\">'worker.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>worker<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onMessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">:</span> 用来接收另一个线程发送过来的数据的回调</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>worker<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> 向另一个线程发送数据</pre></td></tr></table></figure></li>\n<li>\n<p>问题:</p>\n<ul>\n<li>worker 内代码不能操作 DOM 更新 UI</li>\n<li>不是每个浏览器都支持这个新特性</li>\n<li>不能跨域加载 JS</li>\n</ul>\n</li>\n<li>\n<p>svn 版本控制</p>\n</li>\n<li>\n<p>svn server</p>\n</li>\n</ul>\n","categories":["前端学习","JS"],"tags":["JS"]},{"title":"JS模块化（简版）","url":"/2023/11/23/qianduan/JS/mo/%E6%A8%A1%E5%9D%97%E5%8C%96_%E7%AC%94%E8%AE%B0/","content":"<h2 id=\"js模块化\"><a class=\"anchor\" href=\"#js模块化\">#</a> JS 模块化</h2>\n<ul>\n<li>模块化的理解</li>\n<li>什么是模块？\n<ul>\n<li>将一个复杂的程序依据一定的规则 (规范) 封装成几个块 (文件), 并进行组合在一起</li>\n<li>块的内部数据 / 实现是私有的，只是向外部暴露一些接口 (方法) 与外部其它模块通信</li>\n</ul>\n</li>\n<li>一个模块的组成\n<ul>\n<li>数据 ---&gt; 内部的属性</li>\n<li>操作数据的行为 ---&gt; 内部的函数</li>\n</ul>\n</li>\n<li>模块化\n<ul>\n<li>编码时是按照模块一个一个编码的，整个项目就是一个模块化的项目</li>\n</ul>\n</li>\n<li>模块化的进化过程\n<ul>\n<li>全局 function 模式 :\n<ul>\n<li>编码：全局变量 / 函数</li>\n<li>问题：污染全局命名空间，容易引起命名冲突 / 数据不安全</li>\n</ul>\n</li>\n<li>namespace 模式 :\n<ul>\n<li>编码：将数据 / 行为封装到对象中</li>\n<li>解决：命名冲突 (减少了全局变量)</li>\n<li>问题：数据不安全 (外部可以直接修改模块内部的数据)</li>\n</ul>\n</li>\n<li>IIFE 模式 / 增强\n<ul>\n<li>IIFE : 立即调用函数表达式 ---&gt; 匿名函数自调用</li>\n<li>编码：将数据和行为封装到一个函数内部，通过给 window 添加属性来向外暴露接口</li>\n<li>引入依赖：通过函数形参来引入依赖模块<pre><code>(function(window, module2)&#123;\n  var data = 'atguigu.com'\n  function foo() &#123;\n     module2.xxx()\n     console.log('foo()'+data)\n  &#125;\n  function bar() &#123;\n     console.log('bar()'+data)\n  &#125;\n  \n  window.module = &#123;foo&#125;\n&#125;)(window, module2)\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>模块化规范\n<ul>\n<li>CommonJS\n<ul>\n<li>Node.js : 服务器端</li>\n<li>Browserify : 浏览器端    也称为 js 的打包工具</li>\n<li>基本语法:\n<ul>\n<li>定义暴露模块 : exports<pre><code>exports.xxx = value\nmodule.exports = value\n</code></pre>\n</li>\n</ul>\n引入模块 : require<pre><code>var module = require('模块名/模块相对路径')\n</code></pre>\n</li>\n<li>引入模块发生在什么时候？\n<ul>\n<li>Node : 运行时，动态同步引入</li>\n<li>Browserify : 在运行前对模块进行编译 / 转译 / 打包的处理 (已经将依赖的模块包含进来了),<br />\n 运行的是打包生成的 js, 运行时不存在需要再从远程引入依赖模块</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>AMD : 浏览器端\n<ul>\n<li>require.js</li>\n<li>基本语法\n<ul>\n<li>定义暴露模块: define ([依赖模块名], function (){return 模块对象})</li>\n<li>引入模块: require ([' 模块 1', ' 模块 2', ' 模块 3'], function (m1, m2){// 使用模块对象})</li>\n<li>配置:<pre><code>require.config(&#123;\n  //基本路径\n  baseUrl : 'js/',\n  //标识名称与路径的映射\n  paths : &#123;\n    '模块1' : 'modules/模块1',\n    '模块2' : 'modules/模块2',\n    'angular' : 'libs/angular',\n    'angular-messages' : 'libs/angular-messages'\n  &#125;,\n  //非AMD的模块\n  shim : &#123;\n    'angular' : &#123;\n        exports : 'angular'\n    &#125;,\n    'angular-messages' : &#123;\n        exports : 'angular-messages',\n        deps : ['angular']\n    &#125;\n  &#125;\n&#125;)\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>CMD : 浏览器端\n<ul>\n<li>sea.js</li>\n<li>基本语法\n<ul>\n<li>定义暴露模块:<pre><code>define(function(require, module, exports)&#123;\n  通过require引入依赖模块\n  通过module/exports来暴露模块\n  exports.xxx = value\n&#125;)\n</code></pre>\n</li>\n<li>使用模块 seajs.use ([' 模块 1', ' 模块 2'])</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ES6\n<ul>\n<li>ES6 内置了模块化的实现</li>\n<li>基本语法\n<ul>\n<li>\n<p>定义暴露模块 : export</p>\n<ul>\n<li>暴露一个对象:<pre><code>export default 对象\n</code></pre>\n</li>\n<li>暴露多个:<pre><code>export var xxx = value1\nexport let yyy = value2\n\nvar xxx = value1\nlet yyy = value2\nexport &#123;xxx, yyy&#125;\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>引入使用模块 : import</p>\n<ul>\n<li>default 模块:<pre><code>import xxx  from '模块路径/模块名'\n</code></pre>\n</li>\n<li>其它模块<pre><code>import &#123;xxx, yyy&#125; from '模块路径/模块名'\nimport * as module1 from '模块路径/模块名'\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>问题：所有浏览器还不能直接识别 ES6 模块化的语法</li>\n<li>解决:\n<ul>\n<li>使用 Babel 将 ES6---&gt;ES5 (使用了 CommonJS) ---- 浏览器还不能直接支行</li>\n<li>使用 Browserify---&gt; 打包处理 ---- 浏览器可以运行</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","categories":["前端学习","JS","模块化"],"tags":["JS"]},{"title":"JS模块化","url":"/2023/11/23/qianduan/JS/mo/1_%E6%A8%A1%E5%9D%97%E5%8C%96%E8%BF%9B%E5%8C%96%E5%8F%B2%E6%95%99%E7%A8%8B/","content":"<h1 id=\"模块化进化史教程\"><a class=\"anchor\" href=\"#模块化进化史教程\">#</a> 模块化进化史教程</h1>\n<h2 id=\"模块化进化史教程-2\"><a class=\"anchor\" href=\"#模块化进化史教程-2\">#</a> 模块化进化史教程</h2>\n<ol>\n<li>全局 function 模式</li>\n</ol>\n<ul>\n<li>module1.js<pre><code>//数据\nlet data = 'atguigu.com'\n\n//操作数据的函数\nfunction foo() &#123;\n  console.log(`foo() $&#123;data&#125;`)\n&#125;\nfunction bar() &#123;\n  console.log(`bar() $&#123;data&#125;`)\n&#125;\n</code></pre>\n</li>\n<li>module2.js<pre><code>let data2 = 'other data'\n\nfunction foo() &#123;  //与另一个模块中的函数冲突了\n  console.log(`foo() $&#123;data2&#125;`)\n&#125;\n</code></pre>\n</li>\n<li>test1.html<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;module1.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;module2.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot;&gt;\n\n  let data = &quot;修改后的数据&quot;\n  foo()\n  bar()\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>说明:\n<ul>\n<li>全局函数模式：将不同的功能封装成不同的全局函数</li>\n<li>问题: Global 被污染了，很容易引起命名冲突</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>namespace 模式</li>\n</ol>\n<ul>\n<li>module1.js<pre><code>let myModule = &#123;\n  data: 'atguigu.com',\n  foo() &#123;\n    console.log(`foo() $&#123;this.data&#125;`)\n  &#125;,\n  bar() &#123;\n    console.log(`bar() $&#123;this.data&#125;`)\n  &#125;\n&#125;\n</code></pre>\n</li>\n<li>module2.js<pre><code>let myModule2 = &#123;\n  data: 'atguigu.com2222',\n  foo() &#123;\n    console.log(`foo() $&#123;this.data&#125;`)\n  &#125;,\n  bar() &#123;\n    console.log(`bar() $&#123;this.data&#125;`)\n  &#125;\n&#125;\n</code></pre>\n</li>\n<li>test2.html<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;module2.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;module22.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot;&gt;\n  myModule.foo()\n  myModule.bar()\n\n  myModule2.foo()\n  myModule2.bar()\n\n  myModule.data = 'other data' //能直接修改模块内部的数据\n  myModule.foo()\n\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>说明\n<ul>\n<li>namespace 模式：简单对象封装</li>\n<li>作用：减少了全局变量</li>\n<li>问题：不安全</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>IIFE 模式</li>\n</ol>\n<ul>\n<li>module3.js<pre><code>(function (window) &#123;\n  //数据\n  let data = 'atguigu.com'\n\n  //操作数据的函数\n  function foo() &#123; //用于暴露有函数\n    console.log(`foo() $&#123;data&#125;`)\n  &#125;\n\n  function bar() &#123;//用于暴露有函数\n    console.log(`bar() $&#123;data&#125;`)\n    otherFun() //内部调用\n  &#125;\n\n  function otherFun() &#123; //内部私有的函数\n    console.log('otherFun()')\n  &#125;\n\n  //暴露行为\n  window.myModule = &#123;foo, bar&#125;\n&#125;)(window)\n</code></pre>\n</li>\n<li>test3.html<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;module3.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot;&gt;\n  myModule.foo()\n  myModule.bar()\n  //myModule.otherFun()  //myModule.otherFun is not a function\n  console.log(myModule.data) //undefined 不能访问模块内部数据\n  myModule.data = 'xxxx' //不是修改的模块内部的data\n  myModule.foo() //没有改变\n\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>说明:\n<ul>\n<li>IIFE 模式：匿名函数自调用 (闭包)</li>\n<li>IIFE : immediately-invoked function expression (立即调用函数表达式)</li>\n<li>作用：数据是私有的，外部只能通过暴露的方法操作</li>\n<li>问题：如果当前这个模块依赖另一个模块怎么办？</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li>IIFE 模式增强</li>\n</ol>\n<ul>\n<li>引入 jquery 到项目中</li>\n<li>module4.js<pre><code>(function (window, $) &#123;\n  //数据\n  let data = 'atguigu.com'\n\n  //操作数据的函数\n  function foo() &#123; //用于暴露有函数\n    console.log(`foo() $&#123;data&#125;`)\n    $('body').css('background', 'red')\n  &#125;\n\n  function bar() &#123;//用于暴露有函数\n    console.log(`bar() $&#123;data&#125;`)\n    otherFun() //内部调用\n  &#125;\n\n  function otherFun() &#123; //内部私有的函数\n    console.log('otherFun()')\n  &#125;\n\n  //暴露行为\n  window.myModule = &#123;foo, bar&#125;\n&#125;)(window, jQuery)\n</code></pre>\n</li>\n<li>test4.html<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;jquery-1.10.1.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;module4.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot;&gt;\n  myModule.foo()\n&lt;/script&gt;\n</code></pre>\n</li>\n<li>说明\n<ul>\n<li>IIFE 模式增强：引入依赖</li>\n<li>这就是现代模块实现的基石</li>\n</ul>\n</li>\n</ul>\n<ol start=\"5\">\n<li>页面加载多个 js 的问题</li>\n</ol>\n<ul>\n<li>页面:<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;module1.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;module2.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;module3.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;module4.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n</li>\n<li>说明\n<ul>\n<li>一个页面需要引入多个 js 文件</li>\n<li>问题:\n<ul>\n<li>请求过多</li>\n<li>依赖模糊</li>\n<li>难以维护</li>\n</ul>\n</li>\n<li>这些问题可以通过现代模块化编码和项目构建来解决</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"commonjs_node模块化教程\"><a class=\"anchor\" href=\"#commonjs_node模块化教程\">#</a> CommonJS_Node 模块化教程</h1>\n<h2 id=\"nodejs模块化教程\"><a class=\"anchor\" href=\"#nodejs模块化教程\">#</a> Node.js 模块化教程</h2>\n<ol>\n<li>下载安装 node.js</li>\n<li>创建项目结构</li>\n</ol>\n<pre><code>|-modules\n  |-module1.js\n  |-module2.js\n  |-module3.js\n|-app.js\n|-package.json\n  &#123;\n    &quot;name&quot;: &quot;commonJS-node&quot;,\n    &quot;version&quot;: &quot;1.0.0&quot;\n  &#125;\n</code></pre>\n<ol start=\"3\">\n<li>下载第三方模块</li>\n</ol>\n<ul>\n<li>npm install uniq --save</li>\n</ul>\n<ol start=\"4\">\n<li>模块化编码</li>\n</ol>\n<ul>\n<li>module1.js<pre><code>module.exports = &#123;\n  foo() &#123;\n    console.log('moudle1 foo()')\n  &#125;\n&#125;\n</code></pre>\n</li>\n<li>module2.js<pre><code>module.exports = function () &#123;\n  console.log('module2()')\n&#125;\n</code></pre>\n</li>\n<li>module3.js<pre><code>exports.foo = function () &#123;\n  console.log('module3 foo()')\n&#125;\n\nexports.bar = function () &#123;\n  console.log('module3 bar()')\n&#125;\n</code></pre>\n</li>\n<li>app.js<pre><code>/**\n  1. 定义暴露模块:\n    module.exports = value;\n    exports.xxx = value;\n  2. 引入模块:\n    var module = require(模块名或模块路径);\n */\n&quot;use strict&quot;;\n//引用模块\nlet module1 = require('./modules/module1')\nlet module2 = require('./modules/module2')\nlet module3 = require('./modules/module3')\n\nlet uniq = require('uniq')\nlet fs = require('fs')\n\n//使用模块\nmodule1.foo()\nmodule2()\nmodule3.foo()\nmodule3.bar()\n\nconsole.log(uniq([1, 3, 1, 4, 3]))\n\nfs.readFile('app.js', function (error, data) &#123;\n  console.log(data.toString())\n&#125;)\n</code></pre>\n</li>\n</ul>\n<ol start=\"5\">\n<li>通过 node 运行 app.js</li>\n</ol>\n<ul>\n<li>命令: node app.js</li>\n<li>工具：右键 --&gt; 运行</li>\n</ul>\n<h1 id=\"commonjs-browserify模块化教程\"><a class=\"anchor\" href=\"#commonjs-browserify模块化教程\">#</a> CommonJS-Browserify 模块化教程</h1>\n<h2 id=\"browserify模块化使用教程\"><a class=\"anchor\" href=\"#browserify模块化使用教程\">#</a> Browserify 模块化使用教程</h2>\n<ol>\n<li>创建项目结构</li>\n</ol>\n<pre><code>|-js\n  |-dist //打包生成文件的目录\n  |-src //源码所在的目录\n    |-module1.js\n    |-module2.js\n    |-module3.js\n    |-app.js //应用主源文件\n|-index.html\n|-package.json\n  &#123;\n    &quot;name&quot;: &quot;browserify-test&quot;,\n    &quot;version&quot;: &quot;1.0.0&quot;\n  &#125;\n</code></pre>\n<ol start=\"2\">\n<li>下载 browserify</li>\n</ol>\n<ul>\n<li>全局: npm install browserify -g</li>\n<li>局部: npm install browserify --save-dev</li>\n</ul>\n<ol start=\"3\">\n<li>定义模块代码</li>\n</ol>\n<ul>\n<li>module1.js<pre><code>module.exports = &#123;\n  foo() &#123;\n    console.log('moudle1 foo()')\n  &#125;\n&#125;\n</code></pre>\n</li>\n<li>module2.js<pre><code>module.exports = function () &#123;\n  console.log('module2()')\n&#125;\n</code></pre>\n</li>\n<li>module3.js<pre><code>exports.foo = function () &#123;\n  console.log('module3 foo()')\n&#125;\n\nexports.bar = function () &#123;\n  console.log('module3 bar()')\n&#125;\n</code></pre>\n</li>\n<li>app.js (应用的主 js)<pre><code>//引用模块\nlet module1 = require('./module1')\nlet module2 = require('./module2')\nlet module3 = require('./module3')\n\nlet uniq = require('uniq')\n\n//使用模块\nmodule1.foo()\nmodule2()\nmodule3.foo()\nmodule3.bar()\n\nconsole.log(uniq([1, 3, 1, 4, 3]))\n</code></pre>\n</li>\n<li>打包处理 js:\n<ul>\n<li>browserify js/src/app.js -o js/dist/bundle.js</li>\n</ul>\n</li>\n<li>页面使用引入:<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;js/dist/bundle.js&quot;&gt;&lt;/script&gt; \n</code></pre>\n</li>\n</ul>\n<h1 id=\"amd-requirejs模块化教程\"><a class=\"anchor\" href=\"#amd-requirejs模块化教程\">#</a> AMD-RequireJS 模块化教程</h1>\n<h2 id=\"requirejs使用教程\"><a class=\"anchor\" href=\"#requirejs使用教程\">#</a> require.js 使用教程</h2>\n<ol>\n<li>下载 require.js, 并引入</li>\n</ol>\n<ul>\n<li>官网: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5yZXF1aXJlanMuY24v\">http://www.requirejs.cn/</span></li>\n<li>github : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JlcXVpcmVqcy9yZXF1aXJlanM=\">https://github.com/requirejs/requirejs</span></li>\n<li>将 require.js 导入项目: js/libs/require.js</li>\n</ul>\n<ol start=\"2\">\n<li>创建项目结构</li>\n</ol>\n<pre><code>|-js\n  |-libs\n    |-require.js\n  |-modules\n    |-alerter.js\n    |-dataService.js\n  |-main.js\n|-index.html\n</code></pre>\n<ol start=\"3\">\n<li>定义 require.js 的模块代码</li>\n</ol>\n<ul>\n<li>dataService.js<pre><code>define(function () &#123;\n  let msg = 'atguigu.com'\n\n  function getMsg() &#123;\n    return msg.toUpperCase()\n  &#125;\n\n  return &#123;getMsg&#125;\n&#125;)\n</code></pre>\n</li>\n<li>alerter.js<pre><code>define(['dataService', 'jquery'], function (dataService, $) &#123;\n  let name = 'Tom2'\n\n  function showMsg() &#123;\n    $('body').css('background', 'gray')\n    alert(dataService.getMsg() + ', ' + name)\n  &#125;\n\n  return &#123;showMsg&#125;\n&#125;)\n</code></pre>\n</li>\n</ul>\n<ol start=\"4\">\n<li>应用主 (入口) js: main.js</li>\n</ol>\n<pre><code>(function () &#123;\n  //配置\n  require.config(&#123;\n    //基本路径\n    baseUrl: &quot;js/&quot;,\n    //模块标识名与模块路径映射\n    paths: &#123;\n      &quot;alerter&quot;: &quot;modules/alerter&quot;,\n      &quot;dataService&quot;: &quot;modules/dataService&quot;,\n    &#125;\n  &#125;)\n  //引入使用模块\n  require( ['alerter'], function(alerter) &#123;\n    alerter.showMsg()\n  &#125;)\n&#125;)()\n</code></pre>\n<ol start=\"5\">\n<li>页面使用模块:<br />\n&lt;script data-main=&quot;js/main&quot; src=&quot;js/libs/require.js&quot;&gt;&lt;/script&gt;</li>\n</ol>\n<hr />\n<ol start=\"6\">\n<li>使用第三方基于 require.js 的框架 (jquery)</li>\n</ol>\n<ul>\n<li>将 jquery 的库文件导入到项目:\n<ul>\n<li>js/libs/jquery-1.10.1.js</li>\n</ul>\n</li>\n<li>在 main.js 中配置 jquery 路径<pre><code>paths: &#123;\n          'jquery': 'libs/jquery-1.10.1'\n      &#125;\n</code></pre>\n</li>\n<li>在 alerter.js 中使用 jquery<pre><code>define(['dataService', 'jquery'], function (dataService, $) &#123;\n    var name = 'xfzhang'\n    function showMsg() &#123;\n        $('body').css(&#123;background : 'red'&#125;)\n        alert(name + ' '+dataService.getMsg())\n    &#125;\n    return &#123;showMsg&#125;\n&#125;)\n</code></pre>\n</li>\n</ul>\n<hr />\n<ol start=\"7\">\n<li>使用第三方不基于 require.js 的框架 (angular/angular-messages)</li>\n</ol>\n<ul>\n<li>将 angular.js 和 angular-messages.js 导入项目\n<ul>\n<li>js/libs/angular.js</li>\n<li>js/libs/angular-messages.js</li>\n</ul>\n</li>\n<li>在 main.js 中配置<pre><code>(function () &#123;\n  require.config(&#123;\n    //基本路径\n    baseUrl: &quot;js/&quot;,\n    //模块标识名与模块路径映射\n    paths: &#123;\n      //第三方库\n      'jquery' : 'libs/jquery-1.10.1',\n      'angular' : 'libs/angular',\n      'angular-messages' : 'libs/angular-messages',\n      //自定义模块\n      &quot;alerter&quot;: &quot;modules/alerter&quot;,\n      &quot;dataService&quot;: &quot;modules/dataService&quot;\n    &#125;,\n    /*\n     配置不兼容AMD的模块\n     exports : 指定导出的模块名\n     deps  : 指定所有依赖的模块的数组\n     */\n    shim: &#123;\n      'angular' : &#123;\n        exports : 'angular'\n      &#125;,\n      'angular-messages' : &#123;\n        exports : 'angular-messages',\n        deps : ['angular']\n      &#125;\n    &#125;\n  &#125;)\n  //引入使用模块\n  require( ['alerter', 'angular', 'angular-messages'], function(alerter, angular) &#123;\n    alerter.showMsg()\n    angular.module('myApp', ['ngMessages'])\n    angular.bootstrap(document,[&quot;myApp&quot;])\n  &#125;)\n&#125;)()\n</code></pre>\n</li>\n<li>页面:<pre><code>&lt;form name=&quot;myForm&quot;&gt;\n  用户名: &lt;input type=&quot;text&quot; name=&quot;username&quot; ng-model=&quot;username&quot; ng-required=&quot;true&quot;&gt;\n  &lt;div style=&quot;color: red;&quot; ng-show=&quot;myForm.username.$dirty&amp;&amp;myForm.username.$invalid&quot;&gt;用户名是必须的&lt;/div&gt;\n&lt;/form&gt;\n</code></pre>\n</li>\n</ul>\n<h1 id=\"cmd-seajs模块化教程\"><a class=\"anchor\" href=\"#cmd-seajs模块化教程\">#</a> CMD-SeaJS. 模块化教程</h1>\n<h2 id=\"seajs简单使用教程\"><a class=\"anchor\" href=\"#seajs简单使用教程\">#</a> sea.js 简单使用教程</h2>\n<ol>\n<li>下载 sea.js, 并引入</li>\n</ol>\n<ul>\n<li>官网: <span class=\"exturl\" data-url=\"aHR0cDovL3NlYWpzLm9yZy8=\">http://seajs.org/</span></li>\n<li>github : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlYWpzL3NlYWpz\">https://github.com/seajs/seajs</span></li>\n<li>将 sea.js 导入项目: js/libs/sea.js</li>\n</ul>\n<ol start=\"2\">\n<li>创建项目结构</li>\n</ol>\n<pre><code>|-js\n  |-libs\n    |-sea.js\n  |-modules\n    |-module1.js\n    |-module2.js\n    |-module3.js\n    |-module4.js\n    |-main.js\n|-index.html\n</code></pre>\n<ol start=\"3\">\n<li>定义 sea.js 的模块代码</li>\n</ol>\n<ul>\n<li>module1.js<pre><code>define(function (require, exports, module) &#123;\n  //内部变量数据\n  var data = 'atguigu.com'\n  //内部函数\n  function show() &#123;\n    console.log('module1 show() ' + data)\n  &#125;\n\n  //向外暴露\n  exports.show = show\n&#125;)\n</code></pre>\n</li>\n<li>module2.js<pre><code>define(function (require, exports, module) &#123;\n  module.exports = &#123;\n    msg: 'I Will Back'\n  &#125;\n&#125;)\n</code></pre>\n</li>\n<li>module3.js<pre><code>define(function (require, exports, module) &#123;\n  const API_KEY = 'abc123'\n  exports.API_KEY = API_KEY\n&#125;)\n</code></pre>\n</li>\n<li>module4.js<pre><code>define(function (require, exports, module) &#123;\n  //引入依赖模块(同步)\n  var module2 = require('./module2')\n\n  function show() &#123;\n    console.log('module4 show() ' + module2.msg)\n  &#125;\n\n  exports.show = show\n  //引入依赖模块(异步)\n  require.async('./module3', function (m3) &#123;\n    console.log('异步引入依赖模块3  ' + m3.API_KEY)\n  &#125;)\n&#125;)\n</code></pre>\n</li>\n<li>main.js : 主 (入口) 模块<pre><code>define(function (require) &#123;\n  var m1 = require('./module1')\n  var m4 = require('./module4')\n  m1.show()\n  m4.show()\n&#125;)\n</code></pre>\n</li>\n</ul>\n<ol start=\"4\">\n<li>index.html:</li>\n</ol>\n<pre><code>&lt;!--\n使用seajs:\n  1. 引入sea.js库\n  2. 如何定义导出模块 :\n    define()\n    exports\n    module.exports\n  3. 如何依赖模块:\n    require()\n  4. 如何使用模块:\n    seajs.use()\n--&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;js/libs/sea.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot;&gt;\n  seajs.use('./js/modules/main')\n&lt;/script&gt;\n</code></pre>\n<h1 id=\"es6模块化教程\"><a class=\"anchor\" href=\"#es6模块化教程\">#</a> ES6 模块化教程</h1>\n<h2 id=\"es6-babel-browserify使用教程\"><a class=\"anchor\" href=\"#es6-babel-browserify使用教程\">#</a> ES6-Babel-Browserify 使用教程</h2>\n<ol>\n<li>定义 package.json 文件</li>\n</ol>\n<pre><code>&#123;\n  &quot;name&quot; : &quot;es6-babel-browserify&quot;,\n  &quot;version&quot; : &quot;1.0.0&quot;\n&#125;\n</code></pre>\n<ol start=\"2\">\n<li>安装 babel-cli, babel-preset-es2015 和 browserify</li>\n</ol>\n<ul>\n<li>npm install babel-cli browserify -g\n<ul>\n<li>npm install babel-preset-es2015 --save-dev</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>定义.babelrc 文件<pre><code>&#123;\n&quot;presets&quot;: [&quot;es2015&quot;]\n</code></pre>\n</li>\n</ol>\n<p>}<br />\n```<br />\n4. 编码</p>\n<ul>\n<li>js/src/module1.js<pre><code>export function foo() &#123;\n  console.log('module1 foo()');\n&#125;\nexport let bar = function () &#123;\n  console.log('module1 bar()');\n&#125;\nexport const DATA_ARR = [1, 3, 5, 1]\n</code></pre>\n</li>\n<li>js/src/module2.js<pre><code>let data = 'module2 data'\n\nfunction fun1() &#123;\n  console.log('module2 fun1() ' + data);\n&#125;\n\nfunction fun2() &#123;\n  console.log('module2 fun2() ' + data);\n&#125;\n\nexport &#123;fun1, fun2&#125;\n</code></pre>\n</li>\n<li>js/src/module3.js<pre><code>export default &#123;\n  name: 'Tom',\n  setName: function (name) &#123;\n    this.name = name\n  &#125;\n&#125;\n</code></pre>\n</li>\n<li>js/src/app.js<pre><code>import &#123;foo, bar&#125; from './module1'\nimport &#123;DATA_ARR&#125; from './module1'\nimport &#123;fun1, fun2&#125; from './module2'\nimport person from './module3'\n\nimport $ from 'jquery'\n\n$('body').css('background', 'red')\n\nfoo()\nbar()\nconsole.log(DATA_ARR);\nfun1()\nfun2()\n\nperson.setName('JACK')\nconsole.log(person.name);\n</code></pre>\n</li>\n</ul>\n<ol start=\"5\">\n<li>编译</li>\n</ol>\n<ul>\n<li>使用 Babel 将 ES6 编译为 ES5 代码 (但包含 CommonJS 语法) : babel js/src -d js/lib</li>\n<li>使用 Browserify 编译 js : browserify js/lib/app.js -o js/lib/bundle.js</li>\n</ul>\n<ol start=\"6\">\n<li>页面中引入测试</li>\n</ol>\n<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;js/lib/bundle.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<ol start=\"7\">\n<li>引入第三方模块 (jQuery)<br />\n 1). 下载 jQuery 模块:\n<ul>\n<li>npm install jquery@1 --save<br />\n2). 在 app.js 中引入并使用</li>\n</ul>\n<pre><code>import $ from 'jquery'\n$('body').css('background', 'red')\n</code></pre>\n</li>\n</ol>\n","categories":["前端学习","JS","模块化"],"tags":["JS"]},{"title":"Vue3快速上手","url":"/2023/11/23/qianduan/VUE/Vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/","content":"<div class=\"note warning\">\n<p>由于本站渲染不支持 vue 语言，故采用渲染效果相近的 HTML 语言进行渲染。</p>\n</div>\n<h1 id=\"1-vue3简介\"><a class=\"anchor\" href=\"#1-vue3简介\">#</a> 1. Vue3 简介</h1>\n<ul>\n<li>2020 年 9 月 18 日， <code>Vue.js</code>  发布版 <code>3.0</code>  版本，代号： <code>One Piece</code></li>\n<li>经历了：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL2NvcmUvY29tbWl0cy9tYWlu\">4800 + 次提交</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3JmY3MvdHJlZS9tYXN0ZXIvYWN0aXZlLXJmY3M=\">40 + 个 RFC</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS1uZXh0L3B1bGxzP3E9aXMlM0FwcitpcyUzQW1lcmdlZCstYXV0aG9yJTNBYXBwJTJGZGVwZW5kYWJvdC1wcmV2aWV3Kw==\">600 + 次 PR</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL2NvcmUvZ3JhcGhzL2NvbnRyaWJ1dG9ycw==\">300 + 贡献者</span></li>\n<li>官方发版地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL2NvcmUvcmVsZWFzZXMvdGFnL3YzLjAuMA==\">Release v3.0.0 One Piece · vuejs/core</span></li>\n<li>截止 2023 年 10 月，最新的公开版本为： <code>3.3.4</code></li>\n</ul>\n<h2 id=\"11-性能的提升\"><a class=\"anchor\" href=\"#11-性能的提升\">#</a> 1.1. 【性能的提升】</h2>\n<ul>\n<li>\n<p>打包大小减少 <code>41%</code> 。</p>\n</li>\n<li>\n<p>初次渲染快 <code>55%</code> , 更新渲染快 <code>133%</code> 。</p>\n</li>\n<li>\n<p>内存减少 <code>54%</code> 。</p>\n</li>\n</ul>\n<h2 id=\"12-源码的升级\"><a class=\"anchor\" href=\"#12-源码的升级\">#</a> 1.2.【 源码的升级】</h2>\n<ul>\n<li>\n<p>使用 <code>Proxy</code>  代替 <code>defineProperty</code>  实现响应式。</p>\n</li>\n<li>\n<p>重写虚拟 <code>DOM</code>  的实现和 <code>Tree-Shaking</code> 。</p>\n</li>\n</ul>\n<h2 id=\"13-拥抱typescript\"><a class=\"anchor\" href=\"#13-拥抱typescript\">#</a> 1.3. 【拥抱 TypeScript】</h2>\n<ul>\n<li><code>Vue3</code>  可以更好的支持 <code>TypeScript</code> 。</li>\n</ul>\n<h2 id=\"14-新的特性\"><a class=\"anchor\" href=\"#14-新的特性\">#</a> 1.4. 【新的特性】</h2>\n<ol>\n<li>\n<p><code>Composition API</code> （组合 <code>API</code> ）：</p>\n<ul>\n<li>\n<p><code>setup</code></p>\n</li>\n<li>\n<p><code>ref</code>  与 <code>reactive</code></p>\n</li>\n<li>\n<p><code>computed</code>  与 <code>watch</code></p>\n<p>......</p>\n</li>\n</ul>\n</li>\n<li>\n<p>新的内置组件：</p>\n<ul>\n<li>\n<p><code>Fragment</code></p>\n</li>\n<li>\n<p><code>Teleport</code></p>\n</li>\n<li>\n<p><code>Suspense</code></p>\n<p>......</p>\n</li>\n</ul>\n</li>\n<li>\n<p>其他改变：</p>\n<ul>\n<li>\n<p>新的生命周期钩子</p>\n</li>\n<li>\n<p><code>data</code>  选项应始终被声明为一个函数</p>\n</li>\n<li>\n<p>移除 <code>keyCode</code>  支持作为 <code> v-on</code>  的修饰符</p>\n<p>......</p>\n</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"2-创建vue3工程\"><a class=\"anchor\" href=\"#2-创建vue3工程\">#</a> 2. 创建 Vue3 工程</h1>\n<h2 id=\"21-基于-vue-cli-创建\"><a class=\"anchor\" href=\"#21-基于-vue-cli-创建\">#</a> 2.1. 【基于 vue-cli 创建】</h2>\n<p>点击查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2d1aWRlL2NyZWF0aW5nLWEtcHJvamVjdC5odG1sI3Z1ZS1jcmVhdGU=\">官方文档</span></p>\n<blockquote>\n<p>备注：目前 <code>vue-cli</code>  已处于维护模式，官方推荐基于  <code>Vite</code>  创建项目。</p>\n</blockquote>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">## 查看 @vue/cli 版本，确保 @vue/cli 版本在 4.5.0 以上</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vue <span class=\"token operator\">--</span>version</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">## 安装或者升级你的 @vue/cli </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>npm install <span class=\"token operator\">-</span>g @vue/<span class=\"token function\">cli</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">## 执行创建命令</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>vue create vue_test</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">##  随后选择 3.x</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">##  Choose a version of Vue.js that you want to start the project with (Use arrow keys)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">##  > 3.x</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">##    2.x</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">## 启动</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>cd vue_test</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>npm run serve</pre></td></tr></table></figure><hr />\n<h2 id=\"22-基于-vite-创建推荐\"><a class=\"anchor\" href=\"#22-基于-vite-创建推荐\">#</a> 2.2. 【基于 vite 创建】(推荐)</h2>\n<p><code>vite</code>  是新一代前端构建工具，官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly92aXRlanMuY24v\">https://vitejs.cn</span>， <code>vite</code>  的优势如下：</p>\n<ul>\n<li>轻量快速的热重载（ <code>HMR</code> ），能实现极速的服务启动。</li>\n<li>对  <code>TypeScript</code> 、 <code>JSX</code> 、 <code>CSS</code>  等支持开箱即用。</li>\n<li>真正的按需编译，不再等待整个应用编译完成。</li>\n<li><code>webpack</code>  构建 与  <code>vite</code>  构建对比图如下：<br />\n&lt;img src=&quot;images/1683167182037-71c78210-8217-4e7d-9a83-e463035efbbe.png&quot; alt=&quot;webpack 构建&quot; title=&quot;webpack 构建&quot; style=&quot;zoom:20%;box-shadow:0 0 10px black&quot; /&gt;\t&lt;img src=&quot;images/1683167204081-582dc237-72bc-499e-9589-2cdfd452e62f.png&quot; alt=&quot;vite 构建&quot; title=&quot;vite 构建&quot; style=&quot;zoom: 20%;box-shadow:0 0 10px black&quot; /&gt;</li>\n</ul>\n<ul>\n<li>具体操作如下（点击查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbi52dWVqcy5vcmcvZ3VpZGUvcXVpY2stc3RhcnQuaHRtbCNjcmVhdGluZy1hLXZ1ZS1hcHBsaWNhdGlvbg==\">官方文档</span>）</li>\n</ul>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">## 1. 创建命令</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>npm create vue@latest</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">## 2. 具体配置</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">## 配置项目名称</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>√ Project name: vue3_test</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">## 是否添加 TypeScript 支持</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>√ Add TypeScript?  Yes</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">## 是否添加 JSX 支持</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>√ Add JSX Support?  No</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">## 是否添加路由环境</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>√ Add Vue Router <span class=\"token keyword\">for</span> Single Page Application development?  No</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">## 是否添加 pinia 环境</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>√ Add Pinia <span class=\"token keyword\">for</span> state management?  No</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">## 是否添加单元测试</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>√ Add Vitest <span class=\"token keyword\">for</span> Unit Testing?  No</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">## 是否添加端到端测试方案</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>√ Add an <span class=\"token keyword\">End</span><span class=\"token operator\">-</span>to-<span class=\"token keyword\">End</span> Testing Solution? » No</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">## 是否添加 ESLint 语法检查</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>√ Add ESLint <span class=\"token keyword\">for</span> code quality?  Yes</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">## 是否添加 Prettiert 代码格式化</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>√ Add Prettier <span class=\"token keyword\">for</span> code formatting?  No</pre></td></tr></table></figure><p>自己动手编写一个 App 组件</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>你好啊！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'App'</span> <span class=\"token comment\">// 组件名</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token selector\">.app</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #ddd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 0 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>安装官方推荐的 <code>vscode</code>  插件：</p>\n<p>&lt;img src=&quot;images/volar.png&quot; alt=&quot;Snipaste_2023-10-08_20-46-34&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;images/image-20231218085906380.png&quot; alt=&quot;image-20231218085906380&quot; style=&quot;zoom:42%;&quot; /&gt;</p>\n<p>总结：</p>\n<ul>\n<li><code>Vite</code>  项目中， <code>index.html</code>  是项目的入口文件，在项目最外层。</li>\n<li>加载 <code>index.html</code>  后， <code>Vite</code>  解析  <code>&lt;script type=&quot;module&quot; src=&quot;xxx&quot;&gt;</code>  指向的 <code>JavaScript</code> 。</li>\n<li><code>Vue3</code> ** 中是通过 ** <code>createApp</code>  函数创建一个应用实例。</li>\n</ul>\n<h2 id=\"23-一个简单的效果\"><a class=\"anchor\" href=\"#23-一个简单的效果\">#</a> 2.3. 【一个简单的效果】</h2>\n<p><code>Vue3</code>  向下兼容 <code>Vue2</code>  语法，且 <code>Vue3</code>  中的模板中可以没有根标签</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>年龄：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改名字<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeAge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>年龄+1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>showTel<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我查看联系方式<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'App'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token literal-property property\">tel</span><span class=\"token operator\">:</span><span class=\"token string\">'13888888888'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token function\">changeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'zhang-san'</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token function\">changeAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token function\">showTel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"3-vue3核心语法\"><a class=\"anchor\" href=\"#3-vue3核心语法\">#</a> 3. Vue3 核心语法</h1>\n<h2 id=\"31-optionsapi-与-compositionapi\"><a class=\"anchor\" href=\"#31-optionsapi-与-compositionapi\">#</a> 3.1.  【OptionsAPI 与 CompositionAPI】</h2>\n<ul>\n<li><code>Vue2</code>  的 <code>API</code>  设计是 <code>Options</code> （配置）风格的。</li>\n<li><code>Vue3</code>  的 <code>API</code>  设计是 <code>Composition</code> （组合）风格的。</li>\n</ul>\n<h3 id=\"options-api-的弊端\"><a class=\"anchor\" href=\"#options-api-的弊端\">#</a> Options API 的弊端</h3>\n<p><code>Options</code>  类型的  <code>API</code> ，数据、方法、计算属性等，是分散在： <code>data</code> 、 <code>methods</code> 、 <code>computed</code>  中的，若想新增或者修改一个需求，就需要分别修改： <code>data</code> 、 <code>methods</code> 、 <code>computed</code> ，不便于维护和复用。</p>\n<p>&lt;img src=&quot;images/1696662197101-55d2b251-f6e5-47f4-b3f1-d8531bbf9279.gif&quot; alt=&quot;1.gif&quot; style=&quot;zoom:70%;border-radius:20px&quot; /&gt;&lt;img src=&quot;images/1696662200734-1bad8249-d7a2-423e-a3c3-ab4c110628be.gif&quot; alt=&quot;2.gif&quot; style=&quot;zoom:70%;border-radius:20px&quot; /&gt;</p>\n<h3 id=\"composition-api-的优势\"><a class=\"anchor\" href=\"#composition-api-的优势\">#</a> Composition API 的优势</h3>\n<p>可以用函数的方式，更加优雅的组织代码，让相关功能的代码更加有序的组织在一起。</p>\n<p>&lt;img src=&quot;images/1696662249851-db6403a1-acb5-481a-88e0-e1e34d2ef53a.gif&quot; alt=&quot;3.gif&quot; style=&quot;height:300px;border-radius:10px&quot;  /&gt;&lt;img src=&quot;images/1696662256560-7239b9f9-a770-43c1-9386-6cc12ef1e9c0.gif&quot; alt=&quot;4.gif&quot; style=&quot;height:300px;border-radius:10px&quot;  /&gt;</p>\n<blockquote>\n<p>说明：以上四张动图原创作者：大帅老猿</p>\n</blockquote>\n<h2 id=\"32-拉开序幕的-setup\"><a class=\"anchor\" href=\"#32-拉开序幕的-setup\">#</a> 3.2. 【拉开序幕的 setup】</h2>\n<h3 id=\"setup-概述\"><a class=\"anchor\" href=\"#setup-概述\">#</a> setup 概述</h3>\n<p><code>setup</code>  是 <code>Vue3</code>  中一个新的配置项，值是一个函数，它是  <code>Composition API</code>  <strong>“表演的舞台</strong><em><strong>”</strong></em>，组件中所用到的：数据、方法、计算属性、监视...... 等等，均配置在 <code>setup</code>  中。</p>\n<p>特点如下：</p>\n<ul>\n<li><code>setup</code>  函数返回的对象中的内容，可直接在模板中使用。</li>\n<li><code>setup</code>  中访问 <code>this</code>  是 <code>undefined</code> 。</li>\n<li><code>setup</code>  函数会在 <code>beforeCreate</code>  之前调用，它是 “领先” 所有钩子执行的。</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>年龄：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改名字<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeAge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>年龄+1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>showTel<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我查看联系方式<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'Person'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token comment\">// 数据，原来写在 data 中（注意：此时的 name、age、tel 数据都不是响应式数据）</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'张三'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">let</span> age <span class=\"token operator\">=</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">let</span> tel <span class=\"token operator\">=</span> <span class=\"token string\">'13888888888'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token comment\">// 方法，原来写在 methods 中</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">function</span> <span class=\"token function\">changeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        name <span class=\"token operator\">=</span> <span class=\"token string\">'zhang-san'</span> <span class=\"token comment\">// 注意：此时这么修改 name 页面是不变化的</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">function</span> <span class=\"token function\">changeAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        age <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> <span class=\"token comment\">// 注意：此时这么修改 age 页面是不变化的</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">function</span> <span class=\"token function\">showTel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>tel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token comment\">// 返回一个对象，对象中的内容，模板中可以直接使用</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">,</span>tel<span class=\"token punctuation\">,</span>changeName<span class=\"token punctuation\">,</span>changeAge<span class=\"token punctuation\">,</span>showTel<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"setup-的返回值\"><a class=\"anchor\" href=\"#setup-的返回值\">#</a> setup 的返回值</h3>\n<ul>\n<li>若返回一个<strong>对象</strong>：则对象中的：属性、方法等，在模板中均可以直接使用 **（重点关注）。**</li>\n<li>若返回一个<strong>函数</strong>：则可以自定义渲染内容，代码如下：</li>\n</ul>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span> <span class=\"token string\">'你好啊！'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"setup-与-options-api-的关系\"><a class=\"anchor\" href=\"#setup-与-options-api-的关系\">#</a> setup 与 Options API 的关系</h3>\n<ul>\n<li><code>Vue2</code>  的配置（ <code>data</code> 、 <code>methos</code> ......）中<strong>可以访问到</strong>  <code>setup</code>  中的属性、方法。</li>\n<li>但在 <code>setup</code>  中<strong>不能访问到</strong> <code>Vue2</code>  的配置（ <code>data</code> 、 <code>methos</code> ......）。</li>\n<li>如果与 <code>Vue2</code>  冲突，则 <code>setup</code>  优先。</li>\n</ul>\n<h3 id=\"setup-语法糖\"><a class=\"anchor\" href=\"#setup-语法糖\">#</a> setup 语法糖</h3>\n<p><code>setup</code>  函数有一个语法糖，这个语法糖，可以让我们把 <code>setup</code>  独立出去，代码如下：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>年龄：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改名字<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changAge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>年龄+1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>showTel<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我查看联系方式<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'Person'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">&lt;!-- 下面的写法是 setup 语法糖 --></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//undefined</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">// 数据（注意：此时的 name、age、tel 都不是响应式数据）</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'张三'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">let</span> age <span class=\"token operator\">=</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">let</span> tel <span class=\"token operator\">=</span> <span class=\"token string\">'13888888888'</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    name <span class=\"token operator\">=</span> <span class=\"token string\">'李四'</span><span class=\"token comment\">// 注意：此时这么修改 name 页面是不变化的</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    age <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> <span class=\"token comment\">// 注意：此时这么修改 age 页面是不变化的</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">showTel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>tel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>扩展：上述代码，还需要编写一个不写 <code>setup</code>  的 <code>script</code>  标签，去指定组件名字，比较麻烦，我们可以借助 <code>vite</code>  中的插件简化</p>\n<ol>\n<li>第一步： <code>npm i vite-plugin-vue-setup-extend -D</code></li>\n<li>第二步： <code>vite.config.ts</code></li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineConfig <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vite'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> VueSetupExtend <span class=\"token keyword\">from</span> <span class=\"token string\">'vite-plugin-vue-setup-extend'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token function\">VueSetupExtend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>第三步： <code>&lt;script setup lang=&quot;ts&quot; name=&quot;Person&quot;&gt;</code></li>\n</ol>\n<h2 id=\"33-ref-创建基本类型的响应式数据\"><a class=\"anchor\" href=\"#33-ref-创建基本类型的响应式数据\">#</a> 3.3. 【ref 创建：基本类型的响应式数据】</h2>\n<ul>\n<li>** 作用：** 定义响应式变量。</li>\n<li><strong>语法：</strong> <code>let xxx = ref(初始值)</code> 。</li>\n<li>** 返回值：** 一个 <code>RefImpl</code>  的实例对象，简称 <code>ref对象</code> 或 <code>ref</code> ， <code>ref</code>  对象的 <code>value</code> <strong> 属性是响应式的</strong>。</li>\n<li><strong>注意点：</strong>\n<ul>\n<li><code>JS</code>  中操作数据需要： <code>xxx.value</code> ，但模板中不需要 <code>.value</code> ，直接使用即可。</li>\n<li>对于 <code>let name = ref('张三')</code>  来说， <code>name</code>  不是响应式的， <code>name.value</code>  是响应式的。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>年龄：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改名字<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeAge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>年龄+1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>showTel<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我查看联系方式<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\">//name 和 age 是一个 RefImpl 的实例对象，简称 ref 对象，它们的 value 属性是响应式的。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">let</span> age <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">//tel 就是一个普通的字符串，不是响应式的</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">let</span> tel <span class=\"token operator\">=</span> <span class=\"token string\">'13888888888'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">// JS 中操作 ref 对象时候需要.value</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    name<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">'李四'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 注意：name 不是响应式的，name.value 是响应式的，所以如下代码并不会引起页面的更新。</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// name = ref('zhang-san')</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">// JS 中操作 ref 对象时候需要.value</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    age<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">showTel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>tel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"34-reactive-创建对象类型的响应式数据\"><a class=\"anchor\" href=\"#34-reactive-创建对象类型的响应式数据\">#</a> 3.4. 【reactive 创建：对象类型的响应式数据】</h2>\n<ul>\n<li><strong>作用：<strong>定义一个</strong>响应式对象</strong>（基本类型不要用它，要用 <code>ref</code> ，否则报错）</li>\n<li><strong>语法：</strong> <code>let 响应式对象= reactive(源对象)</code> 。</li>\n<li>** 返回值：** 一个 <code>Proxy</code>  的实例对象，简称：响应式对象。</li>\n<li><strong>注意点：</strong> <code>reactive</code>  定义的响应式数据是 “深层次” 的。</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>汽车信息：一台<span class=\"token comment\"></span>汽车，价值<span class=\"token comment\"></span>万<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>游戏列表：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>g in games<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>g.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>测试：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeCarPrice<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改汽车价格<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeFirstGame<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改第一游戏<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>测试<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> reactive <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">let</span> car <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">'奔驰'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">let</span> games <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'ahsgdyfa01'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'英雄联盟'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'ahsgdyfa02'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'王者荣耀'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'ahsgdyfa03'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'原神'</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token literal-property property\">d</span><span class=\"token operator\">:</span><span class=\"token number\">666</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">changeCarPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  car<span class=\"token punctuation\">.</span>price <span class=\"token operator\">+=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">changeFirstGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  games<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'流星蝴蝶剑'</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  obj<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> <span class=\"token number\">999</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"35-ref-创建对象类型的响应式数据\"><a class=\"anchor\" href=\"#35-ref-创建对象类型的响应式数据\">#</a> 3.5. 【ref 创建：对象类型的响应式数据】</h2>\n<ul>\n<li>其实 <code>ref</code>  接收的数据可以是：<strong>基本类型</strong>、<strong>对象类型</strong>。</li>\n<li>若 <code>ref</code>  接收的是对象类型，内部其实也是调用了 <code>reactive</code>  函数。</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>汽车信息：一台<span class=\"token comment\"></span>汽车，价值<span class=\"token comment\"></span>万<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>游戏列表：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>g in games<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>g.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>测试：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeCarPrice<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改汽车价格<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeFirstGame<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改第一游戏<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>测试<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ref <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">let</span> car <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">'奔驰'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">let</span> games <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'ahsgdyfa01'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'英雄联盟'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'ahsgdyfa02'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'王者荣耀'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'ahsgdyfa03'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'原神'</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token literal-property property\">d</span><span class=\"token operator\">:</span><span class=\"token number\">666</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">changeCarPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  car<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>price <span class=\"token operator\">+=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">changeFirstGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  games<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'流星蝴蝶剑'</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  obj<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> <span class=\"token number\">999</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"36-ref-对比-reactive\"><a class=\"anchor\" href=\"#36-ref-对比-reactive\">#</a> 3.6. 【ref 对比 reactive】</h2>\n<p>宏观角度看：</p>\n<blockquote>\n<ol>\n<li>\n<p><code>ref</code>  用来定义：<strong>基本类型数据</strong>、<strong>对象类型数据</strong>；</p>\n</li>\n<li>\n<p><code>reactive</code>  用来定义：<strong>对象类型数据</strong>。</p>\n</li>\n</ol>\n</blockquote>\n<ul>\n<li>区别：</li>\n</ul>\n<blockquote>\n<ol>\n<li>\n<p><code>ref</code>  创建的变量必须使用 <code>.value</code> （可以使用 <code>volar</code>  插件自动添加 <code>.value</code> ）。</p>\n<p>&lt;img src=&quot;images / 自动补充 value.png&quot; alt=&quot;自动补充 value&quot; style=&quot;zoom:50%;border-radius:20px&quot; /&gt;</p>\n</li>\n<li>\n<p><code>reactive</code>  重新分配一个新对象，会<strong>失去</strong>响应式（可以使用 <code>Object.assign</code>  去整体替换）。</p>\n</li>\n</ol>\n</blockquote>\n<ul>\n<li>使用原则：</li>\n</ul>\n<blockquote>\n<ol>\n<li>若需要一个基本类型的响应式数据，必须使用 <code>ref</code> 。</li>\n<li>若需要一个响应式对象，层级不深， <code>ref</code> 、 <code>reactive</code>  都可以。</li>\n<li>若需要一个响应式对象，且层级较深，推荐使用 <code>reactive</code> 。</li>\n</ol>\n</blockquote>\n<h2 id=\"37-torefs-与-toref\"><a class=\"anchor\" href=\"#37-torefs-与-toref\">#</a> 3.7. 【toRefs 与 toRef】</h2>\n<ul>\n<li>作用：将一个响应式对象中的每一个属性，转换为 <code>ref</code>  对象。</li>\n<li>备注： <code>toRefs</code>  与 <code>toRef</code>  功能一致，但 <code>toRefs</code>  可以批量转换。</li>\n<li>语法如下：</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>年龄：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>性别：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改名字<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeAge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改年龄<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeGender<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改性别<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">,</span>reactive<span class=\"token punctuation\">,</span>toRefs<span class=\"token punctuation\">,</span>toRef<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\">// 通过 toRefs 将 person 对象中的 n 个属性批量取出，且依然保持响应式的能力</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">let</span> <span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">,</span>gender<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span>  <span class=\"token function\">toRefs</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">// 通过 toRef 将 person 对象中的 gender 属性取出，且依然保持响应式的能力</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">let</span> age <span class=\"token operator\">=</span> <span class=\"token function\">toRef</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">,</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    name<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token string\">'~'</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    age<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeGender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    gender<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">'女'</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"38-computed\"><a class=\"anchor\" href=\"#38-computed\">#</a> 3.8. 【computed】</h2>\n<p>作用：根据已有数据计算出新数据（和 <code>Vue2</code>  中的 <code>computed</code>  作用一致）。</p>\n<p>&lt;img src=&quot;images/computed.gif&quot; style=&quot;zoom:20%;&quot; /&gt;</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    姓：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>firstName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    名：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lastName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    全名：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeFullName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>全名改为：li-si<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">,</span>computed<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">let</span> firstName <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'zhang'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">let</span> lastName <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'san'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">// 计算属性 —— 只读取，不修改</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">/* let fullName = computed(()=>&#123;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    return firstName.value + '-' + lastName.value</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  &#125;) */</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token comment\">// 计算属性 —— 既读取又修改</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">let</span> fullName <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 读取</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token keyword\">return</span> firstName<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> lastName<span class=\"token punctuation\">.</span>value</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">// 修改</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'有人修改了fullName'</span><span class=\"token punctuation\">,</span>val<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      firstName<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> val<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      lastName<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> val<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeFullName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    fullName<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">'li-si'</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"39\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"39watch\"><a class=\"anchor\" href=\"#39watch\">#</a> 3.9.【watch】</h2>\n<ul>\n<li>作用：监视数据的变化（和 <code>Vue2</code>  中的 <code>watch</code>  作用一致）</li>\n<li>特点： <code>Vue3</code>  中的 <code>watch</code>  只能监视以下<strong>四种数据</strong>：</li>\n</ul>\n<blockquote>\n<ol>\n<li><code>ref</code>  定义的数据。</li>\n<li><code>reactive</code>  定义的数据。</li>\n<li>函数返回一个值（ <code>getter</code>  函数）。</li>\n<li>一个包含上述内容的数组。</li>\n</ol>\n</blockquote>\n<p>我们在 <code>Vue3</code>  中使用 <code>watch</code>  的时候，通常会遇到以下几种情况：</p>\n<h3 id=\"情况一\"><a class=\"anchor\" href=\"#情况一\">#</a> * 情况一</h3>\n<p>监视 <code>ref</code>  定义的【基本类型】数据：直接写数据名即可，监视的是其 <code>value</code>  值的改变。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>情况一：监视【ref】定义的【基本类型】数据<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>当前求和为：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeSum<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我sum+1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">,</span>watch<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">let</span> sum <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeSum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    sum<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">// 监视，情况一：监视【ref】定义的【基本类型】数据</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">const</span> stopWatch <span class=\"token operator\">=</span> <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span>oldValue</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sum变化了'</span><span class=\"token punctuation\">,</span>newValue<span class=\"token punctuation\">,</span>oldValue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>newValue <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token function\">stopWatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"情况二\"><a class=\"anchor\" href=\"#情况二\">#</a> * 情况二</h3>\n<p>监视 <code>ref</code>  定义的【对象类型】数据：直接写数据名，监视的是对象的【地址值】，若想监视对象内部的数据，要手动开启深度监视。</p>\n<blockquote>\n<p>注意：</p>\n<ul>\n<li>\n<p>若修改的是 <code>ref</code>  定义的对象中的属性， <code>newValue</code>  和  <code>oldValue</code>  都是新值，因为它们是同一个对象。</p>\n</li>\n<li>\n<p>若修改整个 <code>ref</code>  定义的对象， <code>newValue</code>  是新值，  <code>oldValue</code>  是旧值，因为不是同一个对象了。</p>\n</li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>情况二：监视【ref】定义的【对象类型】数据<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>年龄：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改名字<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeAge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改年龄<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changePerson<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改整个人<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">,</span>watch<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    person<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+=</span> <span class=\"token string\">'~'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    person<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>age <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changePerson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    person<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">90</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token comment\">/* </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    监视，情况一：监视【ref】定义的【对象类型】数据，监视的是对象的地址值，若想监视对象内部属性的变化，需要手动开启深度监视</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    watch 的第一个参数是：被监视的数据</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    watch 的第二个参数是：监视的回调</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    watch 的第三个参数是：配置对象（deep、immediate 等等.....） </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span>oldValue</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'person变化了'</span><span class=\"token punctuation\">,</span>newValue<span class=\"token punctuation\">,</span>oldValue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"39\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"情况三\"><a class=\"anchor\" href=\"#情况三\">#</a> *  情况三</h3>\n<p>监视 <code>reactive</code>  定义的【对象类型】数据，且默认开启了深度监视。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>情况三：监视【reactive】定义的【对象类型】数据<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>年龄：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改名字<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeAge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改年龄<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changePerson<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改整个人<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>测试：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改obj.a.b.c<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>reactive<span class=\"token punctuation\">,</span>watch<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span><span class=\"token number\">666</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    person<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+=</span> <span class=\"token string\">'~'</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    person<span class=\"token punctuation\">.</span>age <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changePerson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">80</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    obj<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">888</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token comment\">// 监视，情况三：监视【reactive】定义的【对象类型】数据，且默认是开启深度监视的</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span>oldValue</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'person变化了'</span><span class=\"token punctuation\">,</span>newValue<span class=\"token punctuation\">,</span>oldValue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span>oldValue</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Obj变化了'</span><span class=\"token punctuation\">,</span>newValue<span class=\"token punctuation\">,</span>oldValue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"情况四\"><a class=\"anchor\" href=\"#情况四\">#</a> * 情况四</h3>\n<p>监视 <code>ref</code>  或 <code>reactive</code>  定义的【对象类型】数据中的<strong>某个属性</strong>，注意点如下：</p>\n<ol>\n<li>若该属性值<strong>不是</strong>【对象类型】，需要写成函数形式。</li>\n<li>若该属性值是<strong>依然</strong>是【对象类型】，可直接编，也可写成函数，建议写成函数。</li>\n</ol>\n<p>结论：监视的要是对象里的属性，那么最好写函数式，注意点：若是对象监视的是地址值，需要关注对象内部，需要手动开启深度监视。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>情况四：监视【ref】或【reactive】定义的【对象类型】数据中的某个属性<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>年龄：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>汽车：<span class=\"token comment\"></span>、<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改名字<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeAge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改年龄<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeC1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改第一台车<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeC2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改第二台车<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeCar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改整个车<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>reactive<span class=\"token punctuation\">,</span>watch<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token literal-property property\">car</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token literal-property property\">c1</span><span class=\"token operator\">:</span><span class=\"token string\">'奔驰'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token literal-property property\">c2</span><span class=\"token operator\">:</span><span class=\"token string\">'宝马'</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    person<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+=</span> <span class=\"token string\">'~'</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    person<span class=\"token punctuation\">.</span>age <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeC1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    person<span class=\"token punctuation\">.</span>car<span class=\"token punctuation\">.</span>c1 <span class=\"token operator\">=</span> <span class=\"token string\">'奥迪'</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeC2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    person<span class=\"token punctuation\">.</span>car<span class=\"token punctuation\">.</span>c2 <span class=\"token operator\">=</span> <span class=\"token string\">'大众'</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeCar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    person<span class=\"token punctuation\">.</span>car <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">c1</span><span class=\"token operator\">:</span><span class=\"token string\">'雅迪'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">c2</span><span class=\"token operator\">:</span><span class=\"token string\">'爱玛'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token comment\">// 监视，情况四：监视响应式对象中的某个属性，且该属性是基本类型的，要写成函数式</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token comment\">/* watch (()=> person.name,(newValue,oldValue)=>&#123;</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    console.log ('person.name 变化了 ',newValue,oldValue)</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  &#125;) */</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token comment\">// 监视，情况四：监视响应式对象中的某个属性，且该属性是对象类型的，可以直接写，也能写函数，更推荐写函数</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>person<span class=\"token punctuation\">.</span>car<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span>oldValue</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'person.car变化了'</span><span class=\"token punctuation\">,</span>newValue<span class=\"token punctuation\">,</span>oldValue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"情况五\"><a class=\"anchor\" href=\"#情况五\">#</a> * 情况五</h3>\n<p>监视上述的多个数据</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>情况五：监视上述的多个数据<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>姓名：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>年龄：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>汽车：<span class=\"token comment\"></span>、<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改名字<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeAge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改年龄<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeC1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改第一台车<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeC2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改第二台车<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeCar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>修改整个车<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>reactive<span class=\"token punctuation\">,</span>watch<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token literal-property property\">car</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token literal-property property\">c1</span><span class=\"token operator\">:</span><span class=\"token string\">'奔驰'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token literal-property property\">c2</span><span class=\"token operator\">:</span><span class=\"token string\">'宝马'</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    person<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+=</span> <span class=\"token string\">'~'</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    person<span class=\"token punctuation\">.</span>age <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeC1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    person<span class=\"token punctuation\">.</span>car<span class=\"token punctuation\">.</span>c1 <span class=\"token operator\">=</span> <span class=\"token string\">'奥迪'</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeC2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    person<span class=\"token punctuation\">.</span>car<span class=\"token punctuation\">.</span>c2 <span class=\"token operator\">=</span> <span class=\"token string\">'大众'</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeCar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    person<span class=\"token punctuation\">.</span>car <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">c1</span><span class=\"token operator\">:</span><span class=\"token string\">'雅迪'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">c2</span><span class=\"token operator\">:</span><span class=\"token string\">'爱玛'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token comment\">// 监视，情况五：监视上述的多个数据</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>person<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>person<span class=\"token punctuation\">.</span>car<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue<span class=\"token punctuation\">,</span>oldValue</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'person.car变化了'</span><span class=\"token punctuation\">,</span>newValue<span class=\"token punctuation\">,</span>oldValue<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">deep</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"310-watcheffect\"><a class=\"anchor\" href=\"#310-watcheffect\">#</a> 3.10. 【watchEffect】</h2>\n<ul>\n<li>\n<p>官网：立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行该函数。</p>\n</li>\n<li>\n<p><code>watch</code>  对比 <code>watchEffect</code></p>\n<blockquote>\n<ol>\n<li>\n<p>都能监听响应式数据的变化，不同的是监听数据变化的方式不同</p>\n</li>\n<li>\n<p><code>watch</code> ：要明确指出监视的数据</p>\n</li>\n<li>\n<p><code>watchEffect</code> ：不用明确指出监视的数据（函数中用到哪些属性，那就监视哪些属性）。</p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li>\n<p>示例代码：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>需求：水温达到50℃，或水位达到20cm，则联系服务器<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>水温：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>水位：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changePrice<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>水温+1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeSum<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>水位+10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">,</span>watch<span class=\"token punctuation\">,</span>watchEffect<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">let</span> temp <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">let</span> height <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changePrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    temp<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeSum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    height<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token comment\">// 用 watch 实现，需要明确的指出要监视：temp、height</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">// 从 value 中获取最新的 temp 值、height 值</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>newTemp<span class=\"token punctuation\">,</span>newHeight<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 室温达到 50℃，或水位达到 20cm，立刻联系服务器</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>newTemp <span class=\"token operator\">>=</span> <span class=\"token number\">50</span> <span class=\"token operator\">||</span> newHeight <span class=\"token operator\">>=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'联系服务器'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token comment\">// 用 watchEffect 实现，不用</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">const</span> stopWtach <span class=\"token operator\">=</span> <span class=\"token function\">watchEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">// 室温达到 50℃，或水位达到 20cm，立刻联系服务器</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> <span class=\"token number\">50</span> <span class=\"token operator\">||</span> height<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'demo'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?.</span>innerText<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'联系服务器'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\">// 水温达到 100，或水位达到 50，取消监视</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token number\">100</span> <span class=\"token operator\">||</span> height<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'清理了'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token function\">stopWtach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"311-标签的-ref-属性\"><a class=\"anchor\" href=\"#311-标签的-ref-属性\">#</a> 3.11. 【标签的 ref 属性】</h2>\n<p>作用：用于注册模板引用。</p>\n<blockquote>\n<ul>\n<li>\n<p>用在普通 <code>DOM</code>  标签上，获取的是 <code>DOM</code>  节点。</p>\n</li>\n<li>\n<p>用在组件标签上，获取的是组件实例对象。</p>\n</li>\n</ul>\n</blockquote>\n<p>用在普通 <code>DOM</code>  标签上：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>尚硅谷<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>前端<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Vue<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inpt<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>showLog<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我打印内容<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">let</span> title1 <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">let</span> title2 <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">let</span> title3 <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">showLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// 通过 id 获取元素</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">const</span> t1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 打印内容</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t1 <span class=\"token keyword\">as</span> HTMLElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>t1<span class=\"token operator\">?.</span>innerText<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token comment\">/************************************/</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">// 通过 ref 获取元素</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title1<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title2<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title3<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>用在组件标签上：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 父组件 App.vue --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Person</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ren<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>测试<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">import</span> Person <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/Person.vue'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">let</span> ren <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ren<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ren<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">&lt;!-- 子组件 Person.vue 中要使用 defineExpose 暴露内容 --></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">,</span>defineExpose<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">let</span> age <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\">/****************************/</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token comment\">/****************************/</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token comment\">// 使用 defineExpose 将组件中的数据交给外部</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token function\">defineExpose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"312-props\"><a class=\"anchor\" href=\"#312-props\">#</a> 3.12. 【props】</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 定义一个接口，限制每个 Person 对象的格式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PersonInter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span>string<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span>string<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span>number</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 定义一个自定义类型 Persons</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">export</span> type Persons <span class=\"token operator\">=</span> Array<span class=\"token operator\">&lt;</span>PersonInter<span class=\"token operator\">></span></pre></td></tr></table></figure><p><code>App.vue</code>  中代码：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Person</span> <span class=\"token attr-name\">:list</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>persons<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">import</span> Person <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/Person.vue'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>reactive<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>type Persons<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./types'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">let</span> persons <span class=\"token operator\">=</span> reactive<span class=\"token operator\">&lt;</span>Persons<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'e98219e12'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'e98219e13'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">19</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'e98219e14'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'王五'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><code>Person.vue</code>  中代码：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item in list<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"></span>--<span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>defineProps<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>type PersonInter<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/types'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 第一种写法：仅接收</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// const props = defineProps(['list'])</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 第二种写法：接收 + 限制类型</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// defineProps&lt;&#123;list:Persons&#125;>()</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 第三种写法：接收 + 限制类型 + 指定默认值 + 限制必要性</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">let</span> props <span class=\"token operator\">=</span> <span class=\"token function\">withDefaults</span><span class=\"token punctuation\">(</span>defineProps<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span>list<span class=\"token operator\">?</span><span class=\"token operator\">:</span>Persons<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token function-variable function\">list</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asdasg01'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'小猪佩奇'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"313-生命周期\"><a class=\"anchor\" href=\"#313-生命周期\">#</a> 3.13. 【生命周期】</h2>\n<ul>\n<li>\n<p>概念： <code>Vue</code>  组件实例在创建时要经历一系列的初始化步骤，在此过程中 <code>Vue</code>  会在合适的时机，调用特定的函数，从而让开发者有机会在特定阶段运行自己的代码，这些特定的函数统称为：生命周期钩子</p>\n</li>\n<li>\n<p>规律：</p>\n<blockquote>\n<p>生命周期整体分为四个阶段，分别是：<strong>创建、挂载、更新、销毁</strong>，每个阶段都有两个钩子，一前一后。</p>\n</blockquote>\n</li>\n<li>\n<p><code>Vue2</code>  的生命周期</p>\n<blockquote>\n<p>创建阶段： <code>beforeCreate</code> 、 <code>created</code></p>\n<p>挂载阶段： <code>beforeMount</code> 、 <code>mounted</code></p>\n<p>更新阶段： <code>beforeUpdate</code> 、 <code>updated</code></p>\n<p>销毁阶段： <code>beforeDestroy</code> 、 <code>destroyed</code></p>\n</blockquote>\n</li>\n<li>\n<p><code>Vue3</code>  的生命周期</p>\n<blockquote>\n<p>创建阶段： <code>setup</code></p>\n<p>挂载阶段： <code>onBeforeMount</code> 、 <code>onMounted</code></p>\n<p>更新阶段： <code>onBeforeUpdate</code> 、 <code>onUpdated</code></p>\n<p>卸载阶段： <code>onBeforeUnmount</code> 、 <code>onUnmounted</code></p>\n</blockquote>\n</li>\n<li>\n<p>常用的钩子： <code>onMounted</code>  (挂载完毕)、 <code>onUpdated</code>  (更新完毕)、 <code>onBeforeUnmount</code>  (卸载之前)</p>\n</li>\n<li>\n<p>示例代码：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>当前求和为：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeSum<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我sum+1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">&lt;!-- vue3 写法 --></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    ref<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    onBeforeMount<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    onMounted<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    onBeforeUpdate<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    onUpdated<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    onBeforeUnmount<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    onUnmounted </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">let</span> sum <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">changeSum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    sum<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'setup'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token comment\">// 生命周期钩子</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token function\">onBeforeMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'挂载之前'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'挂载完毕'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token function\">onBeforeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'更新之前'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token function\">onUpdated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'更新完毕'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token function\">onBeforeUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'卸载之前'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token function\">onUnmounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'卸载完毕'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"314-自定义hook\"><a class=\"anchor\" href=\"#314-自定义hook\">#</a> 3.14. 【自定义 hook】</h2>\n<ul>\n<li>\n<p>什么是 <code>hook</code> ？—— 本质是一个函数，把 <code>setup</code>  函数中使用的 <code>Composition API</code>  进行了封装，类似于 <code>vue2.x</code>  中的 <code>mixin</code> 。</p>\n</li>\n<li>\n<p>自定义 <code>hook</code>  的优势：复用代码，让 <code>setup</code>  中的逻辑更清楚易懂。</p>\n</li>\n</ul>\n<p>示例代码：</p>\n<ul>\n<li>\n<p><code>useSum.ts</code>  中内容如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>ref<span class=\"token punctuation\">,</span>onMounted<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">let</span> sum <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">increment</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    sum<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">decrement</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    sum<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">// 向外部暴露数据</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>sum<span class=\"token punctuation\">,</span>increment<span class=\"token punctuation\">,</span>decrement<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>useDog.ts</code>  中内容如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>reactive<span class=\"token punctuation\">,</span>onMounted<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> axios<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>AxiosError<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">let</span> dogList <span class=\"token operator\">=</span> reactive<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getDog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token comment\">// 发请求</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">let</span> <span class=\"token punctuation\">&#123;</span>data<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://dog.ceo/api/breed/pembroke/images/random'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token comment\">// 维护数据</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      dogList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token comment\">// 处理错误</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>AxiosError<span class=\"token operator\">></span>error</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">// 挂载钩子</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">getDog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\">// 向外部暴露数据</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>dogList<span class=\"token punctuation\">,</span>getDog<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>组件中具体使用：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>当前求和为：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>increment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我+1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>decrement<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我-1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(u,index) in dogList.urlList<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(u as string)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">v-show</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dogList.isLoading<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>加载中......<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getDog<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>再来一只狗<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>defineComponent<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'App'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">import</span> useSum <span class=\"token keyword\">from</span> <span class=\"token string\">'./hooks/useSum'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">import</span> useDog <span class=\"token keyword\">from</span> <span class=\"token string\">'./hooks/useDog'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">let</span> <span class=\"token punctuation\">&#123;</span>sum<span class=\"token punctuation\">,</span>increment<span class=\"token punctuation\">,</span>decrement<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">let</span> <span class=\"token punctuation\">&#123;</span>dogList<span class=\"token punctuation\">,</span>getDog<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">useDog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ul>\n<hr />\n<h1 id=\"4-路由\"><a class=\"anchor\" href=\"#4-路由\">#</a> 4. 路由</h1>\n<h2 id=\"41-对路由的理解\"><a class=\"anchor\" href=\"#41-对路由的理解\">#</a> 4.1. 【对路由的理解】</h2>\n<p>&lt;img src=&quot;images/image-20231018144351536.png&quot; alt=&quot;image-20231018144351536&quot; style=&quot;zoom:20%;border-radius:40px&quot; /&gt;</p>\n<h2 id=\"42-基本切换效果\"><a class=\"anchor\" href=\"#42-基本切换效果\">#</a> 4.2. 【基本切换效果】</h2>\n<ul>\n<li>\n<p><code>Vue3</code>  中要使用 <code>vue-router</code>  的最新版本，目前是 <code>4</code>  版本。</p>\n</li>\n<li>\n<p>路由配置文件代码如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>createRouter<span class=\"token punctuation\">,</span>createWebHistory<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> Home <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/Home.vue'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> News <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/News.vue'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> About <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/About.vue'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">createRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token literal-property property\">history</span><span class=\"token operator\">:</span><span class=\"token function\">createWebHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token literal-property property\">routes</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span><span class=\"token string\">'/home'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span>Home</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span><span class=\"token string\">'/about'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span>About</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> router</pre></td></tr></table></figure></li>\n</ul>\n<ul>\n<li>\n<p><code>main.ts</code>  代码如下：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> router <span class=\"token keyword\">from</span> <span class=\"token string\">'./router/index'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ul>\n<ul>\n<li>\n<p><code>App.vue</code>  代码如下</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Vue路由测试<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 导航区 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>navigate<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RouterLink</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/home<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">active-class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>首页<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RouterLink</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RouterLink</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/news<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">active-class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>新闻<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RouterLink</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RouterLink</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/about<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">active-class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>关于<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RouterLink</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 展示区 --></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main-content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RouterView</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RouterView</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>RouterLink<span class=\"token punctuation\">,</span>RouterView<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"43-两个注意点\"><a class=\"anchor\" href=\"#43-两个注意点\">#</a> 4.3. 【两个注意点】</h2>\n<blockquote>\n<ol>\n<li>\n<p>路由组件通常存放在 <code>pages</code>  或  <code>views</code>  文件夹，一般组件通常存放在 <code>components</code>  文件夹。</p>\n</li>\n<li>\n<p>通过点击导航，视觉效果上 “消失” 了的路由组件，默认是被<strong>卸载</strong>掉的，需要的时候再去<strong>挂载</strong>。</p>\n</li>\n</ol>\n</blockquote>\n<h2 id=\"44路由器工作模式\"><a class=\"anchor\" href=\"#44路由器工作模式\">#</a> 4.4.【路由器工作模式】</h2>\n<ol>\n<li>\n<p><code>history</code>  模式</p>\n<blockquote>\n<p>优点： <code>URL</code>  更加美观，不带有 <code>#</code> ，更接近传统的网站 <code>URL</code> 。</p>\n<p>缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有 <code>404</code>  错误。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">createRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  \t<span class=\"token literal-property property\">history</span><span class=\"token operator\">:</span><span class=\"token function\">createWebHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//history 模式</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  \t<span class=\"token comment\">/******/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n</li>\n<li>\n<p><code>hash</code>  模式</p>\n<blockquote>\n<p>优点：兼容性更好，因为不需要服务器端处理路径。</p>\n<p>缺点： <code>URL</code>  带有 <code>#</code> 不太美观，且在 <code>SEO</code>  优化方面相对较差。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">createRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  \t<span class=\"token literal-property property\">history</span><span class=\"token operator\">:</span><span class=\"token function\">createWebHashHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//hash 模式</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  \t<span class=\"token comment\">/******/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n</li>\n</ol>\n<h2 id=\"45-to的两种写法\"><a class=\"anchor\" href=\"#45-to的两种写法\">#</a> 4.5. 【to 的两种写法】</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 第一种：to 的字符串写法 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">active-class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/home<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>主页<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-link</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- 第二种：to 的对象写法 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">active-class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;path:'/home'&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Home<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-link</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"46-命名路由\"><a class=\"anchor\" href=\"#46-命名路由\">#</a> 4.6. 【命名路由】</h2>\n<p>作用：可以简化路由跳转及传参（后面就讲）。</p>\n<p>给路由规则命名：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">routes</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'zhuye'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span><span class=\"token string\">'/home'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span>Home</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'xinwen'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span><span class=\"token string\">'/news'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span>News<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'guanyu'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span><span class=\"token string\">'/about'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span>About</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>跳转路由：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 简化前：需要写完整的路径（to 的字符串写法） --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/news/detail<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>跳转<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-link</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- 简化后：直接通过名字跳转（to 的对象写法配合 name 属性） --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">:to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;name:'guanyu'&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>跳转<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-link</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"47-嵌套路由\"><a class=\"anchor\" href=\"#47-嵌套路由\">#</a> 4.7. 【嵌套路由】</h2>\n<ol>\n<li>\n<p>编写 <code>News</code>  的子路由： <code>Detail.vue</code></p>\n</li>\n<li>\n<p>配置路由规则，使用 <code>children</code>  配置项：</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">createRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  history<span class=\"token operator\">:</span><span class=\"token function\">createWebHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\troutes<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\tname<span class=\"token operator\">:</span><span class=\"token string\">'zhuye'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\tpath<span class=\"token operator\">:</span><span class=\"token string\">'/home'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\tcomponent<span class=\"token operator\">:</span>Home</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\tname<span class=\"token operator\">:</span><span class=\"token string\">'xinwen'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\tpath<span class=\"token operator\">:</span><span class=\"token string\">'/news'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\tcomponent<span class=\"token operator\">:</span>News<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\tchildren<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t\t\tname<span class=\"token operator\">:</span><span class=\"token string\">'xiang'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t\t\tpath<span class=\"token operator\">:</span><span class=\"token string\">'detail'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t\t\tcomponent<span class=\"token operator\">:</span>Detail</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\tname<span class=\"token operator\">:</span><span class=\"token string\">'guanyu'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\tpath<span class=\"token operator\">:</span><span class=\"token string\">'/about'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\tcomponent<span class=\"token operator\">:</span>About</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> router</pre></td></tr></table></figure></li>\n<li>\n<p>跳转路由（记得要加完整路径）：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/news/detail<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>xxxx<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-link</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 或 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">:to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;path:'/news/detail'&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>xxxx<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-link</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>记得去 <code>Home</code>  组件中预留一个 <code>&lt;router-view&gt;</code></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>news<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>news-list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RouterLink</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>news in newsList<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>news.id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;path:'/news/detail'&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RouterLink</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>news-detail<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RouterView</span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"48-路由传参\"><a class=\"anchor\" href=\"#48-路由传参\">#</a> 4.8. 【路由传参】</h2>\n<h3 id=\"query参数\"><a class=\"anchor\" href=\"#query参数\">#</a> query 参数</h3>\n<ol>\n<li>\n<p>传递参数</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 跳转并携带 query 参数（to 的字符串写法） --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/news/detail?a=1&amp;b=2&amp;content=欢迎你<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t跳转</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-link</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">&lt;!-- 跳转并携带 query 参数（to 的对象写法） --></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RouterLink</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token attr-name\">:to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    //name:'xiang', //用name也可以跳转</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    path:'/news/detail',</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    query:&#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      id:news.id,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      title:news.title,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      content:news.content</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  &#125;<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RouterLink</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>接收参数：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>useRoute<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> route <span class=\"token operator\">=</span> <span class=\"token function\">useRoute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 打印 query 参数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"params参数\"><a class=\"anchor\" href=\"#params参数\">#</a> params 参数</h3>\n<ol>\n<li>\n<p>传递参数</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 跳转并携带 params 参数（to 的字符串写法） --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RouterLink</span> <span class=\"token attr-name\">:to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>`/news/detail/001/新闻001/内容001`<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RouterLink</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\t\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- 跳转并携带 params 参数（to 的对象写法） --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RouterLink</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token attr-name\">:to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    name:'xiang', //用name跳转</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    params:&#123;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      id:news.id,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      title:news.title,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      content:news.title</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  &#125;<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RouterLink</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>接收参数：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>useRoute<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> route <span class=\"token operator\">=</span> <span class=\"token function\">useRoute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 打印 params 参数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<blockquote>\n<p>备注 1：传递 <code>params</code>  参数时，若使用 <code>to</code>  的对象写法，必须使用 <code>name</code>  配置项，不能用 <code>path</code> 。</p>\n<p>备注 2：传递 <code>params</code>  参数时，需要提前在规则中占位。</p>\n</blockquote>\n<h2 id=\"49-路由的props配置\"><a class=\"anchor\" href=\"#49-路由的props配置\">#</a> 4.9. 【路由的 props 配置】</h2>\n<p>作用：让路由组件更方便的收到参数（可以将路由参数作为 <code>props</code>  传给组件）</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'xiang'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span><span class=\"token string\">'detail/:id/:title/:content'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span>Detail<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">//props 的对象写法，作用：把对象中的每一组 key-value 作为 props 传给 Detail 组件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">// props:&#123;a:1,b:2,c:3&#125;, </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">//props 的布尔值写法，作用：把收到了每一组 params 参数，作为 props 传给 Detail 组件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">// props:true</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">//props 的函数写法，作用：把返回的对象中每一组 key-value 作为 props 传给 Detail 组件</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">props</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">route</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> route<span class=\"token punctuation\">.</span>query</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"410-replace属性\"><a class=\"anchor\" href=\"#410-replace属性\">#</a> 4.10. 【 replace 属性】</h2>\n<ol>\n<li>\n<p>作用：控制路由跳转时操作浏览器历史记录的模式。</p>\n</li>\n<li>\n<p>浏览器的历史记录有两种写入方式：分别为 <code>push</code>  和 <code>replace</code> ：</p>\n<ul>\n<li><code>push</code>  是追加历史记录（默认值）。</li>\n<li><code>replace</code>  是替换当前记录。</li>\n</ul>\n</li>\n<li>\n<p>开启 <code>replace</code>  模式：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RouterLink</span> <span class=\"token attr-name\">replace</span> <span class=\"token attr-name\">.......</span><span class=\"token punctuation\">></span></span>News<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RouterLink</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"411-编程式导航\"><a class=\"anchor\" href=\"#411-编程式导航\">#</a> 4.11. 【编程式导航】</h2>\n<p>路由组件的两个重要的属性： <code>$route</code>  和 <code>$router</code>  变成了两个 <code>hooks</code></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>useRoute<span class=\"token punctuation\">,</span>useRouter<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> route <span class=\"token operator\">=</span> <span class=\"token function\">useRoute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span>parmas<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"412-重定向\"><a class=\"anchor\" href=\"#412-重定向\">#</a> 4.12. 【重定向】</h2>\n<ol>\n<li>\n<p>作用：将特定的路径，重新定向到已有路由。</p>\n</li>\n<li>\n<p>具体编码：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span><span class=\"token string\">'/about'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"5-pinia\"><a class=\"anchor\" href=\"#5-pinia\">#</a> 5. pinia</h1>\n<h2 id=\"51准备一个效果\"><a class=\"anchor\" href=\"#51准备一个效果\">#</a> 5.1【准备一个效果】</h2>\n<p>&lt;img src=&quot;./images/pinia_example.gif&quot; alt=&quot;pinia_example&quot; style=&quot;zoom:30%;border:3px solid&quot; /&gt;</p>\n<h2 id=\"52搭建-pinia-环境\"><a class=\"anchor\" href=\"#52搭建-pinia-环境\">#</a> 5.2【搭建 pinia 环境】</h2>\n<p>第一步： <code>npm install pinia</code></p>\n<p>第二步：操作 <code>src/main.ts</code></p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createApp <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/* 引入 createPinia，用于创建 pinia */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createPinia <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'pinia'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/* 创建 pinia */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> pinia <span class=\"token operator\">=</span> <span class=\"token function\">createPinia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/* 使用插件 */</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>pinia<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>此时开发者工具中已经有了 <code>pinia</code>  选项</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4ubmxhcmsuY29tL3l1cXVlLzAvMjAyMy9wbmcvMzU3ODA1OTkvMTY4NDMwOTk1MjQ4MS1jNjdmNjdmOS1kMWEzLTRkNjktOGJkNi0yYjM4MWUwMDNmMzEucG5n\">https://cdn.nlark.com/yuque/0/2023/png/35780599/1684309952481-c67f67f9-d1a3-4d69-8bd6-2b381e003f31.png</span>&quot; style=&quot;zoom:80%;border:1px solid black;border-radius:10px&quot; /&gt;</p>\n<h2 id=\"53存储读取数据\"><a class=\"anchor\" href=\"#53存储读取数据\">#</a> 5.3【存储 + 读取数据】</h2>\n<ol>\n<li>\n<p><code>Store</code>  是一个保存：<strong>状态</strong>、<strong>业务逻辑</strong> 的实体，每个组件都可以<strong>读取</strong>、<strong>写入</strong>它。</p>\n</li>\n<li>\n<p>它有三个概念： <code>state</code> 、 <code>getter</code> 、 <code>action</code> ，相当于组件中的：  <code>data</code> 、  <code>computed</code>  和  <code>methods</code> 。</p>\n</li>\n<li>\n<p>具体编码： <code>src/store/count.ts</code></p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 引入 defineStore 用于创建 store</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>defineStore<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'pinia'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 定义并暴露一个 store</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useCountStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 动作</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  actions<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// 状态</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      sum<span class=\"token operator\">:</span><span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 计算</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  getters<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>具体编码： <code>src/store/talk.ts</code></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 引入 defineStore 用于创建 store</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>defineStore<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'pinia'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 定义并暴露一个 store</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useTalkStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'talk'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 动作</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// 状态</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token literal-property property\">talkList</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'yuysada01'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span><span class=\"token string\">'你今天有点怪，哪里怪？怪好看的！'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     \t\t<span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'yuysada02'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span><span class=\"token string\">'草莓、蓝莓、蔓越莓，你想我了没？'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'yuysada03'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span><span class=\"token string\">'心里给你留了一块地，我的死心塌地'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\">// 计算</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token literal-property property\">getters</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>组件中使用 <code>state</code>  中的数据</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>当前求和为：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 引入对应的 useXxxxxStore\t</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>useSumStore<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/store/sum'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// 调用 useXxxxxStore 得到对应的 store</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">const</span> sumStore <span class=\"token operator\">=</span> <span class=\"token function\">useSumStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>talk in talkStore.talkList<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>talk.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token comment\"></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>useTalkStore<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/store/talk'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">const</span> talkStore <span class=\"token operator\">=</span> <span class=\"token function\">useTalkStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"54修改数据三种方式\"><a class=\"anchor\" href=\"#54修改数据三种方式\">#</a> 5.4.【修改数据】(三种方式)</h2>\n<ol>\n<li>\n<p>第一种修改方式，直接修改</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>countStore<span class=\"token punctuation\">.</span>sum <span class=\"token operator\">=</span> <span class=\"token number\">666</span></pre></td></tr></table></figure></li>\n<li>\n<p>第二种修改方式：批量修改</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>countStore<span class=\"token punctuation\">.</span><span class=\"token function\">$patch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  sum<span class=\"token operator\">:</span><span class=\"token number\">999</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  school<span class=\"token operator\">:</span><span class=\"token string\">'atguigu'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>第三种修改方式：借助 <code>action</code>  修改（ <code>action</code>  中可以编写一些业务逻辑）</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineStore <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'pinia'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useCountStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">/*************/</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 加</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span>number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sum <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 操作 countStore 中的 sum</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sum <span class=\"token operator\">+=</span> value</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 减</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span>number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sum <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sum <span class=\"token operator\">-=</span> value</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\">/*************/</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>组件中调用 <code>action</code>  即可</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使用 countStore</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> countStore <span class=\"token operator\">=</span> <span class=\"token function\">useCountStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 调用对应 action</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>countStore<span class=\"token punctuation\">.</span><span class=\"token function\">incrementOdd</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"55storetorefs\"><a class=\"anchor\" href=\"#55storetorefs\">#</a> 5.5.【storeToRefs】</h2>\n<ul>\n<li>借助 <code>storeToRefs</code>  将 <code>store</code>  中的数据转为 <code>ref</code>  对象，方便在模板中使用。</li>\n<li>注意： <code>pinia</code>  提供的 <code>storeToRefs</code>  只会将数据做转换，而 <code>Vue</code>  的 <code>toRefs</code>  会转换 <code>store</code>  中数据。</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>当前求和为：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useCountStore <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/store/count'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">/* 引入 storeToRefs */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> storeToRefs <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'pinia'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">/* 得到 countStore */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">const</span> countStore <span class=\"token operator\">=</span> <span class=\"token function\">useCountStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">/* 使用 storeToRefs 转换 countStore，随后解构 */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>sum<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">storeToRefs</span><span class=\"token punctuation\">(</span>countStore<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"56getters\"><a class=\"anchor\" href=\"#56getters\">#</a> 5.6.【getters】</h2>\n<ol>\n<li>\n<p>概念：当 <code>state</code>  中的数据，需要经过处理后再使用时，可以使用 <code>getters</code>  配置。</p>\n</li>\n<li>\n<p>追加 <code>getters</code>  配置。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 引入 defineStore 用于创建 store</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>defineStore<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'pinia'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 定义并暴露一个 store</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useCountStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 动作</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/************/</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">// 状态</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token literal-property property\">sum</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token literal-property property\">school</span><span class=\"token operator\">:</span><span class=\"token string\">'atguigu'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">// 计算</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token literal-property property\">getters</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token literal-property property\">bigSum</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token parameter\">number</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span>sum <span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">upperSchool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>string<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span> school<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>组件中读取数据：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>increment<span class=\"token punctuation\">,</span>decrement<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> countStore</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> <span class=\"token punctuation\">&#123;</span>sum<span class=\"token punctuation\">,</span>school<span class=\"token punctuation\">,</span>bigSum<span class=\"token punctuation\">,</span>upperSchool<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">storeToRefs</span><span class=\"token punctuation\">(</span>countStore<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"57subscribe\"><a class=\"anchor\" href=\"#57subscribe\">#</a> 5.7.【$subscribe】</h2>\n<p>通过 store 的  <code>$subscribe()</code>  方法侦听  <code>state</code>  及其变化</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>talkStore<span class=\"token punctuation\">.</span><span class=\"token function\">$subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>mutate<span class=\"token punctuation\">,</span>state<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'LoveTalk'</span><span class=\"token punctuation\">,</span>mutate<span class=\"token punctuation\">,</span>state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'talk'</span><span class=\"token punctuation\">,</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>talkList<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"58-store组合式写法\"><a class=\"anchor\" href=\"#58-store组合式写法\">#</a> 5.8. 【store 组合式写法】</h2>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>defineStore<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'pinia'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>nanoid<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'nanoid'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>reactive<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useTalkStore <span class=\"token operator\">=</span> <span class=\"token function\">defineStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'talk'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">//talkList 就是 state</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">const</span> talkList <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'talkList'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">//getATalk 函数相当于 action</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getATalk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 发请求，下面这行的写法是：连续解构赋值 + 重命名</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">&#123;</span>data<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>content<span class=\"token operator\">:</span>title<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.uomg.com/api/rand.qinghua?format=json'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 把请求回来的字符串，包装成一个对象</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>id<span class=\"token operator\">:</span><span class=\"token function\">nanoid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>title<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 放到数组中</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    talkList<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>talkList<span class=\"token punctuation\">,</span>getATalk<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"6-组件通信\"><a class=\"anchor\" href=\"#6-组件通信\">#</a> 6. 组件通信</h1>\n<p><strong> <code>Vue3</code>  组件通信和 <code>Vue2</code>  的区别：</strong></p>\n<ul>\n<li>移出事件总线，使用 <code>mitt</code>  代替。</li>\n</ul>\n<ul>\n<li><code>vuex</code>  换成了 <code>pinia</code> 。</li>\n<li>把 <code>.sync</code>  优化到了 <code>v-model</code>  里面了。</li>\n<li>把 <code>$listeners</code>  所有的东西，合并到 <code>$attrs</code>  中了。</li>\n<li><code>$children</code>  被砍掉了。</li>\n</ul>\n<p><strong>常见搭配形式：</strong></p>\n<p>&lt;img src=&quot;images/image-20231119185900990.png&quot; alt=&quot;image-20231119185900990&quot; style=&quot;zoom:60%;&quot; /&gt;</p>\n<h2 id=\"61-props\"><a class=\"anchor\" href=\"#61-props\">#</a> 6.1. 【props】</h2>\n<p>概述： <code>props</code>  是使用频率最高的一种通信方式，常用与 ：<strong>父 ↔ 子</strong>。</p>\n<ul>\n<li>若 <strong>父传子</strong>：属性值是<strong>非函数</strong>。</li>\n<li>若 <strong>子传父</strong>：属性值是<strong>函数</strong>。</li>\n</ul>\n<p>父组件：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>father<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>父组件，<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>我的车：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>儿子给的玩具：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Child</span> <span class=\"token attr-name\">:car</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>car<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:getToy</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getToy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Father<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">import</span> Child <span class=\"token keyword\">from</span> <span class=\"token string\">'./Child.vue'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ref <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">const</span> car <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'奔驰'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">const</span> toy <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token comment\">// 方法</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">function</span> <span class=\"token function\">getToy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span>string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\ttoy<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>子组件</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>子组件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>我的玩具：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>父给我的车：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getToy(toy)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>玩具给父亲<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ref <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">const</span> toy <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'奥特曼'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">defineProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'getToy'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"62-自定义事件\"><a class=\"anchor\" href=\"#62-自定义事件\">#</a> 6.2. 【自定义事件】</h2>\n<ol>\n<li>概述：自定义事件常用于：<strong>子 =&gt; 父。</strong></li>\n<li>注意区分好：原生事件、自定义事件。</li>\n</ol>\n<ul>\n<li>原生事件：\n<ul>\n<li>事件名是特定的（ <code>click</code> 、 <code>mosueenter</code>  等等）</li>\n<li>事件对象 <code>$event</code> : 是包含事件相关信息的对象（ <code>pageX</code> 、 <code>pageY</code> 、 <code>target</code> 、 <code>keyCode</code> ）</li>\n</ul>\n</li>\n<li>自定义事件：\n<ul>\n<li>事件名是任意名称</li>\n<li>&lt;strong style=&quot;color:red&quot;&gt; 事件对象 <code>$event</code> : 是调用 <code>emit</code>  时所提供的数据，可以是任意类型！！！&lt;/strong&gt;</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>\n<p>示例：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 在父组件中，给子组件绑定自定义事件：--></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Child</span> <span class=\"token attr-name\">@send-toy</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toy = $event<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- 注意区分原生事件与自定义事件中的 $event--></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toy = $event<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>测试<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 子组件中，触发事件：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'send-toy'</span><span class=\"token punctuation\">,</span> 具体数据<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"63-mitt\"><a class=\"anchor\" href=\"#63-mitt\">#</a> 6.3. 【mitt】</h2>\n<p>概述：与消息订阅与发布（ <code>pubsub</code> ）功能类似，可以实现任意组件间通信。</p>\n<p>安装 <code>mitt</code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i mitt</pre></td></tr></table></figure><p>新建文件： <code>src\\utils\\emitter.ts</code></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 引入 mitt </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> mitt <span class=\"token keyword\">from</span> <span class=\"token string\">\"mitt\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 创建 emitter</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> emitter <span class=\"token operator\">=</span> <span class=\"token function\">mitt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  // 绑定事件</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  emitter.on ('abc',(value)=>&#123;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    console.log ('abc 事件被触发 ',value)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  &#125;)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  emitter.on ('xyz',(value)=>&#123;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    console.log ('xyz 事件被触发 ',value)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  &#125;)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  setInterval (() => &#123;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    // 触发事件</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    emitter.emit ('abc',666)</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    emitter.emit ('xyz',777)</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  &#125;, 1000);</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  setTimeout (() => &#123;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    // 清理事件</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    emitter.all.clear ()</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  &#125;, 3000); </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// 创建并暴露 mitt</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> emitter</pre></td></tr></table></figure><p>接收数据的组件中：绑定事件、同时在销毁前解绑事件：</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> emitter <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/utils/emitter\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> onUnmounted <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 绑定事件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>emitter<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'send-toy'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'send-toy事件被触发'</span><span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">onUnmounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">// 解绑事件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  emitter<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'send-toy'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>【第三步】：提供数据的组件，在合适的时候触发事件</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> emitter <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/utils/emitter\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">sendToy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">// 触发事件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  emitter<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'send-toy'</span><span class=\"token punctuation\">,</span>toy<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>注意这个重要的内置关系，总线依赖着这个内置关系</strong></p>\n<h2 id=\"64v-model\"><a class=\"anchor\" href=\"#64v-model\">#</a> 6.4.【v-model】</h2>\n<ol>\n<li>\n<p>概述：实现 <strong>父↔子</strong> 之间相互通信。</p>\n</li>\n<li>\n<p>前序知识 ——  <code>v-model</code>  的本质</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 使用 v-model 指令 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- v-model 的本质是下面这行代码 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userName<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userName =(&lt;HTMLInputElement>$event.target).value<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>组件标签上的 <code>v-model</code>  的本质： <code>:moldeValue</code>  ＋  <code>update:modelValue</code>  事件。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 组件标签上使用 v-model 指令 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AtguiguInput</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- 组件标签上 v-model 的本质 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AtguiguInput</span> <span class=\"token attr-name\">:modelValue</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">@update:</span>model-value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userName = $event<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><p><code>AtguiguInput</code>  组件中：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 将接收的 value 值赋给 input 元素的 value 属性，目的是：为了呈现数据 --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token comment\">&lt;!-- 给 input 元素绑定原生 input 事件，触发 input 事件时，进而触发 update:model-value 事件 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modelValue<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>emit('update:model-value',$event.target.value)<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AtguiguInput<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 接收 props</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token function\">defineProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'modelValue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">// 声明事件</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">const</span> emit <span class=\"token operator\">=</span> <span class=\"token function\">defineEmits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'update:model-value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>也可以更换 <code>value</code> ，例如改成 <code>abc</code></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 也可以更换 value，例如改成 abc--></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AtguiguInput</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-model:</span>abc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- 上面代码的本质如下 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AtguiguInput</span> <span class=\"token attr-name\">:abc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">@update:</span>abc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userName = $event<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><p><code>AtguiguInput</code>  组件中：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abc<span class=\"token punctuation\">\"</span></span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>emit('update:abc',$event.target.value)<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AtguiguInput<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">// 接收 props</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">defineProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 声明事件</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">const</span> emit <span class=\"token operator\">=</span> <span class=\"token function\">defineEmits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'update:abc'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>如果 <code>value</code>  可以更换，那么就可以在组件标签上多次使用 <code>v-model</code></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AtguiguInput</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-model:</span>abc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">v-model:</span>xyz</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"65attrs\"><a class=\"anchor\" href=\"#65attrs\">#</a> 6.5.【$attrs 】</h2>\n<ol>\n<li>\n<p>概述： <code>$attrs</code>  用于实现<strong>当前组件的父组件</strong>，向<strong>当前组件的子组件</strong>通信（<strong>祖→孙</strong>）。</p>\n</li>\n<li>\n<p>具体说明： <code>$attrs</code>  是一个对象，包含所有父组件传入的标签属性。</p>\n<blockquote>\n<p>注意： <code>$attrs</code>  会自动排除 <code>props</code>  中声明的属性 (可以认为声明过的  <code>props</code>  被子组件自己 “消费” 了)</p>\n</blockquote>\n</li>\n</ol>\n<p>父组件：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>father<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>父组件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Child</span> <span class=\"token attr-name\">:a</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>a<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:b</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>b<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:c</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-bind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;x:100,y:200&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:updateA</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>updateA<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Father<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">import</span> Child <span class=\"token keyword\">from</span> <span class=\"token string\">'./Child.vue'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ref <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">let</span> d <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">function</span> <span class=\"token function\">updateA</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\ta<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>子组件：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>子组件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>GrandChild</span> <span class=\"token attr-name\">v-bind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$attrs<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">import</span> GrandChild <span class=\"token keyword\">from</span> <span class=\"token string\">'./GrandChild.vue'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>孙组件：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grand-child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>孙组件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>a：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>b：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>c：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>d：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>x：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>y：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>updateA(666)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我更新A<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GrandChild<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">defineProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'updateA'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"66-refs-parent\"><a class=\"anchor\" href=\"#66-refs-parent\">#</a> 6.6. 【<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>e</mi><mi>f</mi><mi>s</mi><mtext>、</mtext></mrow><annotation encoding=\"application/x-tex\">refs、</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">s</span><span class=\"mord cjk_fallback\">、</span></span></span></span>parent】</h2>\n<ol>\n<li>\n<p>概述：</p>\n<ul>\n<li><code>$refs</code>  用于 ：<strong>父→子。</strong></li>\n<li><code>$parent</code>  用于：<strong>子→父。</strong></li>\n</ul>\n</li>\n<li>\n<p>原理如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>$refs</code></td>\n<td>值为对象，包含所有被 <code>ref</code>  属性标识的 <code>DOM</code>  元素或组件实例。</td>\n</tr>\n<tr>\n<td><code>$parent</code></td>\n<td>值为对象，当前组件的父组件实例对象。</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n<h2 id=\"67-provide-inject\"><a class=\"anchor\" href=\"#67-provide-inject\">#</a> 6.7. 【provide、inject】</h2>\n<ol>\n<li>\n<p>概述：实现<strong>祖孙组件</strong>直接通信</p>\n</li>\n<li>\n<p>具体使用：</p>\n<ul>\n<li>在祖先组件中通过 <code>provide</code>  配置向后代组件提供数据</li>\n<li>在后代组件中通过 <code>inject</code>  配置来声明接收数据</li>\n</ul>\n</li>\n<li>\n<p>具体编码：</p>\n<p>【第一步】父组件中，使用 <code>provide</code>  提供数据</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>father<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>父组件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>资产：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>汽车：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>money += 1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>资产+1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>car.price += 1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>汽车价格+1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Child</span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Father<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">import</span> Child <span class=\"token keyword\">from</span> <span class=\"token string\">'./Child.vue'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ref<span class=\"token punctuation\">,</span>reactive<span class=\"token punctuation\">,</span>provide <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">// 数据</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">let</span> money <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">let</span> car <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span><span class=\"token string\">'奔驰'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span><span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">// 用于更新 money 的方法</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">updateMoney</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span>number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    money<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> value</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token comment\">// 提供数据</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">'moneyContext'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>money<span class=\"token punctuation\">,</span>updateMoney<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token string\">'car'</span><span class=\"token punctuation\">,</span>car<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>注意：子组件中不用编写任何东西，是不受到任何打扰的</p>\n</blockquote>\n<p>【第二步】孙组件中使用 <code>inject</code>  配置项接受数据。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grand-child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>我是孙组件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>资产：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>汽车：<span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>updateMoney(6)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GrandChild<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  import &#123; inject &#125; from 'vue';</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  // 注入数据</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> let &#123;money,updateMoney&#125; = inject('moneyContext',&#123;money:0,updateMoney:(x:number)=>&#123;&#125;&#125;)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  let car = inject('car')</pre></td></tr></table></figure></li>\n</ol>\n<p>&lt;/script&gt;</p>\n<pre><code>\n\n## 6.8. 【pinia】\n\n参考之前`pinia`部分的讲解\n\n## 6.9. 【slot】\n\n### 1. 默认插槽\n\n![img](http://49.232.112.44/images/default_slot.png)\n\n```html\n父组件中：\n     &lt;Category title=&quot;今日热门游戏&quot;&gt;\n       &lt;ul&gt;\n         &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;\n       &lt;/ul&gt;\n     &lt;/Category&gt;\n子组件中：\n     &lt;template&gt;\n       &lt;div class=&quot;item&quot;&gt;\n         &lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;\n         &lt;!-- 默认插槽 --&gt;\n         &lt;slot&gt;&lt;/slot&gt;\n       &lt;/div&gt;\n     &lt;/template&gt;\n</code></pre>\n<h3 id=\"2-具名插槽\"><a class=\"anchor\" href=\"#2-具名插槽\">#</a> 2. 具名插槽</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>父组件中：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Category</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>今日热门游戏<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-slot:</span>s1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>g in games<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>g.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span> <span class=\"token attr-name\">#s2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>更多<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Category</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>子组件中：</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">Vue3快速上手</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>s1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>s2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"3-作用域插槽\"><a class=\"anchor\" href=\"#3-作用域插槽\">#</a> 3. 作用域插槽</h3>\n<ol>\n<li>\n<p>理解：&lt;span style=&quot;color:red&quot;&gt; 数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。&lt;/span&gt;（新闻数据在 <code>News</code>  组件中，但使用数据所遍历出来的结构由 <code>App</code>  组件决定）</p>\n</li>\n<li>\n<p>具体编码：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>父组件中：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Game</span> <span class=\"token attr-name\">v-slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>params<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token comment\">&lt;!-- &lt;Game v-slot:default=\"params\"> --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token comment\">&lt;!-- &lt;Game #default=\"params\"> --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>g in params.games<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>g.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Game</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>子组件中：</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>category<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>今日游戏榜单<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token attr-name\">:games</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>games<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">a</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>哈哈<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Category<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>reactive<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">let</span> games <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asgdytsa01'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'英雄联盟'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asgdytsa02'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'王者荣耀'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asgdytsa03'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'红色警戒'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asgdytsa04'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'斗罗大陆'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"7-其它-api\"><a class=\"anchor\" href=\"#7-其它-api\">#</a> 7. 其它 API</h1>\n<h2 id=\"71shallowref-与-shallowreactive\"><a class=\"anchor\" href=\"#71shallowref-与-shallowreactive\">#</a> 7.1.【shallowRef 与 shallowReactive 】</h2>\n<h3 id=\"shallowref\"><a class=\"anchor\" href=\"#shallowref\">#</a>  <code>shallowRef</code></h3>\n<ol>\n<li>\n<p>作用：创建一个响应式数据，但只对顶层属性进行响应式处理。</p>\n</li>\n<li>\n<p>用法：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> myVar <span class=\"token operator\">=</span> <span class=\"token function\">shallowRef</span><span class=\"token punctuation\">(</span>initialValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>特点：只跟踪引用值的变化，不关心值内部的属性变化。</p>\n</li>\n</ol>\n<h3 id=\"shallowreactive\"><a class=\"anchor\" href=\"#shallowreactive\">#</a>  <code>shallowReactive</code></h3>\n<ol>\n<li>\n<p>作用：创建一个浅层响应式对象，只会使对象的最顶层属性变成响应式的，对象内部的嵌套属性则不会变成响应式的</p>\n</li>\n<li>\n<p>用法：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> myObj <span class=\"token operator\">=</span> <span class=\"token function\">shallowReactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>特点：对象的顶层属性是响应式的，但嵌套对象的属性不是。</p>\n</li>\n</ol>\n<h3 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h3>\n<blockquote>\n<p>通过使用 <a href=\"https://cn.vuejs.org/api/reactivity-advanced.html#shallowref\"> <code>shallowRef()</code> </a> 和 <a href=\"https://cn.vuejs.org/api/reactivity-advanced.html#shallowreactive\"> <code>shallowReactive()</code> </a> 来绕开深度响应。浅层式  <code>API</code>  创建的状态只在其顶层是响应式的，对所有深层的对象不会做任何处理，避免了对每一个内部属性做响应式所带来的性能成本，这使得属性的访问变得更快，可提升性能。</p>\n</blockquote>\n<h2 id=\"72readonly-与-shallowreadonly\"><a class=\"anchor\" href=\"#72readonly-与-shallowreadonly\">#</a> 7.2.【readonly 与 shallowReadonly】</h2>\n<h3 id=\"readonly\"><a class=\"anchor\" href=\"#readonly\">#</a> <strong> <code>readonly</code> </strong></h3>\n<ol>\n<li>\n<p>作用：用于创建一个对象的深只读副本。</p>\n</li>\n<li>\n<p>用法：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> original <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> readOnlyCopy <span class=\"token operator\">=</span> <span class=\"token function\">readonly</span><span class=\"token punctuation\">(</span>original<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>特点：</p>\n<ul>\n<li>对象的所有嵌套属性都将变为只读。</li>\n<li>任何尝试修改这个对象的操作都会被阻止（在开发模式下，还会在控制台中发出警告）。</li>\n</ul>\n</li>\n<li>\n<p>应用场景：</p>\n<ul>\n<li>创建不可变的状态快照。</li>\n<li>保护全局状态或配置不被修改。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"shallowreadonly\"><a class=\"anchor\" href=\"#shallowreadonly\">#</a> <strong> <code>shallowReadonly</code> </strong></h3>\n<ol>\n<li>\n<p>作用：与  <code>readonly</code>  类似，但只作用于对象的顶层属性。</p>\n</li>\n<li>\n<p>用法：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> original <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> shallowReadOnlyCopy <span class=\"token operator\">=</span> <span class=\"token function\">shallowReadonly</span><span class=\"token punctuation\">(</span>original<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>特点：</p>\n<ul>\n<li>\n<p>只将对象的顶层属性设置为只读，对象内部的嵌套属性仍然是可变的。</p>\n</li>\n<li>\n<p>适用于只需保护对象顶层属性的场景。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"73toraw-与-markraw\"><a class=\"anchor\" href=\"#73toraw-与-markraw\">#</a> 7.3.【toRaw 与 markRaw】</h2>\n<h3 id=\"toraw\"><a class=\"anchor\" href=\"#toraw\">#</a>  <code>toRaw</code></h3>\n<ol>\n<li>\n<p>作用：用于获取一个响应式对象的原始对象，  <code>toRaw</code>  返回的对象不再是响应式的，不会触发视图更新。</p>\n<blockquote>\n<p>官网描述：这是一个可以用于临时读取而不引起代理访问 / 跟踪开销，或是写入而不触发更改的特殊方法。不建议保存对原始对象的持久引用，请谨慎使用。</p>\n</blockquote>\n<blockquote>\n<p>何时使用？ —— 在需要将响应式对象传递给非  <code>Vue</code>  的库或外部系统时，使用  <code>toRaw</code>  可以确保它们收到的是普通对象</p>\n</blockquote>\n</li>\n<li>\n<p>具体编码：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> reactive<span class=\"token punctuation\">,</span>toRaw<span class=\"token punctuation\">,</span>markRaw<span class=\"token punctuation\">,</span>isReactive <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/* toRaw */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 响应式对象</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'tony'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 原始对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">let</span> rawPerson <span class=\"token operator\">=</span> <span class=\"token function\">toRaw</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/* markRaw */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">let</span> citysd <span class=\"token operator\">=</span> <span class=\"token function\">markRaw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asdda01'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'北京'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asdda02'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'上海'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asdda03'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'天津'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asdda04'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'重庆'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 根据原始对象 citys 去创建响应式对象 citys2 —— 创建失败，因为 citys 被 markRaw 标记了</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">let</span> citys2 <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span>citys<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isReactive</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isReactive</span><span class=\"token punctuation\">(</span>rawPerson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isReactive</span><span class=\"token punctuation\">(</span>citys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isReactive</span><span class=\"token punctuation\">(</span>citys2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"markraw\"><a class=\"anchor\" href=\"#markraw\">#</a>  <code>markRaw</code></h3>\n<ol>\n<li>\n<p>作用：标记一个对象，使其<strong>永远不会</strong>变成响应式的。</p>\n<blockquote>\n<p>例如使用 <code>mockjs</code>  时，为了防止误把 <code>mockjs</code>  变为响应式对象，可以使用  <code>markRaw</code>  去标记 <code>mockjs</code></p>\n</blockquote>\n</li>\n<li>\n<p>编码：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* markRaw */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> citys <span class=\"token operator\">=</span> <span class=\"token function\">markRaw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asdda01'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'北京'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asdda02'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'上海'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asdda03'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'天津'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token string\">'asdda04'</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">'重庆'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 根据原始对象 citys 去创建响应式对象 citys2 —— 创建失败，因为 citys 被 markRaw 标记了</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">let</span> citys2 <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span>citys<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"74customref\"><a class=\"anchor\" href=\"#74customref\">#</a> 7.4.【customRef】</h2>\n<p>作用：创建一个自定义的 <code>ref</code> ，并对其依赖项跟踪和更新触发进行逻辑控制。</p>\n<p>实现防抖效果（ <code>useSumRef.ts</code> ）：</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>customRef <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>initValue<span class=\"token operator\">:</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>delay<span class=\"token operator\">:</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">let</span> msg <span class=\"token operator\">=</span> <span class=\"token function\">customRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">,</span>trigger<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">let</span> timer<span class=\"token operator\">:</span><span class=\"token builtin\">number</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">track</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 告诉 Vue 数据 msg 很重要，要对 msg 持续关注，一旦变化就更新</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> initValue</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          initValue <span class=\"token operator\">=</span> value</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 通知 Vue 数据 msg 变化了</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>msg<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>组件中使用：</p>\n<h1 id=\"8-vue3新组件\"><a class=\"anchor\" href=\"#8-vue3新组件\">#</a> 8. Vue3 新组件</h1>\n<h2 id=\"81-teleport\"><a class=\"anchor\" href=\"#81-teleport\">#</a> 8.1. 【Teleport】</h2>\n<ul>\n<li>什么是 Teleport？—— Teleport 是一种能够将我们的<strong>组件 html 结构</strong>移动到指定位置的技术。</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>teleport</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>body<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-show</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>isShow<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>我是一个弹窗<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>我是弹窗中的一些内容<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>isShow = false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>关闭弹窗<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>teleport</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"82-suspense\"><a class=\"anchor\" href=\"#82-suspense\">#</a> 8.2. 【Suspense】</h2>\n<ul>\n<li>等待异步组件时渲染一些额外内容，让应用有更好的用户体验</li>\n<li>使用步骤：\n<ul>\n<li>异步引入组件</li>\n<li>使用 <code>Suspense</code>  包裹组件，并配置好 <code>default</code>  与  <code>fallback</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight tsx\"><figcaption data-lang=\"React TSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineAsyncComponent<span class=\"token punctuation\">,</span>Suspense <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> Child <span class=\"token operator\">=</span> <span class=\"token function\">defineAsyncComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Child.vue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>我是App组件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Suspense</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-slot:</span>default</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Child</span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-slot:</span>fallback</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>加载中.......<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Suspense</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"83全局api转移到应用对象\"><a class=\"anchor\" href=\"#83全局api转移到应用对象\">#</a> 8.3.【全局 API 转移到应用对象】</h2>\n<ul>\n<li><code>app.component</code></li>\n<li><code>app.config</code></li>\n<li><code>app.directive</code></li>\n<li><code>app.mount</code></li>\n<li><code>app.unmount</code></li>\n<li><code>app.use</code></li>\n</ul>\n<h2 id=\"84其他\"><a class=\"anchor\" href=\"#84其他\">#</a> 8.4.【其他】</h2>\n<ul>\n<li>\n<p>过渡类名  <code>v-enter</code>  修改为  <code>v-enter-from</code> 、过渡类名  <code>v-leave</code>  修改为  <code>v-leave-from</code> 。</p>\n</li>\n<li>\n<p><code>keyCode</code>  作为  <code>v-on</code>  修饰符的支持。</p>\n</li>\n<li>\n<p><code>v-model</code>  指令在组件上的使用已经被重新设计，替换掉了  <code>v-bind.sync。</code></p>\n</li>\n<li>\n<p><code>v-if</code>  和  <code>v-for</code>  在同一个元素身上使用时的优先级发生了变化。</p>\n</li>\n<li>\n<p>移除了 <code>$on</code> 、 <code>$off</code>  和  <code>$once</code>  实例方法。</p>\n</li>\n<li>\n<p>移除了过滤器  <code>filter</code> 。</p>\n</li>\n<li>\n<p>移除了 <code>$children</code>  实例  <code>propert</code> 。</p>\n<p>......</p>\n</li>\n</ul>\n","categories":["前端学习","Vue3"],"tags":["Vue3"]},{"title":"HTML5基础","url":"/2023/11/23/qianduan/HTML5+CSS3/HTML5/","content":"<div class=\"note warning\">\n<p>HTML 和 CSS 由于较为简单，本 Markdown 文档比较凌乱 (机翻尚硅谷笔记而来，具体以原版为准)，在此仅为方便本人回顾知识创建。</p>\n</div>\n<h1 id=\"一-html5简介\"><a class=\"anchor\" href=\"#一-html5简介\">#</a> 一、HTML5 简介</h1>\n<h2 id=\"1-什么是html\"><a class=\"anchor\" href=\"#1-什么是html\">#</a> 1. 什么是 HTML</h2>\n<h5 id=\"html5-是新一代的-html-标准-2014-年-10-月由万维网联盟w3c完成标准制定\"><a class=\"anchor\" href=\"#html5-是新一代的-html-标准-2014-年-10-月由万维网联盟w3c完成标准制定\">#</a> HTML5 是新一代的 HTML 标准， 2014 年 10 月由万维网联盟（W3C）完成标准制定。</h5>\n<h5 id=\"官网地址\"><a class=\"anchor\" href=\"#官网地址\">#</a> 官网地址：</h5>\n<pre><code>W3C提供： https://www.w3.org/TR/html/index.html\nWHATWG提供： https://whatwg-cn.github.io/html/multipage\nHTML5在狭义上是指新一代的 HTML 标准，在广义上是指：整个前端。\n</code></pre>\n<h2 id=\"2-html5-优势\"><a class=\"anchor\" href=\"#2-html5-优势\">#</a> 2. HTML5 优势</h2>\n<pre><code>1. 针对JavaScript，新增了很多可操作的接口。\n2. 新增了一些语义化标签、全局属性。\n3. 新增了多媒体标签，可以很好的替代flash。\n4. 更加侧重语义化，对于SEO更友好。\n5. 可移植性好，可以大量应用在移动设备上。\n</code></pre>\n<h2 id=\"3html5兼容性\"><a class=\"anchor\" href=\"#3html5兼容性\">#</a> 3.HTML5 兼容性</h2>\n<pre><code>支持：Chrome、Safari、Opera、Firefox 等主流浏览器。\n</code></pre>\n<h5 id=\"ie浏览器必须是-9-及以上版本才支持html5且ie9仅支持部分html5新特性\"><a class=\"anchor\" href=\"#ie浏览器必须是-9-及以上版本才支持html5且ie9仅支持部分html5新特性\">#</a> IE 浏览器必须是 9 及以上版本才支持 HTML5，且 IE9 仅支持部分 HTML5 新特性。</h5>\n<h1 id=\"二-新增语义化标签\"><a class=\"anchor\" href=\"#二-新增语义化标签\">#</a> 二、新增语义化标签</h1>\n<h2 id=\"1-新增布局标签\"><a class=\"anchor\" href=\"#1-新增布局标签\">#</a> 1. 新增布局标签</h2>\n<h5 id=\"标签名-语义-单双标\"><a class=\"anchor\" href=\"#标签名-语义-单双标\">#</a> 标签名 语义 单 / 双标</h5>\n<h5 id=\"签\"><a class=\"anchor\" href=\"#签\">#</a> 签</h5>\n<pre><code>header 整个页面，或部分区域的头部 双\n</code></pre>\n<pre><code>footer 整个页面，或部分区域的底部 双\n</code></pre>\n<pre><code>nav 导航 双\n</code></pre>\n<pre><code>article 文章、帖子、杂志、新闻、博客、评论等。 双\n</code></pre>\n<pre><code>section 页面中的某段文字，或文章中的某段文字（里面文字通常里面会包含\n标题）。\n</code></pre>\n<h5 id=\"双\"><a class=\"anchor\" href=\"#双\">#</a> 双</h5>\n<pre><code>aside 侧边栏 双\n</code></pre>\n<pre><code>main 文档的主要内容 (WHATWG没有语义，IE不支持)，几乎不用。 双\n</code></pre>\n<pre><code>hgroup 包裹连续的标题，如文章主标题、副标题的组合 （W3C将其删除） 双\n</code></pre>\n<p>关于 article 和 section：</p>\n<pre><code>1. artical里面可以有多个section。\n2. section强调的是分段或分块，如果你想将一块内容分成几段的时候，可使用section元\n素。\n3. article比section更强调独立性，一块内容如果比较独立、比较完整，应该使用\narticle元素。\n</code></pre>\n<h3 id=\"2-新增状态标签\"><a class=\"anchor\" href=\"#2-新增状态标签\">#</a> 2. 新增状态标签</h3>\n<h4 id=\"21-meter-标签\"><a class=\"anchor\" href=\"#21-meter-标签\">#</a> 2.1 meter 标签</h4>\n<pre><code>语义：定义已知范围内的标量测量。也被称为 gauge（尺度），双标签，例如：电量、磁盘用量\n等。\n</code></pre>\n<h5 id=\"属性-值-描述\"><a class=\"anchor\" href=\"#属性-值-描述\">#</a> 属性 值 描述</h5>\n<pre><code>high 数值 规定高值\n</code></pre>\n<pre><code>low 数值 规定低值\n</code></pre>\n<pre><code>max 数值 规定最大值\n</code></pre>\n<pre><code>min 数值 规定最小值\n</code></pre>\n<pre><code>optimum 数值 规定最优值\n</code></pre>\n<pre><code>value 数值 规定当前值\n</code></pre>\n<h5 id=\"常用属性如下\"><a class=\"anchor\" href=\"#常用属性如下\">#</a> 常用属性如下：</h5>\n<h5 id=\"标签名-语义-单双标签\"><a class=\"anchor\" href=\"#标签名-语义-单双标签\">#</a> 标签名 语义 单 / 双标签</h5>\n<pre><code>datalist 用于搜索框的关键字提示 双\n</code></pre>\n<pre><code>details 用于展示问题和答案，或对专有名词进行解释 双\n</code></pre>\n<pre><code>summary 写在 details 的里面，用于指定问题或专有名词 双\n</code></pre>\n<h5 id=\"标签名-语义-单双标签-2\"><a class=\"anchor\" href=\"#标签名-语义-单双标签-2\">#</a> 标签名 语义 单 / 双标签</h5>\n<pre><code>ruby 包裹需要注音的文字 双\n</code></pre>\n<pre><code>rt 写注音，rt标签写在ruby的里面 双\n</code></pre>\n<h4 id=\"22-progress-标签\"><a class=\"anchor\" href=\"#22-progress-标签\">#</a> 2.2 progress 标签</h4>\n<h5 id=\"语义显示某个任务完成的进度的指示器一般用于表示进度条双标签例如工作完成进度\"><a class=\"anchor\" href=\"#语义显示某个任务完成的进度的指示器一般用于表示进度条双标签例如工作完成进度\">#</a> 语义：显示某个任务完成的进度的指示器，一般用于表示进度条，双标签，例如：工作完成进度</h5>\n<h5 id=\"等\"><a class=\"anchor\" href=\"#等\">#</a> 等。</h5>\n<h5 id=\"属性-值-描述-2\"><a class=\"anchor\" href=\"#属性-值-描述-2\">#</a> 属性 值 描述</h5>\n<pre><code>max 数值 规定目标值。\n</code></pre>\n<pre><code>value 数值 规定当前值。\n</code></pre>\n<h5 id=\"常用属性如下-2\"><a class=\"anchor\" href=\"#常用属性如下-2\">#</a> 常用属性如下：</h5>\n<h3 id=\"3-新增列表标签\"><a class=\"anchor\" href=\"#3-新增列表标签\">#</a> 3. 新增列表标签</h3>\n<h3 id=\"4-新增文本标签\"><a class=\"anchor\" href=\"#4-新增文本标签\">#</a> 4. 新增文本标签</h3>\n<h4 id=\"41-文本注音\"><a class=\"anchor\" href=\"#41-文本注音\">#</a> 4.1 文本注音</h4>\n<pre><code>&lt;input type=&quot;text&quot; list=&quot;mydata&quot;&gt;\n&lt;datalist id=&quot;mydata&quot;&gt;\n&lt;option value=&quot;周冬雨&quot;&gt;周冬雨&lt;/option&gt;\n&lt;option value=&quot;周杰伦&quot;&gt;周杰伦&lt;/option&gt;\n&lt;option value=&quot;温兆伦&quot;&gt;温兆伦&lt;/option&gt;\n&lt;option value=&quot;马冬梅&quot;&gt;马冬梅&lt;/option&gt;\n&lt;/datalist&gt;\n</code></pre>\n<pre><code>&lt;details&gt;\n&lt;summary&gt;如何走上人生巅峰？&lt;/summary&gt;\n&lt;p&gt;一步一步走呗&lt;/p&gt;\n&lt;/details&gt;\n</code></pre>\n<pre><code>&lt;ruby&gt;\n&lt;span&gt;魑魅魍魉&lt;/span&gt;\n&lt;rt&gt;chī mèi wǎng liǎng &lt;/rt&gt;\n&lt;/ruby&gt;\n</code></pre>\n<h5 id=\"标签名-语义-单双标签-3\"><a class=\"anchor\" href=\"#标签名-语义-单双标签-3\">#</a> 标签名 语义 单 / 双标签</h5>\n<pre><code>mark 标记 双\n</code></pre>\n<h5 id=\"属性名-功能\"><a class=\"anchor\" href=\"#属性名-功能\">#</a> 属性名 功能</h5>\n<pre><code>placeholder 提示文字（注意：不是默认值，value是默认值），适用于 文字输入类 的表\n单控件。\n</code></pre>\n<pre><code>required 表示该输入项必填， 适用于 除按钮外 其他表单控件。\n</code></pre>\n<pre><code>autofocus 自动获取焦点，适用于所有表单控件。\n</code></pre>\n<pre><code>autocomplete\n</code></pre>\n<pre><code>自动完成，可以设置为on或off，适用于 文字输入类 的表单控件。\n注意：密码输入框、多行输入框不可用。\n</code></pre>\n<pre><code>pattern\n</code></pre>\n<h5 id=\"填写正则表达式适用于文本输入类表单控件\"><a class=\"anchor\" href=\"#填写正则表达式适用于文本输入类表单控件\">#</a> 填写正则表达式，适用于文本输入类表单控件。</h5>\n<pre><code>注意：多行输入不可用，且空的输入框不会验证，往往与 required配合。\n</code></pre>\n<h4 id=\"4-2-文本标记\"><a class=\"anchor\" href=\"#4-2-文本标记\">#</a> 4. 2 文本标记</h4>\n<pre><code>注意： W3C 建议 mark 用于标记搜索结果中的关键字。\n</code></pre>\n<h1 id=\"三-新增表单功能\"><a class=\"anchor\" href=\"#三-新增表单功能\">#</a> 三、新增表单功能</h1>\n<h2 id=\"1-表单控件新增属性\"><a class=\"anchor\" href=\"#1-表单控件新增属性\">#</a> 1. 表单控件新增属性</h2>\n<h2 id=\"2-input-新增属性值\"><a class=\"anchor\" href=\"#2-input-新增属性值\">#</a> 2. input 新增属性值</h2>\n<h5 id=\"属性名-功能-2\"><a class=\"anchor\" href=\"#属性名-功能-2\">#</a> 属性名 功能</h5>\n<pre><code>email 邮箱 类型的输入框，表单提交时会验证格式，输入为空则不验证格式。\n</code></pre>\n<pre><code>url url类型的输入框，表单提交时会验证格式，输入为空则不验证格式。\n</code></pre>\n<pre><code>number 数字 类型的输入框，表单提交时会验证格式，输入为空则不验证格式。\n</code></pre>\n<pre><code>search 搜索 类型的输入框，表单提交时不会验证格式。\n</code></pre>\n<pre><code>tel 电话 类型的输入框，表单提交时不会验证格式，在移动端使用时，会唤起数\n字键盘。\n</code></pre>\n<pre><code>range 范围 选择框，默认值为 50 ，表单提交时不会验证格式。\n</code></pre>\n<pre><code>color 颜色 选择框，默认值为黑色，表单提交时不会验证格式。\n</code></pre>\n<pre><code>date 日期 选择框，默认值为空，表单提交时不会验证格式。\n</code></pre>\n<pre><code>month 月份 选择框，默认值为空，表单提交时不会验证格式。\n</code></pre>\n<pre><code>week 周 选择框，默认值为空，表单提交时不会验证格式。\n</code></pre>\n<pre><code>time 时间 选择框，默认值为空，表单提交时不会验证格式。\n</code></pre>\n<pre><code>datetime-local 日期+时间 选择框，默认值为空，表单提交时不会验证格式。\n</code></pre>\n<h5 id=\"属性名-功能-3\"><a class=\"anchor\" href=\"#属性名-功能-3\">#</a> 属性名 功能</h5>\n<pre><code>novalidate 如果给form标签设置了该属性，表单提交的时候不再进行验证。\n</code></pre>\n<h2 id=\"3-form-标签新增属性\"><a class=\"anchor\" href=\"#3-form-标签新增属性\">#</a> 3. form 标签新增属性</h2>\n<h1 id=\"四-新增多媒体标签\"><a class=\"anchor\" href=\"#四-新增多媒体标签\">#</a> 四、新增多媒体标签</h1>\n<h2 id=\"1-视频标签\"><a class=\"anchor\" href=\"#1-视频标签\">#</a> 1. 视频标签</h2>\n<pre><code>&lt;video&gt;标签用来定义视频，它是双标签。\n</code></pre>\n<h5 id=\"属性-值-描述-3\"><a class=\"anchor\" href=\"#属性-值-描述-3\">#</a> 属性 值 描述</h5>\n<pre><code>src URL地址 视频地址\n</code></pre>\n<pre><code>width 像素值 设置视频播放器的宽度\n</code></pre>\n<pre><code>height 像素值 设置视频播放器的高度\n</code></pre>\n<pre><code>controls - 向用户显示视频控件（比如播放/暂停按钮）\n</code></pre>\n<pre><code>muted - 视频静音\n</code></pre>\n<pre><code>autoplay - 视频自动播放\n</code></pre>\n<pre><code>loop - 循环播放\n</code></pre>\n<pre><code>poster URL地址 视频封面\n</code></pre>\n<pre><code>preload auto/metadata/none\n</code></pre>\n<pre><code>视频预加载，如果使用autoplay，则忽略该属\n性。\n</code></pre>\n<h5 id=\"属性-值-描述-4\"><a class=\"anchor\" href=\"#属性-值-描述-4\">#</a> 属性 值 描述</h5>\n<pre><code>src URL地址 音频地址\n</code></pre>\n<pre><code>controls - 向用户显示音频控件（比如播放/暂停按钮）\n</code></pre>\n<pre><code>autoplay - 音频自动播放\n</code></pre>\n<pre><code>muted - 音频静音\n</code></pre>\n<pre><code>loop - 循环播放\n</code></pre>\n<pre><code>preload auto/metadata/none\n</code></pre>\n<pre><code>音频预加载，如果使用autoplay，则忽略该属\n性。\n</code></pre>\n<pre><code>none: 不预加载视频。\nmetadata: 仅预先获取视频的元数据（例如长\n度）。\nauto: 可以下载整个视频文件，即使用户不希\n望使用它。\n</code></pre>\n<h2 id=\"2-音频标签\"><a class=\"anchor\" href=\"#2-音频标签\">#</a> 2. 音频标签</h2>\n<pre><code>&lt;audio&gt;标签用来定义音频，它是双标签。\n</code></pre>\n<pre><code>none: 不预加载音频。\nmetadata: 仅预先获取音频的元数据（例如长\n度）。\nauto: 可以下载整个音频文件，即使用户不希\n望使用它。\n</code></pre>\n<h5 id=\"属性名-功能-4\"><a class=\"anchor\" href=\"#属性名-功能-4\">#</a> 属性名 功能</h5>\n<pre><code>contenteditable\n</code></pre>\n<h5 id=\"表示元素是否可被用户编辑可选值如下\"><a class=\"anchor\" href=\"#表示元素是否可被用户编辑可选值如下\">#</a> 表示元素是否可被用户编辑，可选值如下：</h5>\n<pre><code>true：可编辑\nfalse：不可编辑\n</code></pre>\n<pre><code>draggable\n</code></pre>\n<h5 id=\"表示元素可以被拖动可选值如下\"><a class=\"anchor\" href=\"#表示元素可以被拖动可选值如下\">#</a> 表示元素可以被拖动，可选值如下：</h5>\n<pre><code>true：可拖动\nfalse：不可拖动\n</code></pre>\n<pre><code>hidden 隐藏元素\n</code></pre>\n<pre><code>spellcheck\n</code></pre>\n<h5 id=\"规定是否对元素进行拼写和语法检查可选值如下\"><a class=\"anchor\" href=\"#规定是否对元素进行拼写和语法检查可选值如下\">#</a> 规定是否对元素进行拼写和语法检查，可选值如下：</h5>\n<pre><code>true：检查\nfalse：不检查\n</code></pre>\n<pre><code>contextmenu 规定元素的上下文菜单，在用户鼠标右键点击元素时显示。\n</code></pre>\n<pre><code>data-* 用于存储页面的私有定制数据。\n</code></pre>\n<h1 id=\"五-新增全局属性了解\"><a class=\"anchor\" href=\"#五-新增全局属性了解\">#</a> 五、新增全局属性（了解）</h1>\n<h1 id=\"六-html-5-兼容性处理\"><a class=\"anchor\" href=\"#六-html-5-兼容性处理\">#</a> 六、HTML 5 兼容性处理</h1>\n<h5 id=\"添加元信息让浏览器处于最优渲染模式\"><a class=\"anchor\" href=\"#添加元信息让浏览器处于最优渲染模式\">#</a> 添加元信息，让浏览器处于最优渲染模式。</h5>\n<pre><code>使用html5shiv让低版本浏览器认识H5的语义化标签。\n</code></pre>\n<h5 id=\"扩展\"><a class=\"anchor\" href=\"#扩展\">#</a> 扩展</h5>\n<pre><code>lt 小于\nlte 小于等于\ngt 大于\ngte 大于等于\n! 逻辑非\n</code></pre>\n<h5 id=\"示例\"><a class=\"anchor\" href=\"#示例\">#</a> 示例：</h5>\n<pre><code>&lt;!--设置IE总是使用最新的文档模式进行渲染--&gt;\n&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge&quot;&gt;\n</code></pre>\n<pre><code>&lt;!--优先使用 webkit ( Chromium ) 内核进行渲染, 针对 360 等壳浏览器--&gt;\n&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;\n</code></pre>\n<pre><code>&lt;!--[if lt ie 9]&gt;\n&lt;script src=&quot;../sources/js/html5shiv.js&quot;&gt;&lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre>\n<p>&lt;!--[if IE 8]&gt; 仅 IE8 可见 &lt;![endif]--&gt;<br />\n&lt;!--[if gt IE 8]&gt; 仅 IE8 以上可见 &lt;![endif]—&gt;<br />\n&lt;!--[if lt IE 8]&gt; 仅 IE8 以下可见 &lt;![endif]—&gt;<br />\n&lt;!--[if gte IE 8]&gt;IE8 及以上可见 &lt;![endif]—&gt;<br />\n&lt;!--[if lte IE 8]&gt;IE8 及以下可见 &lt;![endif]—&gt;<br />\n&lt;!--[if !IE 8]&gt; 非 IE8 的 IE 可见 &lt;![endif]--&gt;</p>\n","categories":["前端学习","HTML5+CSS3"],"tags":["HTML5"]},{"title":"CSS3基础","url":"/2023/11/23/qianduan/HTML5+CSS3/CSS3/","content":"<div class=\"note warning\">\n<p>HTML 和 CSS 由于较为简单，本 Markdown 文档比较凌乱 (机翻尚硅谷笔记而来，具体以原版为准)，在此仅为方便本人回顾知识创建。</p>\n</div>\n<h1 id=\"css3-简介\"><a class=\"anchor\" href=\"#css3-简介\">#</a> CSS3 简介</h1>\n<h2 id=\"css3-概述\"><a class=\"anchor\" href=\"#css3-概述\">#</a> CSS3 概述</h2>\n<p>CSS3 是 CSS2 的升级版本，它在 CSS2 的基础上，新增了很多强大的新功能，从而解决一些实际面临的问题。</p>\n<pre><code>\nCSS3在未来会按照 模块化 的方式去发展： https://www.w3.org/Style/CSS/current-work.html\n\nCSS3的新特性如下：\n\n新增了 更加实用的选择器 ，例如：动态伪类选择器、目标伪类选择器、伪元素选择器等等。\n\n新增了 更好的视觉效果 ，例如：圆角、阴影、渐变等。\n\n新增了 丰富的背景效果 ，例如：支持多个背景图片，同时新增了若干个背景相关的属性。\n\n新增了 全新的布局方案 —— 弹性盒子。\n\n新增了Web 字体 ，可以显示用户电脑上没有安装的字体。\n\n增强了 颜色 ，例如： HSL、HSLA、RGBA 几种新的颜色模式，新增 opacity属性来控制\n\n透明度。\n\n增加了2D 和 3D 变换 ，例如：旋转、扭曲、缩放、位移等。\n\n增加 动画与过渡效果 ，让效果的变换更具流线性、平滑性。\n\n......\n\n</code></pre>\n<h2 id=\"2-css3私有前缀\"><a class=\"anchor\" href=\"#2-css3私有前缀\">#</a> 2. CSS3 私有前缀</h2>\n<h2 id=\"21-什么是私有前缀\"><a class=\"anchor\" href=\"#21-什么是私有前缀\">#</a> 2.1 什么是私有前缀</h2>\n<p>如下代码中的 - webkit - 就是私有前缀</p>\n<h2 id=\"22-为什么要有私有前缀\"><a class=\"anchor\" href=\"#22-为什么要有私有前缀\">#</a> 2.2 为什么要有私有前缀</h2>\n<h5 id=\"w3c标准所提出的某个css特性在被浏览器正式支持之前浏览器厂商会根据浏览器的内核\"><a class=\"anchor\" href=\"#w3c标准所提出的某个css特性在被浏览器正式支持之前浏览器厂商会根据浏览器的内核\">#</a> W3C 标准所提出的某个 CSS 特性，在被浏览器正式支持之前，浏览器厂商会根据浏览器的内核，</h5>\n<h5 id=\"使用私有前缀来测试该css特性在浏览器正式支持该css特性后就不需要私有前缀了\"><a class=\"anchor\" href=\"#使用私有前缀来测试该css特性在浏览器正式支持该css特性后就不需要私有前缀了\">#</a> 使用私有前缀来测试该 CSS 特性，在浏览器正式支持该 CSS 特性后，就不需要私有前缀了。</h5>\n<h5 id=\"举个例子\"><a class=\"anchor\" href=\"#举个例子\">#</a> 举个例子：</h5>\n<p>查询 CSS3 兼容性的网站：</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYW5pdXNlLmNvbS8=\">https://caniuse.com/</span></p>\n</blockquote>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token property\">width</span><span class=\"token punctuation\">:</span>400px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>400px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token property\">-webkit-border-radius</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token property\">-webkit-border-radius</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token property\">-moz-border-radius</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token property\">-ms-border-radius</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token property\">-o-border-radius</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"常见浏览器私有前缀\"><a class=\"anchor\" href=\"#常见浏览器私有前缀\">#</a> 常见浏览器私有前缀</h2>\n<pre><code>\nChrome 浏览器：- webkit -\n\nSafari 浏览器： - webkit -\n\nFirefox 浏览器：- moz -\n\nEdge 浏览器：- webkit -\n\n旧 Opera 浏览器：-o-\n\n旧 IE 浏览器：-ms-\n\n</code></pre>\n<p>注意：</p>\n<pre><code>\n我们在编码时，不用过于关注浏览器私有前缀，不用绞尽脑汁的去记忆，也不用每个都去查询，因\n\n为常用的CSS3新特性，主流浏览器都是支持的，即便是为了老浏览器而加前缀，我们也可以借助\n\n现代的构建工具，去帮我们添加私有前缀。\n\n</code></pre>\n<h1 id=\"css-3-基本语法\"><a class=\"anchor\" href=\"#css-3-基本语法\">#</a> CSS 3 基本语法</h1>\n<h2 id=\"css-3-新增长度单位\"><a class=\"anchor\" href=\"#css-3-新增长度单位\">#</a> CSS 3 新增长度单位</h2>\n<pre><code>\n1. rem根元素字体大小的倍数，只与根元素字体大小有关。\n\n2. vw 视口宽度的百分之多少 10vw 就是视口宽度的10%。\n\n3. vh 视口高度的百分之多少 10vh 就是视口高度的10%。\n\n4. vmax 视口宽高中大的那个的百分之多少。（了解即可）\n\n5. vmin 视口宽高中小的那个的百分之多少。（了解即可）\n\n</code></pre>\n<h2 id=\"css-3-新增颜色设置方式\"><a class=\"anchor\" href=\"#css-3-新增颜色设置方式\">#</a> CSS 3 新增颜色设置方式</h2>\n<p>CSS3 新增了三种颜色设置方式，分别是：rgba、hsl、hsla，由于之前已经详细讲解，此处略</p>\n<p>过。</p>\n<h2 id=\"css-3-新增选择器\"><a class=\"anchor\" href=\"#css-3-新增选择器\">#</a> CSS 3 新增选择器</h2>\n<p>CSS3 新增的选择器有：动态伪类、目标伪类、语言伪类、UI 伪类、结构伪类、否定伪类、伪元素；这些在 CSS2 中已经详细讲解，此处略过。</p>\n<h2 id=\"css-3-新增盒模型相关属性\"><a class=\"anchor\" href=\"#css-3-新增盒模型相关属性\">#</a> CSS 3 新增盒模型相关属性</h2>\n<p>可选值 含义</p>\n<pre><code>\ncontent-box width 和 height 设置的是盒子内容区的大小。（默认值）\n\n</code></pre>\n<pre><code>\nborder-box width 和 height 设置的是盒子总大小。（怪异盒模型）\n\n</code></pre>\n<p>值 含义</p>\n<pre><code>\nnone 不允许用户调整元素大小。^ (默认)\n\n</code></pre>\n<pre><code>\nboth 用户可以调节元素的宽度和高度。\n\n</code></pre>\n<pre><code>\nhorizontal 用户可以调节元素的宽度^ 。\n\n</code></pre>\n<pre><code>\nvertical 用户可以调节元素的高度。\n\n</code></pre>\n<h3 id=\"box-sizing-怪异盒模型\"><a class=\"anchor\" href=\"#box-sizing-怪异盒模型\">#</a> box - sizing 怪异盒模型 ^</h3>\n<p>使用 box-sizing 属性可以设置盒模型的两种类型</p>\n<h3 id=\"resize-调整盒子大小\"><a class=\"anchor\" href=\"#resize-调整盒子大小\">#</a> resize 调整盒子大小 ^</h3>\n<p>使用 resize 属性可以控制是否允许用户调节元素尺寸。</p>\n<h3 id=\"box-shadow-盒子阴影\"><a class=\"anchor\" href=\"#box-shadow-盒子阴影\">#</a> box - shadow 盒子阴影 ^</h3>\n<p>使用 box-shadow 属性为盒子添加阴影。</p>\n<pre><code>\n语法：\n\n</code></pre>\n<p>值 含义</p>\n<pre><code>\nh-shadow 水平阴影的位置，必须填写，可以为负值\n\n</code></pre>\n<pre><code>\nv-shadow 垂直阴影的位置，必须填写，可以为负值\n\n</code></pre>\n<pre><code>\nblur 可选，模糊距离\n\n</code></pre>\n<pre><code>\nspread 可选，阴影的外延值\n\n</code></pre>\n<pre><code>\ncolor 可选，阴影的颜色\n\n</code></pre>\n<pre><code>\ninset 可选，将外部阴影改为内部阴影\n\n</code></pre>\n<p>各个值的含义：</p>\n<pre><code>\n默认值：box-shadow:none表示没有阴影\n\n示例：\n\n</code></pre>\n<pre><code>\nbox-shadow: h-shadow v-shadow blur spread color inset;\n\n</code></pre>\n<pre><code>\n/* 写两个值，含义：水平位置、垂直位置 */\n\nbox-shadow: 10px 10px;\n\n</code></pre>\n<pre><code>\n/* 写三个值，含义：水平位置、垂直位置、颜色 */\n\nbox-shadow: 10px 10px red;\n\n</code></pre>\n<h3 id=\"opacity-不透明度\"><a class=\"anchor\" href=\"#opacity-不透明度\">#</a> opacity 不透明度 ^</h3>\n<pre><code>\nopacity属性能为整个元素添加透明效果， 值是 0 到 1 之间的小数， 0 是完全透明， 1 表示完\n\n全不透明。\n\n</code></pre>\n<pre><code>\nopacity 与 rgba 的区别？\n\nopacity 是一个属性，设置的是整个元素（包括元素里的内容）的不透明度。\n\nrgba 是颜色的设置方式，用于设置颜色，它的透明度，仅仅是调整颜色的透明度。\n\n</code></pre>\n<h2 id=\"css-3-新增背景属性\"><a class=\"anchor\" href=\"#css-3-新增背景属性\">#</a> CSS 3 新增背景属性</h2>\n<h3 id=\"background-origin\"><a class=\"anchor\" href=\"#background-origin\">#</a> background-origin</h3>\n<p>作用：设置背景图的原点。</p>\n<p>语法</p>\n<pre><code>\n1. padding-box：从padding区域开始显示背景图像。—— 默认值\n\n2. border-box： 从border区域开始显示背景图像。\n\n3. content-box： 从content区域开始显示背景图像。\n\n</code></pre>\n<h3 id=\"background-clip\"><a class=\"anchor\" href=\"#background-clip\">#</a> background-clip</h3>\n<p>作用：设置背景图的向外裁剪的区域。</p>\n<p>语法</p>\n<pre><code>\n1. border-box： 从border区域开始向外裁剪背景。 —— 默认值\n\n2. padding-box： 从padding区域开始向外裁剪背景。\n\n3. content-box： 从content区域开始向外裁剪背景。\n\n4. text：背景图只呈现在文字上。\n\n</code></pre>\n<pre><code>\n注意：若值为text，那么backgroun-clip要加上-webkit-前缀。\n\n</code></pre>\n<pre><code>\n/* 写三个值，含义：水平位置、垂直位置、模糊值 */\n\nbox-shadow: 10px 10px 10px;\n\n</code></pre>\n<pre><code>\n/* 写四个值，含义：水平位置、垂直位置、模糊值、颜色 */\n\nbox-shadow: 10px 10px 10px red;\n\n</code></pre>\n<pre><code>\n/* 写五个值，含义：水平位置、垂直位置、模糊值、外延值、颜色 */\n\nbox-shadow: 10px 10px 10px 10px blue;\n\n</code></pre>\n<pre><code>\n/* 写六个值，含义：水平位置、垂直位置、模糊值、外延值、颜色、内阴影 */\n\nbox-shadow: 10px 10px 20px 3px blue inset;\n\n</code></pre>\n<h3 id=\"background-size\"><a class=\"anchor\" href=\"#background-size\">#</a> background-size</h3>\n<p>作用：设置背景图的尺寸。</p>\n<p>语法：</p>\n<ol>\n<li>\n<p>用长度值指定背景图片大小，不允许负值。</p>\n</li>\n<li>\n<p>用百分比指定背景图片大小，不允许负值。</p>\n</li>\n<li>\n<p>auto： 背景图片的真实大小。 —— 默认值</p>\n</li>\n<li>\n<p>contain： 将背景图片等比缩放，使背景图片的宽或高，与容器的宽或高相等，再将完整</p>\n</li>\n</ol>\n<p>背景图片包含在容器内，但要注意：可能会造成容器里部分区域没有背景图片。</p>\n<ol start=\"5\">\n<li>cover：将背景图片等比缩放，直到完全覆盖容器，图片会尽可能全的显示在元素上，但要</li>\n</ol>\n<p>注意：背景图片有可能显示不完整。—— 相对比较好的选择</p>\n<h3 id=\"backgorund-复合属性\"><a class=\"anchor\" href=\"#backgorund-复合属性\">#</a> backgorund 复合属性</h3>\n<h5 id=\"语法\"><a class=\"anchor\" href=\"#语法\">#</a> 语法：</h5>\n<h5 id=\"注意\"><a class=\"anchor\" href=\"#注意\">#</a> 注意：</h5>\n<pre><code>\n1. origin 和 clip的值如果一样，如果只写一个值，则origin 和 clip 都设置；如\n\n果设置了两个值，前面的是origin，后面的clip。\n\n2. size 的值必须写在 position 值的后面，并且用 / 分开。\n\n</code></pre>\n<h3 id=\"55-多背景图\"><a class=\"anchor\" href=\"#55-多背景图\">#</a> 5.5. 多背景图</h3>\n<h5 id=\"css3-允许元素设置多个背景图片\"><a class=\"anchor\" href=\"#css3-允许元素设置多个背景图片\">#</a> CSS3 允许元素设置多个背景图片</h5>\n<h2 id=\"6-css3新增边框属性\"><a class=\"anchor\" href=\"#6-css3新增边框属性\">#</a> 6. CSS3 新增边框属性</h2>\n<pre><code>\nbackground-size: 300px 200px;\n\n</code></pre>\n<pre><code>\nbackground-size: 100% 100%;\n\n</code></pre>\n<pre><code>\nbackground-size: contain;\n\n</code></pre>\n<pre><code>\nbackground-size: cover;\n\n</code></pre>\n<pre><code>\nbackground: color url repeat position / size origin clip\n\n</code></pre>\n<pre><code>\n/* 添加多个背景图 */\n\nbackground: url(../images/bg-lt.png) no-repeat,\n\nurl(../images/bg-rt.png) no-repeat right top,\n\nurl(../images/bg-lb.png) no-repeat left bottom,\n\nurl(../images/bg-rb.png) no-repeat right bottom;\n\n</code></pre>\n<h3 id=\"6-1-边框圆角\"><a class=\"anchor\" href=\"#6-1-边框圆角\">#</a> 6. 1 边框圆角</h3>\n<pre><code>\n在 CSS3 中，使用border-radius属性可以将盒子变为圆角。\n\n同时设置四个角的圆角：\n\n</code></pre>\n<h5 id=\"属性名-作用\"><a class=\"anchor\" href=\"#属性名-作用\">#</a> 属性名 作用</h5>\n<pre><code>\nborder-top-left-radius\n\n</code></pre>\n<h5 id=\"设置左上角圆角半径\"><a class=\"anchor\" href=\"#设置左上角圆角半径\">#</a> 设置左上角圆角半径：</h5>\n<h5 id=\"1-一个值是正圆半径\"><a class=\"anchor\" href=\"#1-一个值是正圆半径\">#</a> 1. 一个值是正圆半径，</h5>\n<pre><code>\n2. 两个值分别是椭圆的x半径、y半径。\n\n</code></pre>\n<pre><code>\nborder-top-right-radius\n\n</code></pre>\n<h5 id=\"设置右上角圆角半径\"><a class=\"anchor\" href=\"#设置右上角圆角半径\">#</a> 设置右上角圆角半径：</h5>\n<h5 id=\"1-一个值是正圆半径-2\"><a class=\"anchor\" href=\"#1-一个值是正圆半径-2\">#</a> 1. 一个值是正圆半径，</h5>\n<pre><code>\n2. 两个值分别是椭圆的x半径、y半径。\n\n</code></pre>\n<pre><code>\nborder-bottom-right-radius\n\n</code></pre>\n<h5 id=\"设置右下角圆角半径\"><a class=\"anchor\" href=\"#设置右下角圆角半径\">#</a> 设置右下角圆角半径：</h5>\n<h5 id=\"1-一个值是正圆半径-3\"><a class=\"anchor\" href=\"#1-一个值是正圆半径-3\">#</a> 1. 一个值是正圆半径，</h5>\n<pre><code>\n2. 两个值分别是椭圆的x半径、y半径。\n\n</code></pre>\n<pre><code>\nborder-bottom-left-radius\n\n</code></pre>\n<h5 id=\"设置左下角圆角半径\"><a class=\"anchor\" href=\"#设置左下角圆角半径\">#</a> 设置左下角圆角半径：</h5>\n<h5 id=\"1-一个值是正圆半径-4\"><a class=\"anchor\" href=\"#1-一个值是正圆半径-4\">#</a> 1. 一个值是正圆半径，</h5>\n<pre><code>\n2. 两个值分别是椭圆的x半径、y半径。\n\n</code></pre>\n<h5 id=\"分开设置每个角的圆角几乎不用\"><a class=\"anchor\" href=\"#分开设置每个角的圆角几乎不用\">#</a> 分开设置每个角的圆角（几乎不用）：</h5>\n<h5 id=\"分开设置每个角的圆角综合写法几乎不用\"><a class=\"anchor\" href=\"#分开设置每个角的圆角综合写法几乎不用\">#</a> 分开设置每个角的圆角，综合写法（几乎不用）：</h5>\n<h3 id=\"6-2-边框外轮廓了解\"><a class=\"anchor\" href=\"#6-2-边框外轮廓了解\">#</a> 6. 2 边框外轮廓（了解）</h3>\n<pre><code>\noutline-width ：外轮廓的宽度。\n\noutline-color ：外轮廓的颜色。\n\noutline-style ：外轮廓的风格。\n\nnone： 无轮廓\n\ndotted： 点状轮廓\n\ndashed： 虚线轮廓\n\nsolid： 实线轮廓\n\ndouble： 双线轮廓\n\noutline-offset 设置外轮廓与边框的距离，正负值都可以设置。\n\n</code></pre>\n<pre><code>\n注意：outline-offset不是outline的子属性，是一个独立的属性。\n\n</code></pre>\n<pre><code>\noutline 复合属性\n\n</code></pre>\n<pre><code>\nborder-radius:10px;\n\n</code></pre>\n<pre><code>\nborder-raidus: 左上角x 右上角x 右下角x 左下角x / 左上y 右上y 右下y 左下y\n\n</code></pre>\n<pre><code>\noutline:50px solid blue;\n\n</code></pre>\n<h2 id=\"7-css-3-新增文本属性\"><a class=\"anchor\" href=\"#7-css-3-新增文本属性\">#</a> 7. CSS 3 新增文本属性</h2>\n<h3 id=\"7-1-文本阴影\"><a class=\"anchor\" href=\"#7-1-文本阴影\">#</a> 7. 1 文本阴影</h3>\n<pre><code>\n在 CSS3 中，我们可以使用 text-shadow 属性给文本添加阴影。\n\n</code></pre>\n<h5 id=\"值-描述\"><a class=\"anchor\" href=\"#值-描述\">#</a> 值 描述</h5>\n<pre><code>\nh-shadow 必需写，水平阴影的位置。允许负值。\n\n</code></pre>\n<pre><code>\nv-shadow 必需写，垂直阴影的位置。允许负值。\n\n</code></pre>\n<pre><code>\nblur 可选，模糊的距离。\n\n</code></pre>\n<pre><code>\ncolor 可选，阴影的颜色\n\n</code></pre>\n<h5 id=\"语法-2\"><a class=\"anchor\" href=\"#语法-2\">#</a> 语法：</h5>\n<pre><code>\n默认值：text-shadow:none 表示没有阴影。\n\n</code></pre>\n<h3 id=\"7-2-文本换行\"><a class=\"anchor\" href=\"#7-2-文本换行\">#</a> 7. 2 文本换行</h3>\n<pre><code>\n在 CSS3 中，我们可以使用 white-space 属性设置文本换行方式。\n\n</code></pre>\n<h5 id=\"值-含义\"><a class=\"anchor\" href=\"#值-含义\">#</a> 值 含义</h5>\n<pre><code>\nnormal 文本超出边界自动换行，文本中的换行被浏览器识别为一个空格。（默认值）\n\n</code></pre>\n<pre><code>\npre 原样输出，与pre标签的效果相同。\n\n</code></pre>\n<pre><code>\npre-wrap 在pre效果的基础上，超出元素边界自动换行。\n\n</code></pre>\n<pre><code>\npre-line\n\n</code></pre>\n<pre><code>\n在pre效果的基础上，超出元素边界自动换行，且只识别文本中的换行，空格\n\n会忽略。\n\n</code></pre>\n<pre><code>\nnowrap 强制不换行\n\n</code></pre>\n<h5 id=\"常用值如下\"><a class=\"anchor\" href=\"#常用值如下\">#</a> 常用值如下：</h5>\n<h3 id=\"7-3-文本溢出\"><a class=\"anchor\" href=\"#7-3-文本溢出\">#</a> 7. 3 文本溢出</h3>\n<pre><code>\n在 CSS3 中，我们可以使用 text-overflow 属性设置文本内容溢出时的呈现模式。\n\n</code></pre>\n<h5 id=\"值-含义-2\"><a class=\"anchor\" href=\"#值-含义-2\">#</a> 值 含义</h5>\n<pre><code>\nclip 当内联内容溢出时，将溢出部分裁切掉。^ （默认值）\n\n</code></pre>\n<pre><code>\nellipsis 当内联内容溢出块容器时，将溢出部分替换为^ ...^ 。\n\n</code></pre>\n<h5 id=\"常用值如下-2\"><a class=\"anchor\" href=\"#常用值如下-2\">#</a> 常用值如下：</h5>\n<pre><code>\n注意：要使得 text-overflow 属性生效，块容器必须显式定义 overflow 为非 visible\n\n值， white-space 为 nowrap 值。\n\n</code></pre>\n<pre><code>\ntext-shadow: h-shadow v-shadow blur color;\n\n</code></pre>\n<h3 id=\"7-4-文本修饰\"><a class=\"anchor\" href=\"#7-4-文本修饰\">#</a> 7. 4 文本修饰</h3>\n<pre><code>\nCSS3升级了text-decoration属性，让其变成了复合属性。\n\n</code></pre>\n<h5 id=\"子属性及其含义\"><a class=\"anchor\" href=\"#子属性及其含义\">#</a> 子属性及其含义：</h5>\n<pre><code>\ntext-decoration-line 设置文本装饰线的位置\n\nnone： 指定文字无装饰 （默认值）\n\nunderline： 指定文字的装饰是下划线\n\noverline： 指定文字的装饰是上划线\n\nline-through： 指定文字的装饰是贯穿线\n\ntext-decoration-style 文本装饰线条的形状\n\nsolid： 实线 （默认）\n\ndouble： 双线\n\ndotted： 点状线条\n\ndashed： 虚线\n\nwavy： 波浪线\n\ntext-decoration-color 文本装饰线条的颜色\n\n</code></pre>\n<h3 id=\"7-5-文本描边\"><a class=\"anchor\" href=\"#7-5-文本描边\">#</a> 7. 5 文本描边</h3>\n<p>注意：文字描边功能仅 webkit 内核浏览器支持。</p>\n<ul>\n<li>\n<p>webkit-text-stroke-width：设置文字描边的宽度，写长度值。</p>\n</li>\n<li>\n<p>webkit-text-stroke-color：设置文字描边的颜色，写颜色值。</p>\n</li>\n<li>\n<p>webkit-text-stroke：复合属性，设置文字描边宽度和颜色。</p>\n</li>\n</ul>\n<h2 id=\"8-css-3-新增渐变\"><a class=\"anchor\" href=\"#8-css-3-新增渐变\">#</a> 8. CSS 3 新增渐变</h2>\n<h3 id=\"8-1-线性渐变\"><a class=\"anchor\" href=\"#8-1-线性渐变\">#</a> 8. 1 线性渐变</h3>\n<h5 id=\"多个颜色之间的渐变-默认-从上到下-渐变\"><a class=\"anchor\" href=\"#多个颜色之间的渐变-默认-从上到下-渐变\">#</a> 多个颜色之间的渐变， 默认 从上到下 渐变。</h5>\n<h5 id=\"使用关键词设置线性-渐变的方向\"><a class=\"anchor\" href=\"#使用关键词设置线性-渐变的方向\">#</a> 使用关键词设置线性 渐变的方向 。</h5>\n<pre><code>\ntext-decoration: text-decoration-line || text-decoration-style || text-decoration-\n\ncolor\n\n</code></pre>\n<pre><code>\nbackground-image: linear-gradient(red,yellow,green);\n\n</code></pre>\n<h5 id=\"使用角度设置线性-渐变的方向\"><a class=\"anchor\" href=\"#使用角度设置线性-渐变的方向\">#</a> 使用角度设置线性 渐变的方向 。</h5>\n<h5 id=\"调整开始-渐变的位置\"><a class=\"anchor\" href=\"#调整开始-渐变的位置\">#</a> 调整开始 渐变的位置 。</h5>\n<h3 id=\"8-2-径向渐变\"><a class=\"anchor\" href=\"#8-2-径向渐变\">#</a> 8. 2 径向渐变</h3>\n<h5 id=\"多个颜色之间的渐变-默认从圆心四散-注意不一定是正圆要看容器本身宽高比\"><a class=\"anchor\" href=\"#多个颜色之间的渐变-默认从圆心四散-注意不一定是正圆要看容器本身宽高比\">#</a> 多个颜色之间的渐变， 默认从圆心四散。（注意：不一定是正圆，要看容器本身宽高比）</h5>\n<h5 id=\"使用关键词调整渐变圆的圆心位置\"><a class=\"anchor\" href=\"#使用关键词调整渐变圆的圆心位置\">#</a> 使用关键词调整渐变圆的圆心位置。</h5>\n<pre><code>\nbackground-image: linear-gradient(to top,red,yellow,green);\n\nbackground-image: linear-gradient(to right top,red,yellow,green);\n\n</code></pre>\n<pre><code>\nbackground-image: linear-gradient(30deg,red,yellow,green);\n\n</code></pre>\n<pre><code>\nbackground-image: linear-gradient(red 50px,yellow 100px ,green 150px);\n\n</code></pre>\n<pre><code>\nbackground-image: radial-gradient(red,yellow,green);\n\n</code></pre>\n<h5 id=\"使用像素值调整渐变圆的圆心位置\"><a class=\"anchor\" href=\"#使用像素值调整渐变圆的圆心位置\">#</a> 使用像素值调整渐变圆的圆心位置。</h5>\n<h5 id=\"调整渐变形状为正圆\"><a class=\"anchor\" href=\"#调整渐变形状为正圆\">#</a> 调整渐变形状为正圆 。</h5>\n<h5 id=\"调整形状的半径\"><a class=\"anchor\" href=\"#调整形状的半径\">#</a> 调整形状的半径 。</h5>\n<h5 id=\"调整开始渐变的位置\"><a class=\"anchor\" href=\"#调整开始渐变的位置\">#</a> 调整开始渐变的位置。</h5>\n<pre><code>\nbackground-image: radial-gradient(at right top,red,yellow,green);\n\n</code></pre>\n<pre><code>\nbackground-image: radial-gradient(at 100px 50px,red,yellow,green);\n\n</code></pre>\n<pre><code>\nbackground-image: radial-gradient(circle,red,yellow,green);\n\n</code></pre>\n<pre><code>\nbackground-image: radial-gradient(100px,red,yellow,green);\n\nbackground-image: radial-gradient(50px 100px,red,yellow,green);\n\n</code></pre>\n<pre><code>\nbackground-image: radial-gradient(red 50px,yellow 100px,green 150px);\n\n</code></pre>\n<h3 id=\"83-重复渐变\"><a class=\"anchor\" href=\"#83-重复渐变\">#</a> 8.3 重复渐变</h3>\n<h5 id=\"无论线性渐变还是径向渐变在没有发生渐变的位置继续进行渐变就为重复渐变\"><a class=\"anchor\" href=\"#无论线性渐变还是径向渐变在没有发生渐变的位置继续进行渐变就为重复渐变\">#</a> 无论线性渐变，还是径向渐变，在没有发生渐变的位置，继续进行渐变，就为重复渐变。</h5>\n<pre><code>\n使用repeating-linear-gradient进行重复线性渐变，具体参数同linear-gradient。\n\n使用repeating-radial-gradient进行重复径向渐变，具体参数同radial-gradient。\n\n</code></pre>\n<pre><code>\n我们可以利用渐变，做出很多有意思的效果：例如：横格纸、立体球等等。\n\n</code></pre>\n<h2 id=\"9-web-字体\"><a class=\"anchor\" href=\"#9-web-字体\">#</a> 9. web 字体</h2>\n<h3 id=\"91-基本用法\"><a class=\"anchor\" href=\"#91-基本用法\">#</a> 9.1 基本用法</h3>\n<p>可以通过 @font-face 指定字体的具体地址，浏览器会自动下载该字体，这样就不依赖用户电脑上的字</p>\n<p>体了。</p>\n<pre><code>\n语法（简写方式）\n\n</code></pre>\n<h5 id=\"语法高兼容性写法\"><a class=\"anchor\" href=\"#语法高兼容性写法\">#</a> 语法（高兼容性写法）</h5>\n<h3 id=\"92-定制字体\"><a class=\"anchor\" href=\"#92-定制字体\">#</a> 9.2 定制字体</h3>\n<h5 id=\"中文的字体文件很大使用完整的字体文件不现实通常针对某几个文字进行单独定制\"><a class=\"anchor\" href=\"#中文的字体文件很大使用完整的字体文件不现实通常针对某几个文字进行单独定制\">#</a> 中文的字体文件很大，使用完整的字体文件不现实，通常针对某几个文字进行单独定制。</h5>\n<pre><code>\n可使用阿里Web字体定制工具： https://www.iconfont.cn/webfont\n\n</code></pre>\n<h3 id=\"93-字体图标\"><a class=\"anchor\" href=\"#93-字体图标\">#</a> 9.3 字体图标</h3>\n<h5 id=\"相比图片更加清晰\"><a class=\"anchor\" href=\"#相比图片更加清晰\">#</a> 相比图片更加清晰。</h5>\n<h5 id=\"灵活性高更方便改变大小-颜色-风格等\"><a class=\"anchor\" href=\"#灵活性高更方便改变大小-颜色-风格等\">#</a> 灵活性高，更方便改变大小、颜色、风格等。</h5>\n<h5 id=\"兼容性好ie也能支持\"><a class=\"anchor\" href=\"#兼容性好ie也能支持\">#</a> 兼容性好，IE 也能支持。</h5>\n<h5 id=\"字体图标的具体使用方式每个平台不尽相同最好参考平台使用指南视频中我们是以使用最多\"><a class=\"anchor\" href=\"#字体图标的具体使用方式每个平台不尽相同最好参考平台使用指南视频中我们是以使用最多\">#</a> 字体图标的具体使用方式，每个平台不尽相同，最好参考平台使用指南，视频中我们是以使用最多</h5>\n<h5 id=\"的阿里图标库作为演示\"><a class=\"anchor\" href=\"#的阿里图标库作为演示\">#</a> 的阿里图标库作为演示。</h5>\n<pre><code>\n阿里图标官网地址： https://www.iconfont.cn/\n\n</code></pre>\n<pre><code>\n@font-face &#123;\n\nfont-family: &quot;情书字体&quot;;\n\nsrc: url('./方正手迹.ttf');\n\n&#125;\n\n</code></pre>\n<pre><code>\n@font-face &#123;\n\nfont-family: &quot;atguigu&quot;;\n\nfont-display: swap;\n\nsrc: url('webfont.eot'); /* IE9 */\n\nsrc: url('webfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\n\nurl('webfont.woff2') format('woff2'),\n\nurl('webfont.woff') format('woff'), /* chrome、firefox */\n\nurl('webfont.ttf') format('truetype'), /* chrome、firefox、opera、Safari,\n\nAndroid*/\n\nurl('webfont.svg#webfont') format('svg'); /* iOS 4.1- */\n\n&#125;\n\n</code></pre>\n<h2 id=\"10-2-d变换\"><a class=\"anchor\" href=\"#10-2-d变换\">#</a> 10. 2 D 变换</h2>\n<h5 id=\"前提二维坐标系如下图所示\"><a class=\"anchor\" href=\"#前提二维坐标系如下图所示\">#</a> 前提：二维坐标系如下图所示</h5>\n<h3 id=\"10-1-2-d位移\"><a class=\"anchor\" href=\"#10-1-2-d位移\">#</a> 10. 1. 2 D 位移</h3>\n<h5 id=\"2d位移可以改变元素的位置具体使用方式如下\"><a class=\"anchor\" href=\"#2d位移可以改变元素的位置具体使用方式如下\">#</a> 2D 位移可以改变元素的位置，具体使用方式如下：</h5>\n<pre><code>\n1. 先给元素添加 转换属性 transform\n\n</code></pre>\n<h5 id=\"值-含义-3\"><a class=\"anchor\" href=\"#值-含义-3\">#</a> 值 含义</h5>\n<pre><code>\ntranslateX 设置水平方向位移，需指定长度值；若指定的是百分比，是参考自身宽度\n\n的百分比。\n\n</code></pre>\n<pre><code>\ntranslateY\n\n</code></pre>\n<h5 id=\"设置垂直方向位移需指定长度值若指定的是百分比是参考自身高度\"><a class=\"anchor\" href=\"#设置垂直方向位移需指定长度值若指定的是百分比是参考自身高度\">#</a> 设置垂直方向位移，需指定长度值；若指定的是百分比，是参考自身高度</h5>\n<h5 id=\"的百分比\"><a class=\"anchor\" href=\"#的百分比\">#</a> 的百分比。</h5>\n<pre><code>\ntranslate 一个值代表水平方向，两个值代表：水平和垂直方向。\n\n</code></pre>\n<pre><code>\n2. 编写transform的具体值，相关可选值如下：\n\n</code></pre>\n<h5 id=\"3-注意点\"><a class=\"anchor\" href=\"#3-注意点\">#</a> 3. 注意点：</h5>\n<h5 id=\"1-位移与相对定位很相似都不脱离文档流不会影响到其它元素\"><a class=\"anchor\" href=\"#1-位移与相对定位很相似都不脱离文档流不会影响到其它元素\">#</a> 1. 位移与相对定位很相似，都不脱离文档流，不会影响到其它元素。</h5>\n<h5 id=\"2-与相对定位的区别相对定位的百分比值参考的是其父元素定位的百分比值参考的是\"><a class=\"anchor\" href=\"#2-与相对定位的区别相对定位的百分比值参考的是其父元素定位的百分比值参考的是\">#</a> 2. 与相对定位的区别：相对定位的百分比值，参考的是其父元素；定位的百分比值，参考的是</h5>\n<h5 id=\"其自身\"><a class=\"anchor\" href=\"#其自身\">#</a> 其自身。</h5>\n<h5 id=\"3-浏览器针对位移有优化与定位相比浏览器处理位移的效率更高\"><a class=\"anchor\" href=\"#3-浏览器针对位移有优化与定位相比浏览器处理位移的效率更高\">#</a> 3. 浏览器针对位移有优化，与定位相比，浏览器处理位移的效率更高。</h5>\n<pre><code>\n4. transform可以链式编写，例如：\n\n</code></pre>\n<h5 id=\"5-位移对行内元素无效\"><a class=\"anchor\" href=\"#5-位移对行内元素无效\">#</a> 5. 位移对行内元素无效。</h5>\n<h5 id=\"6-位移配合定位可实现元素水平垂直居中\"><a class=\"anchor\" href=\"#6-位移配合定位可实现元素水平垂直居中\">#</a> 6. 位移配合定位，可实现元素水平垂直居中</h5>\n<pre><code>\ntransform: translateX(30px) translateY(40px);\n\n</code></pre>\n<h3 id=\"10-2-2-d缩放\"><a class=\"anchor\" href=\"#10-2-2-d缩放\">#</a> 10. 2. 2 D 缩放</h3>\n<h5 id=\"2d缩放是指让元素放大或缩小具体使用方式如下\"><a class=\"anchor\" href=\"#2d缩放是指让元素放大或缩小具体使用方式如下\">#</a> 2D 缩放是指：让元素放大或缩小，具体使用方式如下：</h5>\n<pre><code>\n1. 先给元素添加 转换属性 transform\n\n</code></pre>\n<h5 id=\"值-含义-4\"><a class=\"anchor\" href=\"#值-含义-4\">#</a> 值 含义</h5>\n<pre><code>\nscaleX\n\n</code></pre>\n<h5 id=\"设置水平方向的缩放比例值为一个数字-1-表示不缩放大于-1-放大小\"><a class=\"anchor\" href=\"#设置水平方向的缩放比例值为一个数字-1-表示不缩放大于-1-放大小\">#</a> 设置水平方向的缩放比例，值为一个数字， 1 表示不缩放，大于 1 放大，小</h5>\n<h5 id=\"于-1-缩小\"><a class=\"anchor\" href=\"#于-1-缩小\">#</a> 于 1 缩小。</h5>\n<pre><code>\nscaleY 设置垂直方向的缩放比例，值为一个数字，^1 表示不缩放，大于^1 放大，小\n\n于 1 缩小。\n\n</code></pre>\n<pre><code>\nscale\n\n</code></pre>\n<h5 id=\"同时设置水平方向-垂直方向的缩放比例一个值代表同时设置水平和垂直缩\"><a class=\"anchor\" href=\"#同时设置水平方向-垂直方向的缩放比例一个值代表同时设置水平和垂直缩\">#</a> 同时设置水平方向、垂直方向的缩放比例，一个值代表同时设置水平和垂直缩</h5>\n<h5 id=\"放两个值分别代表水平缩放-垂直缩放\"><a class=\"anchor\" href=\"#放两个值分别代表水平缩放-垂直缩放\">#</a> 放；两个值分别代表：水平缩放、垂直缩放。</h5>\n<pre><code>\n2. 编写transform的具体值，相关可选值如下：\n\n</code></pre>\n<h5 id=\"3-注意点-2\"><a class=\"anchor\" href=\"#3-注意点-2\">#</a> 3. 注意点：</h5>\n<pre><code>\n1. scale的值，是支持写负数的，但几乎不用，因为容易让人产生误解。\n\n2. 借助缩放，可实现小于12px的文字。\n\n</code></pre>\n<h3 id=\"10-3-2-d旋转\"><a class=\"anchor\" href=\"#10-3-2-d旋转\">#</a> 10. 3. 2 D 旋转</h3>\n<h5 id=\"2d旋转是指让元素在二维平面内顺时针旋转或逆时针旋转具体使用方式如下\"><a class=\"anchor\" href=\"#2d旋转是指让元素在二维平面内顺时针旋转或逆时针旋转具体使用方式如下\">#</a> 2D 旋转是指：让元素在二维平面内，顺时针旋转或逆时针旋转，具体使用方式如下：</h5>\n<pre><code>\n1. 先给元素添加 转换属性 transform\n\n</code></pre>\n<h5 id=\"值-含义-5\"><a class=\"anchor\" href=\"#值-含义-5\">#</a> 值 含义</h5>\n<pre><code>\nrotate 设置旋转角度，需指定一个角度值(deg)，正值顺时针，负值逆时针。\n\n</code></pre>\n<pre><code>\n2. 编写transform的具体值，相关可选值如下：\n\n</code></pre>\n<pre><code>\n注意：rotateZ(20deg) 相当于 rotate(20deg)，当然到了3D变换的时候，还能写：\n\nrotate(x,x,x)\n\n</code></pre>\n<pre><code>\n.box &#123;\n\nposition: absolute;\n\nleft: 50%;\n\ntop: 50%;\n\ntransform: translate(-50%, -50%);\n\n&#125;\n\n</code></pre>\n<h3 id=\"10-4-2-d扭曲了解\"><a class=\"anchor\" href=\"#10-4-2-d扭曲了解\">#</a> 10. 4. 2 D 扭曲（了解）</h3>\n<h5 id=\"2d扭曲是指让元素在二维平面内被拉扯进而走形实际开发几乎不用了解即可具体使用方\"><a class=\"anchor\" href=\"#2d扭曲是指让元素在二维平面内被拉扯进而走形实际开发几乎不用了解即可具体使用方\">#</a> 2D 扭曲是指：让元素在二维平面内被 “拉扯”，进而 “走形”，实际开发几乎不用，了解即可，具体使用方</h5>\n<h5 id=\"式如下\"><a class=\"anchor\" href=\"#式如下\">#</a> 式如下：</h5>\n<pre><code>\n1. 先给元素添加 转换属性 transform\n\n</code></pre>\n<h5 id=\"值-含义-6\"><a class=\"anchor\" href=\"#值-含义-6\">#</a> 值 含义</h5>\n<pre><code>\nskewX 设置元素在水平方向扭曲，值为角度值，会将元素的左上角、右下角拉扯。\n\n</code></pre>\n<pre><code>\nskewY 设置元素在垂直方向扭曲，值为角度值，会将元素的左上角、右下角拉扯。\n\n</code></pre>\n<pre><code>\nskew 一个值代表skewX，两个值分别代表：skewX、skewY\n\n</code></pre>\n<pre><code>\n2. 编写transform的具体值，相关可选值如下：\n\n</code></pre>\n<h3 id=\"10-5-多重变换\"><a class=\"anchor\" href=\"#10-5-多重变换\">#</a> 10. 5. 多重变换</h3>\n<p>多个变换，可以同时使用一个 transform 来编写。</p>\n<h5 id=\"注意点多重变换时建议最后旋转\"><a class=\"anchor\" href=\"#注意点多重变换时建议最后旋转\">#</a> 注意点：多重变换时，建议最后旋转。</h5>\n<h3 id=\"10-6-变换原点\"><a class=\"anchor\" href=\"#10-6-变换原点\">#</a> 10. 6. 变换原点</h3>\n<pre><code>\n元素变换时，默认的原点是元素的中心，使用transform-origin可以设置变换的原点。\n\n修改变换原点对位移没有影响， 对旋转和缩放会产生影响。\n\n如果提供两个值，第一个用于横坐标，第二个用于纵坐标。\n\n如果只提供一个，若是像素值，表示横坐标，纵坐标取50%；若是关键词，则另一个坐标取50%\n\n</code></pre>\n<pre><code>\n1. transform-origin: 50% 50%， 变换原点在元素的中心位置，百分比是相对于自\n\n身。—— 默认值\n\n2. transform-origin: left top，变换原点在元素的左上角 。\n\n3. transform-origin: 50px 50px， 变换原点距离元素左上角 50px 50px 的位置。\n\n4. transform-origin: 0，只写一个值的时候，第二个值默认为 50%。\n\n</code></pre>\n<h2 id=\"11-3-d变换\"><a class=\"anchor\" href=\"#11-3-d变换\">#</a> 11. 3 D 变换</h2>\n<h3 id=\"11-1-开启-3-d空间\"><a class=\"anchor\" href=\"#11-1-开启-3-d空间\">#</a> 11. 1. 开启 3 D 空间</h3>\n<h5 id=\"重要原则元素进行3d变换的首要操作-父元素-必须开启3d空间\"><a class=\"anchor\" href=\"#重要原则元素进行3d变换的首要操作-父元素-必须开启3d空间\">#</a> 重要原则：元素进行 3D 变换的首要操作： 父元素 必须开启 3D 空间！</h5>\n<pre><code>\n使用transform-style开启3D空间，可选值如下：\n\n</code></pre>\n<pre><code>\nflat： 让子元素位于此元素的二维平面内（2D空间）—— 默认值\n\npreserve-3d： 让子元素位于此元素的三维空间内（3D空间）\n\n</code></pre>\n<pre><code>\ntransform: translate(-50%, -50%) rotate(45deg);\n\n</code></pre>\n<h3 id=\"11-2-设置景深\"><a class=\"anchor\" href=\"#11-2-设置景深\">#</a> 11. 2. 设置景深</h3>\n<p>何为景深？—— 指定观察者与 z=0 平面的距离，能让发生 3D 变换的元素，产生透视效果，看来更加立</p>\n<p>体。</p>\n<pre><code>\n使用perspective设置景深，可选值如下：\n\n</code></pre>\n<pre><code>\nnone： 不指定透视 ——（默认值）\n\n长度值 ： 指定观察者距离z=0平面的距离，不允许负值。\n\n</code></pre>\n<pre><code>\n注意：perspective设置给发生3D变换元素的父元素！\n\n</code></pre>\n<h3 id=\"11-3-透视点位置\"><a class=\"anchor\" href=\"#11-3-透视点位置\">#</a> 11. 3. 透视点位置</h3>\n<h5 id=\"所谓透视点位置就是观察者位置默认的透视点在元素的中心\"><a class=\"anchor\" href=\"#所谓透视点位置就是观察者位置默认的透视点在元素的中心\">#</a> 所谓透视点位置，就是观察者位置；默认的透视点在元素的中心。</h5>\n<pre><code>\n使用perspective-origin设置观察者位置（透视点的位置），例如：\n\n</code></pre>\n<h5 id=\"注意通常情况下我们不需要调整透视点位置\"><a class=\"anchor\" href=\"#注意通常情况下我们不需要调整透视点位置\">#</a> 注意：通常情况下，我们不需要调整透视点位置。</h5>\n<h3 id=\"11-4-3-d-位移\"><a class=\"anchor\" href=\"#11-4-3-d-位移\">#</a> 11. 4. 3 D 位移</h3>\n<pre><code>\n3D位移是在2D位移的基础上，可以让元素沿z轴位移，具体使用方式如下：\n\n</code></pre>\n<pre><code>\n1. 先给元素添加 转换属性 transform\n\n</code></pre>\n<h5 id=\"值-含义-7\"><a class=\"anchor\" href=\"#值-含义-7\">#</a> 值 含义</h5>\n<pre><code>\ntranslateZ\n\n</code></pre>\n<pre><code>\n设置z轴位移，需指定长度值，正值向屏幕外，负值向屏幕里，且不能\n\n写百分比。\n\n</code></pre>\n<pre><code>\ntranslate3d 第^1 个参数对应x轴，第^2 个参数对应y轴，第^3 个参数对应z轴，且均\n\n不能省略。\n\n</code></pre>\n<pre><code>\n2. 编写transform的具体值，3D相关可选值如下：\n\n</code></pre>\n<h3 id=\"11-5-3-d-旋转\"><a class=\"anchor\" href=\"#11-5-3-d-旋转\">#</a> 11. 5. 3 D 旋转</h3>\n<pre><code>\n3D旋转是在2D旋转的基础上，可以让元素沿x轴和y轴旋转，具体使用方式如下：\n\n</code></pre>\n<pre><code>\n1. 先给元素添加 转换属性 transform\n\n2. 编写transform的具体值，3D相关可选值如下：\n\n</code></pre>\n<pre><code>\n/* 相对坐标轴往右偏移400px， 往下偏移300px（相当于人蹲下 300 像素，然后向右移动 400 像素看元素）\n\n*/\n\nperspective-origin: 400px 300px;\n\n</code></pre>\n<h5 id=\"值-含义-8\"><a class=\"anchor\" href=\"#值-含义-8\">#</a> 值 含义</h5>\n<pre><code>\nrotateX\n\n</code></pre>\n<pre><code>\n设置x轴旋转角度，需指定一个角度值(deg)，面对x轴正方向：正值顺时针，负\n\n值逆时针。\n\n</code></pre>\n<pre><code>\nrotateY 设置y轴旋转角度，需指定一个角度值(deg)，面对y轴正方向：正值顺时针，负\n\n值逆时针。\n\n</code></pre>\n<pre><code>\nrotate3d\n\n</code></pre>\n<pre><code>\n前 3 个参数分别表示坐标轴：x,y,z，第 4 个参数表示旋转的角度，参数不允\n\n许省略。\n\n例如：transform: rotate3d(1,1,1,30deg)，意思是：x、y、z分别旋转\n\n30 度。\n\n</code></pre>\n<h3 id=\"11-6-3-d-缩放\"><a class=\"anchor\" href=\"#11-6-3-d-缩放\">#</a> 11. 6. 3 D 缩放</h3>\n<pre><code>\n3D缩放是在2D缩放的基础上，可以让元素沿z轴缩放，具体使用方式如下：\n\n</code></pre>\n<pre><code>\n1. 先给元素添加 转换属性 transform\n\n</code></pre>\n<h5 id=\"值-含义-9\"><a class=\"anchor\" href=\"#值-含义-9\">#</a> 值 含义</h5>\n<pre><code>\nscaleZ\n\n</code></pre>\n<pre><code>\n设置z轴方向的缩放比例，值为一个数字， 1 表示不缩放，大于 1 放大，小\n\n于 1 缩小。\n\n</code></pre>\n<pre><code>\nscale3d 第^1 个参数对应x轴，第^2 个参数对应y轴，第^3 个参数对应z轴，参数不允许\n\n省略。\n\n</code></pre>\n<pre><code>\n2. 编写transform的具体值，3D相关可选值如下：\n\n</code></pre>\n<h3 id=\"11-7-多重变换\"><a class=\"anchor\" href=\"#11-7-多重变换\">#</a> 11. 7. 多重变换</h3>\n<p>多个变换，可以同时使用一个 transform 来编写。</p>\n<h5 id=\"注意点多重变换时建议最后旋转-2\"><a class=\"anchor\" href=\"#注意点多重变换时建议最后旋转-2\">#</a> 注意点：多重变换时，建议最后旋转。</h5>\n<h3 id=\"11-8-背部可见性\"><a class=\"anchor\" href=\"#11-8-背部可见性\">#</a> 11. 8. 背部可见性</h3>\n<p>使用 backface-visibility 指定元素背面，在面向用户时是否可见，常用值如下：</p>\n<pre><code>\nvisible： 指定元素背面可见，允许显示正面的镜像。—— 默认值\n\nhidden： 指定元素背面不可见\n\n</code></pre>\n<pre><code>\n注意：backface-visibility需要加在发生3D变换元素的自身上。\n\n</code></pre>\n<h2 id=\"12-过渡\"><a class=\"anchor\" href=\"#12-过渡\">#</a> 12. 过渡</h2>\n<pre><code>\ntransform: translateZ(100px) scaleZ( 3 ) rotateY(40deg);\n\n</code></pre>\n<p>过渡可以在不使用 Flash 动画，不使用 JavaScript 的情况下，让元素从一种样式，平滑过渡为另一</p>\n<p>种样式。</p>\n<h3 id=\"121-transition-property\"><a class=\"anchor\" href=\"#121-transition-property\">#</a> 12.1. transition-property</h3>\n<h5 id=\"作用定义哪个属性需要过渡只有在该属性中定义的属性比如宽-高-颜色等才会以有过渡\"><a class=\"anchor\" href=\"#作用定义哪个属性需要过渡只有在该属性中定义的属性比如宽-高-颜色等才会以有过渡\">#</a> 作用：定义哪个属性需要过渡，只有在该属性中定义的属性（比如宽、高、颜色等）才会以有过渡</h5>\n<h5 id=\"效果\"><a class=\"anchor\" href=\"#效果\">#</a> 效果。</h5>\n<h5 id=\"常用值\"><a class=\"anchor\" href=\"#常用值\">#</a> 常用值：</h5>\n<pre><code>\n1. none：不过渡任何属性。\n\n2. all：过渡所有能过渡的属性。\n\n3. 具体某个属性名，例如：width、heigth，若有多个以逗号分隔。\n\n</code></pre>\n<h5 id=\"不是所有的属性都能过渡值为数字或者值能转为数字的属性都支持过渡否则不支持\"><a class=\"anchor\" href=\"#不是所有的属性都能过渡值为数字或者值能转为数字的属性都支持过渡否则不支持\">#</a> 不是所有的属性都能过渡，值为数字，或者值能转为数字的属性，都支持过渡，否则不支持</h5>\n<h5 id=\"过渡\"><a class=\"anchor\" href=\"#过渡\">#</a> 过渡。</h5>\n<pre><code>\n常见的支持过渡的属性有：颜色、长度值、百分比、z-index、opacity、2D变换属\n\n性、3D变换属性、阴影。\n\n</code></pre>\n<h3 id=\"122-transition-duration\"><a class=\"anchor\" href=\"#122-transition-duration\">#</a> 12.2. transition-duration</h3>\n<h5 id=\"作用设置过渡的持续时间即一个状态过渡到另外一个状态耗时多久\"><a class=\"anchor\" href=\"#作用设置过渡的持续时间即一个状态过渡到另外一个状态耗时多久\">#</a> 作用：设置过渡的持续时间，即：一个状态过渡到另外一个状态耗时多久。</h5>\n<h5 id=\"常用值-2\"><a class=\"anchor\" href=\"#常用值-2\">#</a> 常用值：</h5>\n<h5 id=\"1-0-没有任何过渡时间-默认值\"><a class=\"anchor\" href=\"#1-0-没有任何过渡时间-默认值\">#</a> 1. 0 ：没有任何过渡时间 —— 默认值。</h5>\n<pre><code>\n2. s或ms：秒或毫秒。\n\n3. 列表：\n\n如果想让所有属性都持续一个时间，那就写一个值。\n\n如果想让每个属性持续不同的时间那就写一个时间的列表。\n\n</code></pre>\n<h3 id=\"123-transition-delay\"><a class=\"anchor\" href=\"#123-transition-delay\">#</a> 12.3. transition-delay</h3>\n<pre><code>\n作用：指定开始过渡的延迟时间，单位：s或ms\n\n</code></pre>\n<h3 id=\"124-transition-timing-function\"><a class=\"anchor\" href=\"#124-transition-timing-function\">#</a> 12.4. transition-timing-function</h3>\n<h5 id=\"作用设置过渡的类型\"><a class=\"anchor\" href=\"#作用设置过渡的类型\">#</a> 作用：设置过渡的类型</h5>\n<h5 id=\"常用值-3\"><a class=\"anchor\" href=\"#常用值-3\">#</a> 常用值：</h5>\n<pre><code>\n1. ease： 平滑过渡 —— 默认值\n\n2. linear： 线性过渡\n\n3. ease-in： 慢 → 快\n\n4. ease-out： 快 → 慢\n\n5. ease-in-out： 慢 → 快 → 慢\n\n6. step-start： 等同于 steps(1, start)\n\n7. step-end： 等同于 steps(1, end)\n\n8. steps( integer,?)： 接受两个参数的步进函数。第一个参数必须为正整数，指定函数的\n\n步数。第二个参数取值可以是start或end，指定每一步的值发生变化的时间点。第二个\n\n参数默认值为end。\n\n9. cubic-bezie( number, number, number, number)： 特定的贝塞尔曲线类型。\n\n</code></pre>\n<pre><code>\n在线制作贝赛尔曲线： https://cubic-bezier.com\n\n</code></pre>\n<h3 id=\"12-5-transition-复合属性\"><a class=\"anchor\" href=\"#12-5-transition-复合属性\">#</a> 12. 5. transition 复合属性</h3>\n<pre><code>\n如果设置了一个时间，表示duration；如果设置了两个时间，第一是duration，第二个是\n\ndelay；其他值没有顺序要求。\n\n</code></pre>\n<h2 id=\"13-动画\"><a class=\"anchor\" href=\"#13-动画\">#</a> 13. 动画</h2>\n<h3 id=\"13-1-什么是帧\"><a class=\"anchor\" href=\"#13-1-什么是帧\">#</a> 13. 1. 什么是帧</h3>\n<pre><code>\n一段动画，就是一段时间内连续播放n个画面。每一张画面，我们管它叫做“帧”。一定时间内连续\n\n快速播放若干个帧，就成了人眼中所看到的动画。同样时间内，播放的帧数越多，画面看起来越流\n\n畅。\n\n</code></pre>\n<h3 id=\"13-2-什么是关键帧\"><a class=\"anchor\" href=\"#13-2-什么是关键帧\">#</a> 13. 2. 什么是关键帧</h3>\n<h5 id=\"关键帧指的是在构成一段动画的若干帧中起到决定性作用的-2-3-帧\"><a class=\"anchor\" href=\"#关键帧指的是在构成一段动画的若干帧中起到决定性作用的-2-3-帧\">#</a> 关键帧指的是，在构成一段动画的若干帧中，起到决定性作用的 2 - 3 帧。</h5>\n<h3 id=\"13-3-动画的基本使用\"><a class=\"anchor\" href=\"#13-3-动画的基本使用\">#</a> 13. 3. 动画的基本使用</h3>\n<h5 id=\"第一步定义关键帧定义动画\"><a class=\"anchor\" href=\"#第一步定义关键帧定义动画\">#</a> 第一步：定义关键帧（定义动画）</h5>\n<h5 id=\"1-简单方式定义\"><a class=\"anchor\" href=\"#1-简单方式定义\">#</a> 1. 简单方式定义：</h5>\n<h5 id=\"2-完整方式定义\"><a class=\"anchor\" href=\"#2-完整方式定义\">#</a> 2. 完整方式定义：</h5>\n<pre><code>\ntransition:1s 1s linear all;\n\n</code></pre>\n<pre><code>\n/*写法一*/\n\n@keyframes 动画名 &#123;\n\nfrom &#123;\n\n/*property1:value1*/\n\n/*property2:value2*/\n\n&#125;\n\nto &#123;\n\n/*property1:value1*/\n\n&#125;\n\n&#125;\n\n</code></pre>\n<h5 id=\"第二步给元素应用动画用到的属性如下\"><a class=\"anchor\" href=\"#第二步给元素应用动画用到的属性如下\">#</a> 第二步：给元素应用动画，用到的属性如下：</h5>\n<pre><code>\n1. animation-name：给元素指定具体的动画（具体的关键帧）\n\n2. animation-duration：设置动画所需时间\n\n3. animation-delay：设置动画延迟\n\n</code></pre>\n<h3 id=\"4-动画的其他属性\"><a class=\"anchor\" href=\"#4-动画的其他属性\">#</a> 4. 动画的其他属性</h3>\n<pre><code>\nanimation-timing-function，设置动画的类型，常用值如下：\n\n</code></pre>\n<pre><code>\n1. ease： 平滑动画 —— 默认值\n\n2. linear： 线性过渡\n\n3. ease-in： 慢 → 快\n\n4. ease-out： 快 → 慢\n\n5. ease-in-out： 慢 → 快 → 慢\n\n6. step-start： 等同于 steps(1, start)\n\n7. step-end： 等同于 steps(1, end)\n\n8. steps( integer,?)： 接受两个参数的步进函数。第一个参数必须为正整数，指定\n\n函数的步数。第二个参数取值可以是start或end，指定每一步的值发生变化的时间\n\n点。第二个参数默认值为end。\n\n9. cubic-bezie( number, number, number, number)： 特定的贝塞尔曲线类型。\n\n</code></pre>\n<pre><code>\nanimation-iteration-count，指定动画的播放次数，常用值如下：\n\n</code></pre>\n<pre><code>\n@keyframes 动画名 &#123;\n\n0% &#123;\n\n/*property1:value1*/\n\n&#125;\n\n20% &#123;\n\n/*property1:value1*/\n\n&#125;\n\n40% &#123;\n\n/*property1:value1*/\n\n&#125;\n\n60% &#123;\n\n/*property1:value1*/\n\n&#125;\n\n80% &#123;\n\n/*property1:value1*/\n\n&#125;\n\n100% &#123;\n\n/*property1:value1*/\n\n&#125;\n\n&#125;\n\n</code></pre>\n<pre><code>\n.box &#123;\n\n/* 指定动画 */\n\nanimation-name: testKey;\n\n/* 设置动画所需时间 */\n\nanimation-duration: 5s;\n\n/* 设置动画延迟 */\n\nanimation-delay: 0.5s;\n\n&#125;\n\n</code></pre>\n<pre><code>\n1. number：动画循环次数\n\n2. infinite： 无限循环\n\n</code></pre>\n<pre><code>\nanimation-direction，指定动画方向，常用值如下：\n\n</code></pre>\n<pre><code>\n1. normal： 正常方向 (默认)\n\n2. reverse： 反方向运行\n\n3. alternate： 动画先正常运行再反方向运行，并持续交替运行\n\n4. alternate-reverse： 动画先反运行再正方向运行，并持续交替运行\n\n</code></pre>\n<pre><code>\nanimation-fill-mode，设置动画之外的状态\n\n</code></pre>\n<pre><code>\n1. forwards： 设置对象状态为动画结束时的状态\n\n2. backwards： 设置对象状态为动画开始时的状态\n\n</code></pre>\n<pre><code>\nanimation-play-state，设置动画的播放状态，常用值如下：\n\n</code></pre>\n<pre><code>\n1. running： 运动 (默认)\n\n2. paused： 暂停\n\n</code></pre>\n<h3 id=\"5-动画复合属性\"><a class=\"anchor\" href=\"#5-动画复合属性\">#</a> 5. 动画复合属性</h3>\n<p>只设置一个时间表示 duration，设置两个时间分别是： duration 和 delay，其他属性没有数量和</p>\n<p>顺序要求。</p>\n<pre><code>\n备注：animation-play-state一般单独使用。\n\n</code></pre>\n<h2 id=\"14-多列布局\"><a class=\"anchor\" href=\"#14-多列布局\">#</a> 14. 多列布局</h2>\n<h5 id=\"作用专门用于实现类似于报纸的布局\"><a class=\"anchor\" href=\"#作用专门用于实现类似于报纸的布局\">#</a> 作用：专门用于实现类似于报纸的布局。</h5>\n<pre><code>\n.inner &#123;\n\nanimation: atguigu 3s 0.5s linear 2 alternate-reverse forwards;\n\n&#125;\n\n</code></pre>\n<h4 id=\"常用属性如下\"><a class=\"anchor\" href=\"#常用属性如下\">#</a> 常用属性如下：</h4>\n<pre><code>\ncolumn-count ：指定列数，值是数字。\n\ncolumn-width ：指定列宽，值是长度。\n\ncolumns ：同时指定列宽和列数，复合属性；值没有数量和顺序要求。\n\ncolumn-gap ：设置列边距，值是长度。\n\ncolumn-rule-style ：设置列与列之间边框的风格，值与 border-style 一致。\n\ncolumn-rule-width ：设置列与列之间边框的宽度，值是长度。\n\ncolumn-rule-color ：设置列与列之间边框的颜色。\n\ncoumn-rule ：设置列边框，复合属性。\n\ncolumn-span 指定是否跨列；值: none、all。\n\n</code></pre>\n<h2 id=\"15-伸缩盒模型\"><a class=\"anchor\" href=\"#15-伸缩盒模型\">#</a> 15 . 伸缩盒模型</h2>\n<h3 id=\"1-伸缩盒模型简介\"><a class=\"anchor\" href=\"#1-伸缩盒模型简介\">#</a> 1. 伸缩盒模型简介</h3>\n<pre><code>\n2009 年，W3C 提出了一种新的盒子模型 —— Flexible Box （伸缩盒模型，又称：弹性盒\n\n子）。\n\n它可以轻松的控制：元素分布方式、元素对齐方式、元素视觉顺序 .......\n\n截止目前，除了在部分IE浏览器不支持，其他浏览器均已全部支持。\n\n伸缩盒模型的出现，逐渐演变出了一套新的布局方案 —— flex布局。\n\n</code></pre>\n<pre><code>\n小贴士：\n\n</code></pre>\n<pre><code>\n1. 传统布局是指：基于传统盒状模型，主要靠： display 属性 + position 属性 + float\n\n属性。\n\n2. flex布局目前在移动端应用比较广泛，因为传统布局不能很好的呈现在移动设备上。\n\n</code></pre>\n<h3 id=\"2-伸缩容器-伸缩项目\"><a class=\"anchor\" href=\"#2-伸缩容器-伸缩项目\">#</a> 2. 伸缩容器、伸缩项目</h3>\n<pre><code>\n伸缩容器 ： 开启了 flex 的元素，就是：伸缩容器。\n\n</code></pre>\n<pre><code>\n1. 给元素设置： display:flex 或 display:inline-flex，该元素就变为了伸缩容\n\n器。\n\n2. display:inline-flex很少使用，因为可以给多个伸缩容器的父容器，也设置为伸缩\n\n容器。\n\n3. 一个元素可以同时是：伸缩容器、伸缩项目。\n\n</code></pre>\n<h5 id=\"伸缩项目-伸缩容器所有-子元素-自动成为了伸缩项目\"><a class=\"anchor\" href=\"#伸缩项目-伸缩容器所有-子元素-自动成为了伸缩项目\">#</a> 伸缩项目 ：伸缩容器所有 子元素 自动成为了：伸缩项目。</h5>\n<h5 id=\"1-仅伸缩容器的-子元素-成为了伸缩项目孙子元素-重孙子元素等后代不是伸缩项\"><a class=\"anchor\" href=\"#1-仅伸缩容器的-子元素-成为了伸缩项目孙子元素-重孙子元素等后代不是伸缩项\">#</a> 1. 仅伸缩容器的 子元素 成为了伸缩项目，孙子元素、重孙子元素等后代，不是伸缩项</h5>\n<h5 id=\"目\"><a class=\"anchor\" href=\"#目\">#</a> 目。</h5>\n<h5 id=\"2-无论原来是哪种元素块-行内块-行内一旦成为了伸缩项目全都会块状化\"><a class=\"anchor\" href=\"#2-无论原来是哪种元素块-行内块-行内一旦成为了伸缩项目全都会块状化\">#</a> 2. 无论原来是哪种元素（块、行内块、行内），一旦成为了伸缩项目，全都会 “块状化”。</h5>\n<h3 id=\"3-主轴与侧轴\"><a class=\"anchor\" href=\"#3-主轴与侧轴\">#</a> 3. 主轴与侧轴</h3>\n<h5 id=\"主轴-伸缩项目沿着主轴排列主轴默认是水平的默认方向是从左到右左边是起点右边\"><a class=\"anchor\" href=\"#主轴-伸缩项目沿着主轴排列主轴默认是水平的默认方向是从左到右左边是起点右边\">#</a> 主轴： 伸缩项目沿着主轴排列，主轴默认是水平的，默认方向是：从左到右（左边是起点，右边</h5>\n<h5 id=\"是终点\"><a class=\"anchor\" href=\"#是终点\">#</a> 是终点）。</h5>\n<h5 id=\"侧轴-与主轴垂直的就是侧轴侧轴默认是垂直的默认方向是从上到下上边是起点下边\"><a class=\"anchor\" href=\"#侧轴-与主轴垂直的就是侧轴侧轴默认是垂直的默认方向是从上到下上边是起点下边\">#</a> 侧轴： 与主轴垂直的就是侧轴，侧轴默认是垂直的，默认方向是：从上到下（上边是起点，下边</h5>\n<h5 id=\"是终点-2\"><a class=\"anchor\" href=\"#是终点-2\">#</a> 是终点）。</h5>\n<h3 id=\"4-主轴方向\"><a class=\"anchor\" href=\"#4-主轴方向\">#</a> 4. 主轴方向</h3>\n<pre><code>\n属性名：flex-direction\n\n常用值如下：\n\n1. row ：主轴方向水平从左到右 —— 默认值\n\n2. row-reverse ：主轴方向水平从右到左。\n\n3. column：主轴方向垂直从上到下。\n\n4. column-reverse：主轴方向垂直从下到上。\n\n</code></pre>\n<h5 id=\"注意改变了主轴的方向侧轴方向也随之改变\"><a class=\"anchor\" href=\"#注意改变了主轴的方向侧轴方向也随之改变\">#</a> 注意：改变了主轴的方向，侧轴方向也随之改变。</h5>\n<h3 id=\"5-主轴换行方式\"><a class=\"anchor\" href=\"#5-主轴换行方式\">#</a> 5. 主轴换行方式</h3>\n<pre><code>\n属性名：flex-wrap\n\n常用值如下：\n\n1. nowrap：默认值，不换行。\n\n</code></pre>\n<pre><code>\n2. wrap：自动换行，伸缩容器不够自动换行。\n\n</code></pre>\n<pre><code>\n3. wrap-reverse：反向换行。\n\n</code></pre>\n<h3 id=\"6-flex-flow\"><a class=\"anchor\" href=\"#6-flex-flow\">#</a> 6. flex-flow</h3>\n<pre><code>\nflex-flow是一个复合属性，复合了 flex-direction 和 flex-wrap 两个属性。 值没有顺序要\n\n求。\n\n</code></pre>\n<h3 id=\"7-主轴对齐方式\"><a class=\"anchor\" href=\"#7-主轴对齐方式\">#</a> 7. 主轴对齐方式</h3>\n<pre><code>\n属性名：justify-content\n\n常用值如下：\n\n1. flex-start：主轴起点对齐。—— 默认值\n\n2. flex-end：主轴终点对齐。\n\n3. center：居中对齐\n\n4. space-between：均匀分布，两端对齐（最常用）。\n\n5. space-around：均匀分布，两端距离是中间距离的一半。\n\n6. space-evenly ：均匀分布，两端距离与中间距离一致。\n\n</code></pre>\n<pre><code>\nflex-flow: row wrap;\n\n</code></pre>\n<h3 id=\"8-侧轴对齐方式\"><a class=\"anchor\" href=\"#8-侧轴对齐方式\">#</a> 8. 侧轴对齐方式</h3>\n<h4 id=\"8-1-一行的情况\"><a class=\"anchor\" href=\"#8-1-一行的情况\">#</a> 8. 1 一行的情况</h4>\n<pre><code>\n所需属性：align-items\n\n常用值如下：\n\n1. flex-start：侧轴的起点对齐。\n\n2. flex-end：侧轴的终点对齐。\n\n3. center：侧轴的中点对齐。\n\n4. baseline: 伸缩项目的第一行文字的基线对齐。\n\n5. stretch：如果伸缩项目未设置高度，将占满整个容器的高度。—— （默认值）\n\n</code></pre>\n<h4 id=\"8-2-多行的情况\"><a class=\"anchor\" href=\"#8-2-多行的情况\">#</a> 8. 2 多行的情况</h4>\n<pre><code>\n所需属性：align-content\n\n常用值如下：\n\n1. flex-start：与侧轴的起点对齐。\n\n2. flex-end：与侧轴的终点对齐。\n\n3. center：与侧轴的中点对齐。\n\n4. space-between：与侧轴两端对齐，中间平均分布。\n\n5. space-around：伸缩项目间的距离相等，比距边缘大一倍。\n\n6. space-evenly: 在侧轴上完全平分。\n\n7. stretch：占满整个侧轴。—— 默认值\n\n</code></pre>\n<h3 id=\"9flex-实现水平垂直居中\"><a class=\"anchor\" href=\"#9flex-实现水平垂直居中\">#</a> 9.flex 实现水平垂直居中</h3>\n<p>方法一：父容器开启 flex 布局，随后使用 justify-content 和 align-items 实现水平垂直居中</p>\n<p>方法二：父容器开启 flex 布局，随后子元素 margin: auto</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.outer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #888<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token selector\">.inner</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"10-伸缩性\"><a class=\"anchor\" href=\"#10-伸缩性\">#</a> 10. 伸缩性</h3>\n<h4 id=\"1-flex-basis\"><a class=\"anchor\" href=\"#1-flex-basis\">#</a> 1. flex-basis</h4>\n<pre><code>\n概念：flex-basis设置的是主轴方向的 基准长度 ，会让宽度或高度失效。\n\n</code></pre>\n<h5 id=\"备注主轴横向宽度失效主轴纵向高度失效\"><a class=\"anchor\" href=\"#备注主轴横向宽度失效主轴纵向高度失效\">#</a> 备注：主轴横向：宽度失效；主轴纵向：高度失效</h5>\n<pre><code>\n作用：浏览器根据这个属性设置的值，计算主轴上是否有多余空间，默认值auto，即：伸缩项目\n\n的宽或高。\n\n</code></pre>\n<h4 id=\"2-flex-grow伸\"><a class=\"anchor\" href=\"#2-flex-grow伸\">#</a> 2. flex-grow（伸）</h4>\n<pre><code>\n概念：flex-grow 定义伸缩项目的放大比例，默认为 0 ，即：纵使主轴存在剩余空间，也不拉伸\n\n（放大）。\n\n规则：\n\n1. 若所有伸缩项目的 flex-grow 值都为 1 ，则：它们将等分剩余空间（如果有空间的话）。\n\n2. 若三个伸缩项目的flex-grow值分别为： 1 、 2 、 3 ，则：分别瓜分到：1/6、2/6、\n\n3/6的空间。\n\n</code></pre>\n<h4 id=\"3-flex-shrink缩\"><a class=\"anchor\" href=\"#3-flex-shrink缩\">#</a> 3. flex-shrink（缩）</h4>\n<pre><code>\n概念：flex-shrink定义了项目的压缩比例，默认为 1 ，即：如果空间不足，该项目将会缩小。\n\n收缩项目的计算，略微复杂一点，我们拿一个场景举例：\n\n</code></pre>\n<h5 id=\"例如\"><a class=\"anchor\" href=\"#例如\">#</a> 例如：</h5>\n<pre><code>\n三个收缩项目，宽度分别为：200px、300px、200px，它们的flex-shrink值分别\n\n为： 1 、 2 、 3\n\n若想刚好容纳下三个项目，需要总宽度为700px，但目前容器只有400px，还差300px\n\n所以每个人都要收缩一下才可以放下，具体收缩的值，这样计算：\n\n</code></pre>\n<pre><code>\n1. 计算分母：(200×1) + (300×2) + (200×3) = 1400\n\n2. 计算比例：\n\n项目一：(200×1) / 1400 = 比例值 1\n\n项目二：(300×2) / 1400 = 比例值 2\n\n</code></pre>\n<pre><code>\n.outer &#123;\n\nwidth: 400px;\n\nheight: 400px;\n\nbackground-color: #888;\n\ndisplay: flex;\n\n&#125;\n\n.inner &#123;\n\nwidth: 100px;\n\nheight: 100px;\n\nbackground-color: orange;\n\nmargin: auto;\n\n&#125;\n\n</code></pre>\n<h5 id=\"值-含义-10\"><a class=\"anchor\" href=\"#值-含义-10\">#</a> 值 含义</h5>\n<pre><code>\nall 检测所有设备。\n\n</code></pre>\n<pre><code>\nscreen 检测电子屏幕，包括：电脑屏幕、平板屏幕、手机屏幕等。\n\n</code></pre>\n<pre><code>\nprint 检测打印机。\n\n</code></pre>\n<pre><code>\naural 已废弃，用于语音和声音合成器。\n\n</code></pre>\n<pre><code>\nbraille 已废弃，应用于盲文触摸式反馈设备。\n\n</code></pre>\n<pre><code>\nembossed 已废弃， 用于打印的盲人印刷设备。\n\n</code></pre>\n<pre><code>\nhandheld 已废弃， 用于掌上设备或更小的装置，如PDA和小型电话。\n\n</code></pre>\n<pre><code>\nprojection 已废弃， 用于投影设备。\n\n</code></pre>\n<pre><code>\ntty 已废弃， 用于固定的字符网格，如电报、终端设备和对字符有限制的便携设备。\n\n</code></pre>\n<pre><code>\ntv 已废弃， 用于电视和网络电视。\n\n</code></pre>\n<h5 id=\"项目三2003-1400-比例值-3\"><a class=\"anchor\" href=\"#项目三2003-1400-比例值-3\">#</a> 项目三：(200×3) / 1400 = 比例值 3</h5>\n<h5 id=\"3-计算最终收缩大小\"><a class=\"anchor\" href=\"#3-计算最终收缩大小\">#</a> 3. 计算最终收缩大小：</h5>\n<h5 id=\"项目一需要收缩比例值1-300\"><a class=\"anchor\" href=\"#项目一需要收缩比例值1-300\">#</a> 项目一需要收缩：比例值 1 × 300</h5>\n<h5 id=\"项目二需要收缩比例值2-300\"><a class=\"anchor\" href=\"#项目二需要收缩比例值2-300\">#</a> 项目二需要收缩：比例值 2 × 300</h5>\n<h5 id=\"项目三需要收缩比例值3-300\"><a class=\"anchor\" href=\"#项目三需要收缩比例值3-300\">#</a> 项目三需要收缩：比例值 3 × 300</h5>\n<h3 id=\"11-flex复合属性\"><a class=\"anchor\" href=\"#11-flex复合属性\">#</a> 11. flex 复合属性</h3>\n<p>flex 是复合属性，复合了： flex-grow 、 flex-shrink 、flex-basis 三个属性，默认值为 0 1</p>\n<p>auto。</p>\n<pre><code>\n如果写 flex:1 1 auto ，则可简写为： flex:auto\n\n如果写 flex:1 1 0 ，则可简写为： flex:1\n\n如果写 flex:0 0 auto ，则可简写为：flex:none\n\n如果写 flex:0 1 auto ，则可简写为： flex:0 auto —— 即 flex 初始值。\n\n</code></pre>\n<h3 id=\"12-项目排序\"><a class=\"anchor\" href=\"#12-项目排序\">#</a> 12. 项目排序</h3>\n<pre><code>\norder属性定义项目的排列顺序。数值越小，排列越靠前，默认为 0 。\n\n</code></pre>\n<h3 id=\"13-单独对齐\"><a class=\"anchor\" href=\"#13-单独对齐\">#</a> 13. 单独对齐</h3>\n<pre><code>\n通过align-self 属性，可以单独调整某个伸缩项目的对齐方式\n\n默认值为 auto，表示继承父元素的 align-items 属性。\n\n</code></pre>\n<h2 id=\"16-响应式布局\"><a class=\"anchor\" href=\"#16-响应式布局\">#</a> 16. 响应式布局</h2>\n<h3 id=\"媒体查询\"><a class=\"anchor\" href=\"#媒体查询\">#</a> 媒体查询</h3>\n<h4 id=\"11-媒体类型\"><a class=\"anchor\" href=\"#11-媒体类型\">#</a> 1.1 媒体类型</h4>\n<h5 id=\"值-含义-11\"><a class=\"anchor\" href=\"#值-含义-11\">#</a> 值 含义</h5>\n<pre><code>\nwidth 检测视口 宽度 。\n\n</code></pre>\n<pre><code>\nmax-width 检测视口 最大宽度 。\n\n</code></pre>\n<pre><code>\nmin-width 检测视口 最小宽度 。\n\n</code></pre>\n<pre><code>\nheight 检测视口 高度 。\n\n</code></pre>\n<pre><code>\nmax-height 检测视口 最大高度 。\n\n</code></pre>\n<pre><code>\nmin-height 检测视口 最小高度 。\n\n</code></pre>\n<pre><code>\ndevice-width 检测设备 屏幕的宽度 。\n\n</code></pre>\n<pre><code>\nmax-device-width 检测设备 屏幕的最大宽度 。\n\n</code></pre>\n<pre><code>\nmin-device-width 检测设备 屏幕的最小宽度 。\n\n</code></pre>\n<pre><code>\norientation\n\n</code></pre>\n<h5 id=\"检测-视口的旋转方向-是否横屏\"><a class=\"anchor\" href=\"#检测-视口的旋转方向-是否横屏\">#</a> 检测 视口的旋转方向 （是否横屏）。</h5>\n<pre><code>\n1. portrait：视口处于纵向，即高度大于等于宽度。\n\n2. landscape：视口处于横向，即宽度大于高度。\n\n</code></pre>\n<h5 id=\"值-含义-12\"><a class=\"anchor\" href=\"#值-含义-12\">#</a> 值 含义</h5>\n<pre><code>\nand 并且\n\n, 或 or 或\n\nnot 否定\n\nonly 肯定\n\n</code></pre>\n<p>完整列表请参考：</p>\n<pre><code>\nhttps://developer.mozilla.org/zh-CN/docs/Web/CSS/@media\n\n</code></pre>\n<h4 id=\"12-媒体特性\"><a class=\"anchor\" href=\"#12-媒体特性\">#</a> 1.2 媒体特性</h4>\n<pre><code>\n完整列表请参考： https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media\n\n</code></pre>\n<h4 id=\"13-运算符\"><a class=\"anchor\" href=\"#13-运算符\">#</a> 1.3 运算符</h4>\n<h4 id=\"14-常用阈值\"><a class=\"anchor\" href=\"#14-常用阈值\">#</a> 1.4 常用阈值</h4>\n<h5 id=\"在实际开发中会将屏幕划分成几个区间例如\"><a class=\"anchor\" href=\"#在实际开发中会将屏幕划分成几个区间例如\">#</a> 在实际开发中，会将屏幕划分成几个区间，例如：</h5>\n<h4 id=\"15-结合外部样式的用法\"><a class=\"anchor\" href=\"#15-结合外部样式的用法\">#</a> 1.5 结合外部样式的用法</h4>\n<h5 id=\"用法一\"><a class=\"anchor\" href=\"#用法一\">#</a> 用法一 ：</h5>\n<h5 id=\"用法二\"><a class=\"anchor\" href=\"#用法二\">#</a> 用法二：</h5>\n<h2 id=\"17-bfc\"><a class=\"anchor\" href=\"#17-bfc\">#</a> 17. BFC</h2>\n<h3 id=\"1-什么是bfc\"><a class=\"anchor\" href=\"#1-什么是bfc\">#</a> 1. 什么是 BFC</h3>\n<h5 id=\"w3c-上对-bfc-的定义\"><a class=\"anchor\" href=\"#w3c-上对-bfc-的定义\">#</a> W3C 上对 BFC 的定义：</h5>\n<pre><code>\n原文：Floats, absolutely positioned elements, block containers (such as inline-blocks, table-\n\ncells, and table-captions) that are not block boxes, and block boxes with 'overflow' other than\n\n'visible' (except when that value has been propagated to the viewport) establish new block\n\nformatting contexts for their contents.\n\n</code></pre>\n<pre><code>\n译文：浮动、绝对定位元素、不是块盒子的块容器（如inline-blocks、table-cells和\n\ntable-captions），以及overflow属性的值除visible以外的块盒，将为其内容建立新\n\n的块格式化上下文。\n\n</code></pre>\n<h5 id=\"mdn-上对-bfc-的描述\"><a class=\"anchor\" href=\"#mdn-上对-bfc-的描述\">#</a> MDN 上对 BFC 的描述：</h5>\n<pre><code>\n块格式化上下文（Block Formatting Context，BFC） 是Web页面的可视CSS渲染的一部分，\n\n是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。\n\n</code></pre>\n<h5 id=\"更加通俗的描述\"><a class=\"anchor\" href=\"#更加通俗的描述\">#</a> 更加通俗的描述：</h5>\n<pre><code>\n1. BFC 是 Block Formatting Context（ 块级格式上下文 ），可以理解成元素的一个\n\n“特异功能”。\n\n</code></pre>\n<pre><code>\n&lt;link rel=&quot;stylesheet&quot; media=&quot;具体的媒体查询&quot; href=&quot;mystylesheet.css&quot;&gt;\n\n</code></pre>\n<pre><code>\n@media screen and (max-width:768px) &#123;\n\n/*CSS-Code;*/\n\n&#125;\n\n</code></pre>\n<pre><code>\n@media screen and (min-width:768px) and (max-width:1200px) &#123;\n\n/*CSS-Code;*/\n\n&#125;\n\n</code></pre>\n<h5 id=\"2-该-特异功能在默认的情况下处于关闭状态当元素满足了某些条件后该特异功\"><a class=\"anchor\" href=\"#2-该-特异功能在默认的情况下处于关闭状态当元素满足了某些条件后该特异功\">#</a> 2. 该 “特异功能”，在默认的情况下处于关闭状态；当元素满足了某些条件后，该 “特异功</h5>\n<h5 id=\"能被激活\"><a class=\"anchor\" href=\"#能被激活\">#</a> 能” 被激活。</h5>\n<h5 id=\"3-所谓激活特异功能专业点说就是该元素创建了-bfc又称开启了-bfc\"><a class=\"anchor\" href=\"#3-所谓激活特异功能专业点说就是该元素创建了-bfc又称开启了-bfc\">#</a> 3. 所谓激活 “特异功能”，专业点说就是：该元素创建了 BFC（又称：开启了 BFC）。</h5>\n<h3 id=\"2-开启了bfc能解决什么问题\"><a class=\"anchor\" href=\"#2-开启了bfc能解决什么问题\">#</a> 2. 开启了 BFC 能解决什么问题</h3>\n<pre><code>\n1. 元素开启BFC后，其子元素不会再产生margin塌陷问题。\n\n2. 元素开启BFC后，自己不会被其他浮动元素所覆盖。\n\n3. 元素开启BFC后，就算其子元素浮动，元素自身高度也不会塌陷。\n\n</code></pre>\n<h3 id=\"3-如何开启bfc\"><a class=\"anchor\" href=\"#3-如何开启bfc\">#</a> 3. 如何开启 BFC</h3>\n<h5 id=\"根元素\"><a class=\"anchor\" href=\"#根元素\">#</a> 根元素</h5>\n<h5 id=\"浮动元素\"><a class=\"anchor\" href=\"#浮动元素\">#</a> 浮动元素</h5>\n<h5 id=\"绝对定位-固定定位的元素\"><a class=\"anchor\" href=\"#绝对定位-固定定位的元素\">#</a> 绝对定位、固定定位的元素</h5>\n<h5 id=\"行内块元素\"><a class=\"anchor\" href=\"#行内块元素\">#</a> 行内块元素</h5>\n<pre><code>\n表格单元格：table、thead、tbody、tfoot、th、td、tr、caption\n\noverflow 的值不为 visible 的块元素\n\n伸缩项目\n\n多列容器\n\ncolumn-span 为 all 的元素（即使该元素没有包裹在多列容器中）\n\ndisplay的值，设置为flow-root\n\n</code></pre>\n","categories":["前端学习","HTML5+CSS3"],"tags":["CSS3"]},{"title":"pytorch安装环境问题","url":"/2024/02/07/NER/pytorch%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E9%97%AE%E9%A2%98/","content":"<h1 id=\"自己安\"><a class=\"anchor\" href=\"#自己安\">#</a> 自己安</h1>\n<p>突然兴起想重装 Anaconda 和 Pycharm, 好家伙，整整两天才给全部整明白，最大的原因见文末，在此记录一下我踩的坑。</p>\n<p>参考【PyTorch 深度学习快速入门教程（绝对通俗易懂！）【小土堆】】 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWhFNDExdDdSTi8/c2hhcmVfc291cmNlPWNvcHlfd2ViJmFtcDt2ZF9zb3VyY2U9NGJkODUyZjgzNGYyZDlhNmE4Y2UwNjA5YTM2MDAxZDQ=\">https://www.bilibili.com/video/BV1hE411t7RN/?share_source=copy_web&amp;vd_source=4bd852f834f2d9a6a8ce0609a36001d4</span></p>\n<p>Anaconda（ <code>Anaconda3-2023.09-0-Windows-x86 64.exe</code> ）,pycharm，pytorch 已下好且 pytorch（本机没有满足要求的 GPU，选的 CPU）可正常激活，中文路径问题可参考 CSDN 通过配置环境变量解决，仅最后一步不对。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(pytorch) PS C:\\Users\\ 王越洋 &gt; python</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Python 3.6.13 |Anaconda, Inc.| (default, Mar 16 2021, 11:37:27) [MSC v.1916 64 bit (AMD64)] on win32</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&gt;&gt;&gt; import torch</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&gt;&gt;&gt;</pre></td></tr></table></figure><p>但配置时报错如下：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>D:\\ruanjian\\Pycharm\\PyCharm 2023.3.2\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_import_hook.py:21: UserWarning: mkl-service package failed to import, therefore Intel (R) MKL initialization ensuring its correct out-of-the box operation under condition when Gnu OpenMP had already been loaded by Python process is not assured. Please install mkl-service package, see http:&#x2F;&#x2F;github.com&#x2F;IntelPython&#x2F;mkl-service</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  module &#x3D; self._system_import (name, *args, **kwargs)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Traceback (most recent call last):</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  File &quot;C:\\Users\\ 王越洋 \\.conda\\envs\\pytorch\\lib\\site-packages\\numpy\\core\\__init__.py&quot;, line 22, in &lt;module&gt;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    from . import multiarray</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  File &quot;D:\\ruanjian\\Pycharm\\PyCharm 2023.3.2\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_import_hook.py&quot;, line 21, in do_import</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    module &#x3D; self._system_import (name, *args, **kwargs)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  File &quot;C:\\Users\\ 王越洋 \\.conda\\envs\\pytorch\\lib\\site-packages\\numpy\\core\\multiarray.py&quot;, line 12, in &lt;module&gt;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    from . import overrides</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  File &quot;D:\\ruanjian\\Pycharm\\PyCharm 2023.3.2\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_import_hook.py&quot;, line 21, in do_import</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    module &#x3D; self._system_import (name, *args, **kwargs)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  File &quot;C:\\Users\\ 王越洋 \\.conda\\envs\\pytorch\\lib\\site-packages\\numpy\\core\\overrides.py&quot;, line 7, in &lt;module&gt;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    from numpy.core._multiarray_umath import (</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  File &quot;D:\\ruanjian\\Pycharm\\PyCharm 2023.3.2\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_import_hook.py&quot;, line 21, in do_import</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    module &#x3D; self._system_import (name, *args, **kwargs)</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ImportError: DLL load failed: 找不到指定的模块。</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>During handling of the above exception, another exception occurred:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>Traceback (most recent call last):</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  File &quot;C:\\Users\\ 王越洋 \\.conda\\envs\\pytorch\\lib\\code.py&quot;, line 91, in runcode</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    exec (code, self.locals)</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  File &quot;&lt;input&gt;&quot;, line 1, in &lt;module&gt;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  File &quot;D:\\ruanjian\\Pycharm\\PyCharm 2023.3.2\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_import_hook.py&quot;, line 21, in do_import</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    module &#x3D; self._system_import (name, *args, **kwargs)</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  File &quot;C:\\Users\\ 王越洋 \\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\__init__.py&quot;, line 613, in &lt;module&gt;</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    _C._initExtension (manager_path ())</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  File &quot;D:\\ruanjian\\Pycharm\\PyCharm 2023.3.2\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_import_hook.py&quot;, line 21, in do_import</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    module &#x3D; self._system_import (name, *args, **kwargs)</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  File &quot;C:\\Users\\ 王越洋 \\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\cuda\\__init__.py&quot;, line 685, in &lt;module&gt;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    from . import amp</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  File &quot;D:\\ruanjian\\Pycharm\\PyCharm 2023.3.2\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_import_hook.py&quot;, line 21, in do_import</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    module &#x3D; self._system_import (name, *args, **kwargs)</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  File &quot;C:\\Users\\ 王越洋 \\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\cuda\\amp\\__init__.py&quot;, line 1, in &lt;module&gt;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    from .autocast_mode import autocast, custom_fwd, custom_bwd  # noqa: F401</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  File &quot;D:\\ruanjian\\Pycharm\\PyCharm 2023.3.2\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_import_hook.py&quot;, line 21, in do_import</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    module &#x3D; self._system_import (name, *args, **kwargs)</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  File &quot;C:\\Users\\ 王越洋 \\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\cuda\\amp\\autocast_mode.py&quot;, line 5, in &lt;module&gt;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    import numpy as np</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  File &quot;D:\\ruanjian\\Pycharm\\PyCharm 2023.3.2\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_import_hook.py&quot;, line 21, in do_import</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    module &#x3D; self._system_import (name, *args, **kwargs)</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  File &quot;C:\\Users\\ 王越洋 \\.conda\\envs\\pytorch\\lib\\site-packages\\numpy\\__init__.py&quot;, line 140, in &lt;module&gt;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    from . import core</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  File &quot;D:\\ruanjian\\Pycharm\\PyCharm 2023.3.2\\plugins\\python\\helpers\\pydev\\_pydev_bundle\\pydev_import_hook.py&quot;, line 21, in do_import</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    module &#x3D; self._system_import (name, *args, **kwargs)</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  File &quot;C:\\Users\\ 王越洋 \\.conda\\envs\\pytorch\\lib\\site-packages\\numpy\\core\\__init__.py&quot;, line 48, in &lt;module&gt;</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    raise ImportError (msg)</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>ImportError: </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>Importing the numpy C-extensions failed. This error can happen for</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>many reasons, often due to issues with your setup or how NumPy was</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>installed.</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>We have compiled some common reasons and troubleshooting tips at:</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    https:&#x2F;&#x2F;numpy.org&#x2F;devdocs&#x2F;user&#x2F;troubleshooting-importerror.html</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>Please note and check the following:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  * The Python version is: Python3.6 from &quot;C:\\Users\\ 王越洋 \\.conda\\envs\\pytorch\\python.exe&quot;</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  * The NumPy version is: &quot;1.19.2&quot;</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>and make sure that they are the versions you expect.</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>Please carefully study the documentation linked above for further help.</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>Original error was: DLL load failed: 找不到指定的模块。</pre></td></tr></table></figure><p><s>初步怀疑问题在于</s>（是小白没错了，后面人家说和这个没关系，看到这个报错的 uu 不要惊慌）</p>\n<p>但当时我不知道啊，遂运行提示命令，无果，约半小时后提示某文件没有 admission，CSDN 有文指出该问题可以重新更新 conda，下载一小时没下完。两个都运行了两次左右，各种重装 Anaconda，结果人家输出我没有 admission，如果你和我一样装 Anaconda 时选的 <code>给所有人装</code> 的选项，记得在权限里设置 <code>所有人可修改</code> 即可解决。当然，不设置也可以。</p>\n<p>最后，这个错无伤大雅，重点不在这，不要运行 <code>conda update -n base -c defaults conda</code>  就是了。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(pytorch) PS C:\\Users\\ 王越洋 &gt; conda install pytorch torchvision torchaudio cpuonly -c pytorch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Collecting package metadata (current_repodata.json): done</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Solving environment: done</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#x3D;&#x3D;&gt; WARNING: A newer version of conda exists. &lt;&#x3D;&#x3D;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  current version: 23.7.4</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  latest version: 24.1.0</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Please update conda by running</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    $ conda update -n base -c defaults conda</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Or to minimize the number of packages updated during conda update use</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     conda install conda&#x3D;24.1.0</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre># All requested packages already installed.</pre></td></tr></table></figure><p>这个报错的意思是你有库安了，但是没安全。</p>\n<h1 id=\"深夜寻求某宝\"><a class=\"anchor\" href=\"#深夜寻求某宝\">#</a> 深夜寻求某宝</h1>\n<p>凌晨 00:23，解决无果，遂面向某宝解决（cost20￥），次日早，某阿里员工给我一波各种操作，两小时后告诉我问题是 numpy 库没安全，然后各种调试，找版本，然后安，解决！</p>\n<p>下午，感觉自己又行了，于是自己重新建了一个虚拟环境，把人家建的删了，报错依旧，重装 numpy 无果，<s>发疯发疯</s>，感觉这个人解决问题不能一劳永逸（其实是我没学会。。。人家还是很厉害滴）~</p>\n<h1 id=\"晚上寻求拼夕夕\"><a class=\"anchor\" href=\"#晚上寻求拼夕夕\">#</a> 晚上寻求拼夕夕🌟</h1>\n<p>已是晚 10：20, 继第 10 次左右重新安装调试后，随便捞了个能安的人（cost15￥），看得出来他也很焦灼，甚至还出现了新错误:</p>\n<p>(1) Environment 创建失败（这个和库没关系，是说你的源或者网络问题，建议换源即可）</p>\n<p>(2) 系统找不到指定路径。这个就比较棘手了，人家配了环境变量，各种调试，无果。通过装 <code>Anaconda3-2020.11 Windows-x86 64.exe</code> ，再来一遍 pip 配置，成功！！！</p>\n<p>通过 pip 安装就不会像通过 conda 安装报错，成功解决！！！</p>\n<p>小问题：conda 安装的虚拟环境位置在 <code>C:/User/XXX/.conda/env/</code>  下的，但这种方式安装的虚拟环境位置在 Anaconda3 的安装目录下，其他运行均正常，虽然还是会报版本不一致的错，但无碍。本次配置终于完成！！</p>\n<h1 id=\"结果\"><a class=\"anchor\" href=\"#结果\">#</a> 结果</h1>\n<p>综上，出现此类错误的人建议装低版本一点的 Anaconda (卸的时候记得用自带的工具卸，写完检查环境变量删干净没)，安装时记得把 PATH 选项勾上（要不然要自己配，容易配错），最新版的 Anaconda 应该是有小毛病（库不全），<span class=\"red\">谨慎安装！！！</span></p>\n<p>祝看到这里的各位 PyTorch 学习顺利！🌟</p>\n","categories":["NER"],"tags":["pytorch"]},{"title":"2024.01-2024.06 限定主人——舒蔓","url":"/2024/01/17/2024.01-2024.06%20%E9%99%90%E5%AE%9A%E4%B8%BB%E4%BA%BA%E2%80%94%E2%80%94%E8%88%92%E8%94%93/","content":"<h1 id=\"跨越时空来见你\"><a class=\"anchor\" href=\"#跨越时空来见你\">#</a> 跨越时空来见你</h1>\n<blockquote>\n<p>嘿，希望还不迟，前段时间有别的事在忙，耽搁了，但这篇 Bolg 我设成了 1-17，我收到信的那天～哈哈，也算是 “秒回” 吧。</p>\n</blockquote>\n<p>也许命运就是如此巧合，在千帆过尽后会迎来救赎。感谢蓝信封，也庆幸当时的我刚巧错过了自选孩子的时间，让我又一次看见如此相似的双眸。你知道吗？从前我一直希望能够拥有一个笔友，互通书信，交流所见所感所想，然后，我遇见了你啊，我的第一位笔友！</p>\n<p>我遇见过很多人，乐观的、麻木的、幽默的、勇毅的…… 但在相当长的一段时间里，我没有再遇见那种强烈共鸣的感觉，文字的力量总是不可估量的，虽寥寥数语却胜过千万次独白。同一个问题我问过很多人，当然答案千奇百怪，但我知道你的答案会和她一样 —— 那个中考时期的我。</p>\n<p>太像了，你知道吗？可能是经历，可能是一些观点和看法，单纯，勇敢又有一些环境导致的局限性。于是啊，本来本着赚劳育学时的我想要让你去看一看属于勇敢者的世界，属于无尽厮杀中赢家的世界，就像他们曾经那样不遗余力地拉起我那样。我知道为什么那个问题的答案很多人都不一样，或许同样热烈悲悯的灵魂很少彼此遇见吧，幸好幸好，我遇见了你啊。</p>\n<blockquote>\n<p>“我太想要这么一个人，一个能把关在我心里的那个自我放出来的人”<br />\n— 石黑一雄</p>\n</blockquote>\n<p>中考啊，真的很残酷，犹豫就会败北，甚至会比高考更甚，希望你独自趟过泥泞后仍旧有爱人和被人爱的能力。果敢而自信地做好你当下的选择，事在人为。尽人事而后安天命。</p>\n<p>在此，将我的小站短暂地赠与你 —— 我的第一位客人，赠与你逆天改命的勇气，赠与你咬牙坚持的毅力，赠你一个永远温暖、永远为你摇旗呐喊的灵魂。</p>\n<blockquote>\n<p>要加油哇，永不言弃！~</p>\n</blockquote>\n"},{"title":"提问的智慧","url":"/2023/11/23/jike/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/","content":"<p>掘金，一个教你正确提问的平台，如果你刚刚接触计算机，强烈建议看完<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MDAxNDMxODQxMTE4ODc5NzU4\">这篇</span>再开口，谢谢！</p>\n","categories":["计科资料"]},{"title":"文本预处理","url":"/2024/02/07/NER/%E6%96%87%E6%9C%AC%E9%A2%84%E5%A4%84%E7%90%86/","content":"<h1 id=\"文本处理的基本方法\"><a class=\"anchor\" href=\"#文本处理的基本方法\">#</a> 文本处理的基本方法</h1>\n<h2 id=\"分词\"><a class=\"anchor\" href=\"#分词\">#</a> 分词</h2>\n<h3 id=\"什么是分词\"><a class=\"anchor\" href=\"#什么是分词\">#</a> 什么是分词？</h3>\n<blockquote>\n<p>分词就是将连续的字序列按照一定的规范重新组合成词序列的过程。我们知道，在英文的<br />\n行文中，单词之间是以空格作为自然分界符的，而中文只是字、句和段能通过明显的分界<br />\n符来简单划界，唯独词没有一个形式上的分界符，分词过程就是找到这样分界符的过程，</p>\n</blockquote>\n<ul>\n<li>举例：</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>女干事每月经过下属科室都</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'女干事'</span>，<span class=\"token string\">'每月'</span>，<span class=\"token string\">'经过'</span>，<span class=\"token string\">'下属'</span>，<span class=\"token string\">'科室'</span>，<span class=\"token string\">'都'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"分词的作用\"><a class=\"anchor\" href=\"#分词的作用\">#</a> 分词的作用</h3>\n<ul>\n<li>词作为语言语义理解的最小单元，是人类理解文本语言的基础。因此也是 AI 解决 NLP 领域高阶任务，如自动问答，机器翻译，文本生成的重要基础环节。</li>\n</ul>\n<h3 id=\"流行中文分词工具jieba\"><a class=\"anchor\" href=\"#流行中文分词工具jieba\">#</a> 流行中文分词工具 jieba</h3>\n<blockquote>\n<p>&quot;结巴&quot; 中文分词，做最好的 Python 中文分词组件。</p>\n</blockquote>\n<ul>\n<li>\n<p>jiebal 的特性：</p>\n<ul>\n<li>支持多种分词模式</li>\n<li>精确模式</li>\n<li>全模式</li>\n<li>搜索引擎摸式</li>\n<li>支持中文繁体分词</li>\n<li>支持用户自定义词典</li>\n</ul>\n</li>\n<li>\n<p>jieba 使用</p>\n</li>\n</ul>\n<blockquote>\n<p>精确模式分词：试图将句子最精确地切开，适合文本分析</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> jieba</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> content <span class=\"token operator\">=</span> <span class=\"token string\">\"女干事每月经过下属科室都\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> jieba<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span>cut_all<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>默认为<span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#生成器对象</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>generator <span class=\"token builtin\">object</span> Tokenizer<span class=\"token punctuation\">.</span>cut at <span class=\"token number\">0x000001ED13237350</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> jieba<span class=\"token punctuation\">.</span>lcut<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span>cut_all<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#列表内容</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Building prefix <span class=\"token builtin\">dict</span> <span class=\"token keyword\">from</span> the default dictionary <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Dumping model to <span class=\"token builtin\">file</span> cache C<span class=\"token punctuation\">:</span>\\WINDOWS\\TEMP\\jieba<span class=\"token punctuation\">.</span>cache</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Loading model cost <span class=\"token number\">0.607</span> seconds<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Prefix <span class=\"token builtin\">dict</span> has been built successfully<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Out<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'女干事'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'每月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'经过'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'下属'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'科室'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'都'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p>全模式分词：把句子中所有的可以成词的词语都扫描出来，速度非常快，但是不能消除歧义。</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> content <span class=\"token operator\">=</span> <span class=\"token string\">\"女干事每月经过下属科室都\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> jieba<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span>cut_all<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token operator\">&lt;</span>generator <span class=\"token builtin\">object</span> Tokenizer<span class=\"token punctuation\">.</span>cut at <span class=\"token number\">0x000001ED13237D60</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> jieba<span class=\"token punctuation\">.</span>lcut<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span>cut_all<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token string\">'女干事'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'干事'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'每月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'月经'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'经过'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'下属'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'科室'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'都'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p>搜索引擎模式分词：在精确模式的基础上，对长词再次切分，提高召回率，适合用于搜索引擎分词。</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> content <span class=\"token operator\">=</span> <span class=\"token string\">\"女干事每月经过下属科室都\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> jieba<span class=\"token punctuation\">.</span>cut_for_search<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token operator\">&lt;</span>generator <span class=\"token builtin\">object</span> Tokenizer<span class=\"token punctuation\">.</span>cut_for_search at <span class=\"token number\">0x000001ED14A014A0</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> jieba<span class=\"token punctuation\">.</span>lcut_for_search<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'干事'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'女干事'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'每月'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'经过'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'下属'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'科室'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'都'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p>中文繁体分词：针对中国香港，台湾地区的繁体文本进行分词</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> content <span class=\"token operator\">=</span> <span class=\"token string\">\"烦惱即是菩提，我暂且不提\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> jieba<span class=\"token punctuation\">.</span>lcut_for_search<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token string\">'烦惱'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'即'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'是'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'菩提'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'，'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'我'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'暂且'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'不提'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p>使用用户自定义词典</p>\n</blockquote>\n<ul>\n<li>添加自定义词典后，jieba 能够准确识别词典中出现的词汇，提升整体的识别准确率，</li>\n<li>词典格式：每一行分三部分：词语、词频（可省略）、词性（可省略），用空格隔开<br />\n顺序不可颠倒</li>\n<li>词典样式如下，具体词性含义请参照附录：jieba 词性对照表，将该词典存 userdict.txt, 方便之后加载使用。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>云计算5n</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>李小福2nr</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>easy_install <span class=\"token number\">3</span> eng</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>好用<span class=\"token number\">300</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>韩玉赏鉴3nZ</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>八一双鹿3nz</pre></td></tr></table></figure><hr />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span> <span class=\"token keyword\">import</span> jieba</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> jieba<span class=\"token punctuation\">.</span>1cut<span class=\"token punctuation\">(</span><span class=\"token string\">\"八一双鹿更名为八一南昌篮球队！\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#没有使用用户自定义词典前的结果：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token string\">'八一双鹿'</span>，<span class=\"token string\">'更名'</span>，<span class=\"token string\">'为'</span>，<span class=\"token string\">'八一'</span>，<span class=\"token string\">'南昌'</span>，<span class=\"token string\">'篮球队'</span>，<span class=\"token string\">'!'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span>jieba<span class=\"token punctuation\">.</span>load_userdict<span class=\"token punctuation\">(</span><span class=\"token string\">\"./userdict.txt\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#使用了用户自定义词典后的结果：</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'八一双鹿'</span>，<span class=\"token string\">'更名'</span>，<span class=\"token string\">'为'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'八一'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'南昌'</span>，<span class=\"token string\">'篮球队'</span>，<span class=\"token string\">'!'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h2 id=\"命名实体识别\"><a class=\"anchor\" href=\"#命名实体识别\">#</a> 命名实体识别</h2>\n<p>顾名思义，命名实体识别 (Named Entity Recognition, 简称 NER) 就是识别出一段文本中可能存在的命名实体。</p>\n<ul>\n<li>命名实体识别的作用：</li>\n</ul>\n<p>同词汇一样，命名实体也是人类理解文本的基础单元，因此也是 A 解决 NLP 领域高阶任务的重要基础环节</p>\n<h2 id=\"词性标注\"><a class=\"anchor\" href=\"#词性标注\">#</a> 词性标注</h2>\n<blockquote>\n<p>词性：语言中对词的一种分类方法，以语法特征为主要依据、兼顾词汇意义对词进行划分的结果，常见的词性有 143 如：名词，动词，形容词等</p>\n</blockquote>\n<p>顾名思义，词性标注 (Part-Of-Speech tagging, 简称 POS) 就是标注出一段文本中每个词汇的词性。</p>\n<ul>\n<li>词性标注的作用</li>\n</ul>\n<p>词性标注以分词为基础，是对文本语言的另一个角度的理解，因此也常常成为 A 解决 NLP 领域高阶任务的重要基础环节。</p>\n<ul>\n<li>使用 jieba 进行中文词性标注</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> jieba<span class=\"token punctuation\">.</span>posseg <span class=\"token keyword\">as</span> pseg</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> pseg<span class=\"token punctuation\">.</span>lcut<span class=\"token punctuation\">(</span><span class=\"token string\">\"我爱北京天安门\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>pair<span class=\"token punctuation\">(</span><span class=\"token string\">'我'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">(</span><span class=\"token string\">'爱'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'v'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">(</span><span class=\"token string\">'北京'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ns'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">(</span><span class=\"token string\">'天安门'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ns'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>rr<span class=\"token punctuation\">:</span>人称代词</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>v<span class=\"token punctuation\">:</span>动词</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n<span class=\"token punctuation\">:</span>名词</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>vn<span class=\"token punctuation\">:</span>动名词</pre></td></tr></table></figure><h1 id=\"文本张量表示方法\"><a class=\"anchor\" href=\"#文本张量表示方法\">#</a> 文本张量表示方法</h1>\n<ul>\n<li>什么是文本张量表示</li>\n</ul>\n<p>将一段文本使用张量进行表示，其中一般将词汇为表示成向量，称作词向量，再由各个词向量按顺序组成矩阵形成文本表示。</p>\n<p>举个栗子</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">\"人生\"</span>，<span class=\"token string\">\"该\"</span>，<span class=\"token string\">\"如何\"</span>，<span class=\"token string\">\"起头\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#每个词对应矩阵中的一个向量</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1.32</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">5.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">3.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5.43</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.34</span><span class=\"token punctuation\">,</span><span class=\"token number\">3.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">3.21</span><span class=\"token punctuation\">,</span><span class=\"token number\">5.32</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4.32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">2.54</span><span class=\"token punctuation\">,</span><span class=\"token number\">7.32</span><span class=\"token punctuation\">,</span><span class=\"token number\">5.12</span><span class=\"token punctuation\">,</span><span class=\"token number\">9.54</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li>文本张量表示的作用</li>\n</ul>\n<p>将文本表示成张量（矩阵）形式，能够使语言文本可以作为计算机处理程序的输入，进行接下来一系列的解析工作。</p>\n<blockquote>\n<ul>\n<li>文本张量表示的方法：\n<ul>\n<li>one-hot 编码</li>\n<li>Word2vec</li>\n<li>Word Embedding</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"one-hot独热编码\"><a class=\"anchor\" href=\"#one-hot独热编码\">#</a> one-hot (独热编码)</h2>\n<ul>\n<li>什么是 one-hot (独热编码) 词向量表示</li>\n</ul>\n<p>又称独热编码，将每个词表示成具有个元素的向量，这个词向量中只有一个元素是 1，其他元素都是 0，不同词汇元素为 0 的位置不同，其中的大小是整个语料中不同词汇的总数。</p>\n<p>举个栗子</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">\"改变\"</span>，<span class=\"token string\">\"要\"</span>，<span class=\"token string\">\"如何\"</span>，<span class=\"token string\">\"起手\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li>实现</li>\n</ul>\n<ol>\n<li>进行 one-hot (独热编码)</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#导入用于对象保存与加载的 job11b</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>externals <span class=\"token keyword\">import</span> joblib</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#导入 keras 中的词汇映射器 Tokenizer</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> keras<span class=\"token punctuation\">.</span>preprocessing<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">import</span> Tokenizer</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#假定 vocab 为语料集所有不同词汇集合</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>vocab <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"周杰伦\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"陈奕迅\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"王力宏\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"李宗盛\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"吴亦凡\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"鹿晗\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#实例化一个词汇映射器对象</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>t <span class=\"token operator\">=</span> Tokenizer<span class=\"token punctuation\">(</span>num_words<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>char_level<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#使用映射器拟合现有文本数据</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>t<span class=\"token punctuation\">.</span>fit_on_texts<span class=\"token punctuation\">(</span>vocab<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> token <span class=\"token keyword\">in</span> vocab<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    zero_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>vocab<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">#使用映射器转化现有文本数据，** 每个词汇对应从 1 开始的自然数</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">#返回样式如：[[2]]，取出其中的数字需要使用 [0][0]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    token_index <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>texts_to_sequences<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    zero_list<span class=\"token punctuation\">[</span>token_index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span><span class=\"token string\">\"的one-hot编码为：\"</span><span class=\"token punctuation\">,</span>zero_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>李宗盛 的one<span class=\"token operator\">-</span>hot编码为： <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>王力宏 的one<span class=\"token operator\">-</span>hot编码为： <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>鹿晗 的one<span class=\"token operator\">-</span>hot编码为： <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>吴亦凡 的one<span class=\"token operator\">-</span>hot编码为： <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>陈奕迅 的one<span class=\"token operator\">-</span>hot编码为： <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>周杰伦 的one<span class=\"token operator\">-</span>hot编码为： <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#使用 jobl1b 工具保存映射器，以便之后使用</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>tokenizer_path <span class=\"token string\">\"./Tokenizer\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>joblib<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span>tokenizer_path<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><div class=\"note danger\">\n<p>注意！！！ 务必用 conda 安装 tensorflow, 会自动匹配对应的版本，pip 会有不兼容问题。<br />\ncpu 的直接 <code>conda install tensorflow</code>  即可，不要指定版本，会找不到包。然后根据对应的报错进行 <code>conda install chardet</code> , 大功告成！</p>\n</div>\n<ol start=\"2\">\n<li>使用</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#导入用于对象保存与加载的 job11b</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>externals <span class=\"token keyword\">import</span> joblib</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#加载之前保存的 Tokenizer, 实例化一个 t 对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>t <span class=\"token operator\">=</span> joblib<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>tokenizer_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#编码 token 为 \"李宗盛\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>token<span class=\"token operator\">=</span><span class=\"token string\">\"李宗盛\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#使用 t 获得 token-index</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>token_index <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>texts_to_sequences<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#初始化一个 zero-11st</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>zero_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>vocab<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#令 zero-L1st 的对应索引为 1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>zero_list<span class=\"token punctuation\">[</span>token_index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span><span class=\"token string\">\"的one-hot编码为：\"</span>，zero_list<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>输出效果</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>李宗盛的one<span class=\"token operator\">-</span>hot编码为：<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>one-hot 编码的优劣势：</li>\n</ol>\n<p>优势：摄作简单，容易理解。</p>\n<p>劣势：完全割裂了词与词之间的联系，而且在大语料集下，每个向量的长度过大，占据大量内存。</p>\n<p><span class=\"label danger\">说明</span></p>\n<p>正因为 one-hot 编码明显的劣势，这种编码方式被应用的地方越来越少，取而代之的是<br />\n接下来我们要学习的稠密向量的表示方法 word2vec 和 word embedding。</p>\n<h2 id=\"word2vec\"><a class=\"anchor\" href=\"#word2vec\">#</a> Word2vec</h2>\n<p>是一种流行的将词汇表示成向量的无监督训练方法，该过程将构建神经网络模型，将网络参<br />\n数作为词汇的向量表示，它包含 CBOW 和 skipgram 两种训练模式。</p>\n<h3 id=\"cbowcontinuous-bag-of-words模式\"><a class=\"anchor\" href=\"#cbowcontinuous-bag-of-words模式\">#</a> CBOW (Continuous bag of words) 模式</h3>\n<p>给定一段用于训练的文本语料，再选定某段长度（窗口）作为研究对象，使用上下文词汇预测目标词汇。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/olDK3.png\" alt=\"tu\" title=\"CBOW模式\" /></p>\n<p>图中窗口大小为 9，使用前后 4 个词汇对目标词汇进行预测。</p>\n<h4 id=\"word2vec过程\"><a class=\"anchor\" href=\"#word2vec过程\">#</a> Word2vec 过程</h4>\n<p>假设我们给定的训练语料只有一句话： <code>Hope can set you free</code>  (愿你自由成长)，窗口大小为<br />\n 3, 因此模型的第一个训练样本来自 <code>Hope can set</code> , 因为是 CBOW 模式，所以将使用 <code>Hope</code>  和<br />\n <code>set</code>  作为输入， <code>can</code>  作为输出，在模型训练时， <code>Hope</code> , <code>can</code> , <code>set</code>  等词汇都使用它们的 one-hot 编码。如图所示：每个 one-hot 编码的单词与各自的变换矩阵 (即参数矩阵 3x5, 这里的 3 是指最后得到的词向量维度) 相乘之后再相加，得到上下文表示矩阵 (3x1)。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/ol8Ze.png\" alt=\"tu\" title=\"CBOW模式\" /></p>\n<p>接着，将上下文表示矩阵与变换矩阵（参数矩阵 5x3, 所有的变换矩阵共享参数）相乘，得到 5x1 的结果矩阵，它将与我们真正的目标矩阵即 can 的 one-hot 编码矩阵 (5x1) 进行损失的计算，然后更新网络参数完成一次模型迭代。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/olEj9.png\" alt=\"tu\" title=\"CBOW模式\" /></p>\n<p>最后窗口按序向后移动，重新更新参数，直到所有语料被遍历完成，得到最终的变换矩阵<br />\n (3x5), 这个变换矩阵与每个词汇的 one-hot 编码 (5x1) 相乘，得到的 3x1 的矩阵就是该词汇的 Word2Vec 张量表示。</p>\n<h3 id=\"skipgram模式\"><a class=\"anchor\" href=\"#skipgram模式\">#</a> skipgram 模式</h3>\n<p>给定一段用于训练的文本语料，再选定某段长度（窗口）作为研究对象，使用目标词汇预测上下文词汇。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/olDK3.png\" alt=\"tu\" title=\"skipgram模式\" /></p>\n<p>图中窗口大小为 9，使用目标词汇对前后 4 个词汇进行预测。</p>\n<h4 id=\"word2vec过程-2\"><a class=\"anchor\" href=\"#word2vec过程-2\">#</a> Word2vec 过程</h4>\n<p>假设我们给定的训练语料只有一句话： <code>Hope can set you free</code>  (愿你自由成长)，窗口大小为 3, 因此模型的第一个训练样本来自 Hope can set, 因为是 skipgram 模式，所以将使用 <code>can</code>  作为输入， <code>Hope</code>  和 <code>set</code>  作为输出，在模型训练时， <code>Hope</code> , <code>can</code> , <code>set</code>  等词汇都使用它们的 one-hot 编码。如图所示：将 <code>can</code>  的 one-hot 编码与变换矩阵 (即参数矩阵 3x5, 这里的 3 是指最后得到的词向量维度) 相乘，得到目标词汇表示矩阵 (3x1)。</p>\n<p>接着，将目标词汇表示矩阵与多个变换矩阵 (参数矩阵 5x3) 相乘，得到多个 5x1 的结果矩阵，它将与我们 Hope 和 set 对应的 one-hot 编码矩阵 (5x1) 进行损失的计算，然后更新网络参数完成一次模型迭代。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/on3bl.png\" alt=\"tu\" title=\"skipgram模式\" /></p>\n<p>最后窗口按序向后移动，重新更新参数，直到所有语料被追历完成，得到最终的变换矩阵即参数矩阵 (3x5), 这个变换矩阵与每个词汇的 one-hot 编码 (5x1) 相乘，得到的 3x1 的矩阵就是该词汇的 word2vec 张量表示。</p>\n<h3 id=\"使用fasttext工具实现word2vec的训练和使用\"><a class=\"anchor\" href=\"#使用fasttext工具实现word2vec的训练和使用\">#</a> 使用 fasttext 工具实现 word2vec 的训练和使用：</h3>\n<p>第一步：获取训练数据</p>\n<p>第二步：训练词向量</p>\n<p>第三步：模型超参数设定</p>\n<p>第四步：模型效果检验</p>\n<p>第五步：模型的保存与重加载</p>\n<p>实现过程有待补充</p>\n<h2 id=\"word-embedding词嵌入\"><a class=\"anchor\" href=\"#word-embedding词嵌入\">#</a> word embedding (词嵌入)</h2>\n<blockquote>\n<p>通过一定的方式将词汇映射到指定维度（一般是更高维度）的空间.</p>\n</blockquote>\n<ul>\n<li>广义的 word embedding 包括所有密集词汇向量的表示方法，如之前学习的 word2vec, 即可认为是 word embedding 的一种。</li>\n<li>狭义的 word embedding 是指在神经网络中加入的 embedding 层，对整个网络进行训练的同时产生的 embedding 矩阵 (embedding 层的参数)，这个 embedding 矩阵就是训练过程中所有输入词汇的向量表示组成的矩阵。</li>\n</ul>\n<p>生成过程略……</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/on9Yl.png\" alt=\"tu\" title=\"word embedding\" /></p>\n<h1 id=\"文本数据分析\"><a class=\"anchor\" href=\"#文本数据分析\">#</a> 文本数据分析</h1>\n<h2 id=\"作用\"><a class=\"anchor\" href=\"#作用\">#</a> 作用</h2>\n<p>文本数据分析能够有效帮助我们理解数据语料，快速检查递语料可能存在的问题，并指导之后模型训练过程中一些超参数的选择</p>\n<ul>\n<li>常用的几种文本数据分析方法\n<ul>\n<li>标签数量分布</li>\n<li>句子长度分布</li>\n<li>词频统计与关键词词云</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"文本特征处理\"><a class=\"anchor\" href=\"#文本特征处理\">#</a> 文本特征处理</h1>\n<h2 id=\"作用-2\"><a class=\"anchor\" href=\"#作用-2\">#</a> 作用</h2>\n<p>文本特征处理包括为语料添加具有普适性的文本特征，如：n-gram 特征，以及对加入特征之后的文本语料进行必要的处理，如：长度规范。这些特征处理工作能够有效的将重要的文本特征加入模型训练中，增强模型评估指标。</p>\n<ul>\n<li>常见的文本特征处理方法\n<ul>\n<li>添加 n-gram 特征</li>\n<li>文本长度规范</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"n-gram特征\"><a class=\"anchor\" href=\"#n-gram特征\">#</a> n-gram 特征</h3>\n<blockquote>\n<p>给定一段文本序列，其中 n 个词或字的相邻共现特征即 n-gram 特征，常用的 n-gram 特征是 bigram 和 tri-gram 特征，分别对应 n 为 2 和 3。</p>\n</blockquote>\n<h3 id=\"文本长度规范及其作用padding函数\"><a class=\"anchor\" href=\"#文本长度规范及其作用padding函数\">#</a> 文本长度规范及其作用（padding 函数）</h3>\n<p>一般模型的输入需要等尺寸大小的矩阵，因此在进入模型前需要对每条文本数值映射后的<br />\n长度进行规范，此时将根据句子长度分布分析出覆盖绝大多数文本的合理长度，对超长文本进行截断，对不足文本进行补齐（一般使用数字 0），这个过程就是仪本长度规范。</p>\n<h1 id=\"文本数据增强\"><a class=\"anchor\" href=\"#文本数据增强\">#</a> 文本数据增强</h1>\n<blockquote>\n<p>常见的文本数据增强方法：回译数据增强法</p>\n</blockquote>\n<h2 id=\"回译数据增强法\"><a class=\"anchor\" href=\"#回译数据增强法\">#</a> 回译数据增强法</h2>\n<p>回译数据增强目前是文本数据增强方面效果较好的增强方法，一般基于 goog 翻译接口，将文本数据翻译成另外一种语言（一般选择小语种），之后再翻译回原语言，即可认为得到与与原语料同标签的新语料，新语料加入到原数据集中即可认为是对原数据集数据增强。</p>\n<blockquote>\n<p>优势：操作简便，获得新语料质量高。</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>问题\n<ul>\n<li>在短文本回译过程中，新语料与原语料可能存在很高的重复率，并不能有效增大样本的特征空间。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>解决办法\n<ul>\n<li>进行连续的多语言翻译，如：中文 -&gt; 韩文一 &gt; 日语 -&gt; 英文 -&gt; 中文，根据经验，最多只采用 3 次连续翻译，更多的翻译次数将产生效率低下，语义失真等问题。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n","categories":["NER"],"tags":["NER"]},{"title":"什么是预训练（Transformer 前奏）","url":"/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/03%20%E4%BB%80%E4%B9%88%E6%98%AF%E9%A2%84%E8%AE%AD%E7%BB%83%EF%BC%88Transformer%20%E5%89%8D%E5%A5%8F%EF%BC%89/","content":"<h1 id=\"预训练有什么用\"><a class=\"anchor\" href=\"#预训练有什么用\">#</a> 预训练有什么用</h1>\n<p>机器学习：偏数学（《统计学习方法》- 李航）</p>\n<p>深度学习（人工智能）的项目：大数据支持（主流）</p>\n<p>我们很多项目没有大数据支持（小数据）</p>\n<p>猫狗分类任务：100 张猫和狗的图片 --》给你一张图片，分出是猫还是狗（无法解决的一个问题，精度很低）</p>\n<p>100000 张鹅和鸭的图片（已知，有人做过的，通过这 10w 张图片做了一个模型 A）</p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E5%9B%BE%E5%83%8F%E9%A2%84%E8%AE%AD%E7%BB%83%E7%A4%BA%E4%BE%8B.jpg\" alt=\"img\" /></p>\n<p>有人发现，浅层通用的（横竖撇捺）</p>\n<p>我通过 10w 个鹅和鸭训练了一个模型 A，100 层的 CNN</p>\n<p>任务 B：100 张猫和狗的图片，分类 --》 训练处 100 层的 CNN，不可能实现的</p>\n<p>尝试使用 A 的前 50 层，使用 100 层去完成任务 B</p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E9%A2%84%E8%AE%AD%E7%BB%83%E7%9A%84%E5%BA%94%E7%94%A8.jpg\" alt=\"img\" /></p>\n<ol>\n<li>冻结：浅层参数不变</li>\n<li>微调：浅层参数会跟着任务 B 训练而改变</li>\n</ol>\n<h1 id=\"预训练是什么\"><a class=\"anchor\" href=\"#预训练是什么\">#</a> 预训练是什么</h1>\n<p>通过一个已经训练好的模型 A，去完成一个小数据量的任务 B（使用了模型 A 的浅层参数）</p>\n<p>任务 A 和任务 B 极其相似</p>\n<h1 id=\"预训练怎么用\"><a class=\"anchor\" href=\"#预训练怎么用\">#</a> 预训练怎么用</h1>\n<p>fairseq 、transformers 库</p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>一个任务 A，一个任务 B，两者极其相似，任务 A 已经训练处一个模型 A，使用模型 A 的浅层参数去训练任务 B，得到模型 B，1.</p>\n","categories":["NER"],"tags":["NER"]},{"title":"统计语言模型（n元语言模型）","url":"/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/04%20%E7%BB%9F%E8%AE%A1%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%EF%BC%88n%E5%85%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%EF%BC%89/","content":"<h1 id=\"预训练\"><a class=\"anchor\" href=\"#预训练\">#</a> 预训练</h1>\n<p>预先训练</p>\n<p>我们有两个相似的任务 A 和 B，任务 A 已经完成了得到了一个模型 A</p>\n<p>任务 B（数据量小）</p>\n<p>用到了一个特性：CNN 浅层参数通用</p>\n<p>任务 B 就可以使用模型 A 的浅层参数，后面的参数通过任务 B 训练 --》1. 冻结（浅层参数不变）2. 微调（变）</p>\n<p>任务 B（大数据）可以训练出模型 B（我还可以使用模型 A 的浅层参数，节省训练时间，节省成本）</p>\n<h1 id=\"统计语言模型\"><a class=\"anchor\" href=\"#统计语言模型\">#</a> 统计语言模型</h1>\n<h2 id=\"语言模型\"><a class=\"anchor\" href=\"#语言模型\">#</a> 语言模型</h2>\n<p>语言（人说的话）+ 模型（表示某个东西，完成某个任务）</p>\n<ol>\n<li>P (“判断这个词的词性”)，P (“判断这个词的磁性”)</li>\n<li>“判断这个词的 <code>______</code> ”</li>\n</ol>\n<h2 id=\"统计语言模型-2\"><a class=\"anchor\" href=\"#统计语言模型-2\">#</a> 统计语言模型</h2>\n<p>用统计的方法去解决上述两个问题</p>\n<p>“判断这个词的词性” = “判断”，“这个”，“词”，“的”，“词性”</p>\n<p>这句话是序列（有顺序的）</p>\n<p>用了一个条件概率的链式法则（概率论）</p>\n<p>![image-20220611203051818](../../Library/Application Support/typora-user-images/image-20220611203051818.png)</p>\n<p>通过这个法则，我们可以求出每一个词出现的概率，然后连乘，就是这句话出现的概率</p>\n<p>解决第二个问题：</p>\n<p>“判断这个词的 <code>__</code> ”</p>\n<p>P (w_next | “判断”，“这个”，“词”，“的”)  （1）</p>\n<p>词库（词典）V--》新华字典，高处一个集合，把所有词装到集合 V 里</p>\n<p>把集合里的每一个词，都进行上一步（1）的计算</p>\n<p “词性”，=\"\" “火星”=\"\">词库 V =</p>\n<p>P (词性 | “判断”，“这个”，“词”，“的”)</p>\n<p>P (火星 | “判断”，“这个”，“词”，“的”)</p>\n<p>P (词性 | “判断”，“这个”，“词”，“的”，……， “……”)</p>\n<p>![image-20220611203813910](../../Library/Application Support/typora-user-images/image-20220611203813910.png)</p>\n<h2 id=\"n-元统计语言模型\"><a class=\"anchor\" href=\"#n-元统计语言模型\">#</a> n 元统计语言模型</h2>\n<p>P (词性 |“这个”，“词”，“的”)</p>\n<p>P (火星 | “这个”，“词”，“的”)</p>\n<p>P (词性 |“词”，“的”)</p>\n<p>P (火星 |“词”，“的”)</p>\n<p>P (词性 |“的”)</p>\n<p>P (火星 |“的”)</p>\n<p>把 n 个词，取 2 个词（2 元），取 3 个词（3 元）</p>\n<h1 id=\"如何去计算\"><a class=\"anchor\" href=\"#如何去计算\">#</a> 如何去计算</h1>\n<figure class=\"highlight basic\"><figcaption data-lang=\"BASIC\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>“词性是动词”</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>“判断单词的词性”</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>“磁性很强的磁铁”</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>“北京的词性是名词”</pre></td></tr></table></figure><p 3=\"\">𝑃(词性 | 的) = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mtext>词性，的</mtext><mo stretchy=\"false\">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mtext>的</mtext><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{cout(词性，的)}{count(的)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mopen mtight\">(</span><span class=\"mord cjk_fallback mtight\">的</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mopen mtight\">(</span><span class=\"mord cjk_fallback mtight\">词</span><span class=\"mord cjk_fallback mtight\">性</span><span class=\"mord cjk_fallback mtight\">，</span><span class=\"mord cjk_fallback mtight\">的</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> = \\frac{2}</p>\n<h1 id=\"平滑策略\"><a class=\"anchor\" href=\"#平滑策略\">#</a> 平滑策略</h1>\n<p 0=\"\">P (策略 | 平滑) = \\frac{0}</p>\n<p>![image-20220611204401168](../../Library/Application Support/typora-user-images/image-20220611204401168.png)</p>\n<h1 id=\"统计语言模型-3\"><a class=\"anchor\" href=\"#统计语言模型-3\">#</a> 统计语言模型</h1>\n<p>语言模型：计算一句话的概率，计算下一个词可能是什么</p>\n<p>统计语言模型：统计的方法去解决语言模型的问题（条件概率）</p>\n<p>a 元语言模型：只取 a 个词（马尔科夫链）</p>\n<p>平滑策略：</p>\n<h1 id=\"下节课神经网络语言模型\"><a class=\"anchor\" href=\"#下节课神经网络语言模型\">#</a> 下节课：神经网络语言模型</h1>\n<p>统计语言模型：神经网络的方法去解决语言模型的问题</p>\n","categories":["NER"],"tags":["NER"]},{"title":"神经网络语言模型（独热编码+词向量的起源）","url":"/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/05%20%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%EF%BC%88%E7%8B%AC%E7%83%AD%E7%BC%96%E7%A0%81+%E8%AF%8D%E5%90%91%E9%87%8F%E7%9A%84%E8%B5%B7%E6%BA%90%EF%BC%89/","content":"<h1 id=\"统计语言模型\"><a class=\"anchor\" href=\"#统计语言模型\">#</a> 统计语言模型</h1>\n<p>统计 + 语言模型 --》用统计的方法去完成以下两个和人说的话相关的任务</p>\n<p>语言模型 = 语言（人说的话） + 模型（去完成两个任务）</p>\n<ol>\n<li>比较，“词性”，“磁性”</li>\n<li>预测下一个单词（填空）</li>\n</ol>\n<h2 id=\"n-元语言模型\"><a class=\"anchor\" href=\"#n-元语言模型\">#</a> n 元语言模型</h2>\n<p>取 a（2，3，4） 个词</p>\n<h1 id=\"神经网络语言模型\"><a class=\"anchor\" href=\"#神经网络语言模型\">#</a> 神经网络语言模型</h1>\n<p>神经网络 + 语言模型 --》用神经网络的方法去完成以下两个和人说的话相关的任务。</p>\n<p>第二个任务：</p>\n<p>“判断”，“一个”，“词”，“的”，“ <code>___</code> ”</p>\n<p>假设词库里有 “词性” 和 “火星”</p>\n<p>P( <code>__</code> |“判断”，“一个”，“词”，“的”)</p>\n<p>词性</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNyVBNSU5RSVFNyVCQiU4RiVFNyVCRCU5MSVFNyVCQiU5QyVFOCVBRiVBRCVFOCVBOCU4MCVFNiVBOCVBMSVFNSU5RSU4Qi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 神经网络语言模型.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n<p>w1,w2,w3,w4（上述 4 个单词的独热编码）</p>\n<pre><code>w1*Q=c1,\nw2*Q=c2,\nw3*Q=c3,\nw4*Q=c4,\n\nC=[c1,c2,c3,c4]\nQ就是一个随机矩阵，是一个参数（可学习）\n</code></pre>\n<p>“判断”，“这个”，“词”，“的”，“词性”</p>\n<p>softmax（U[tanh(WC+b1)]+b2）== [0.1, 0.1, 0.2, 0.2, 0.4] <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>1</mn><mo separator=\"true\">,</mo><msub><mi>V</mi><mi>L</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\in[1,V_L]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></p>\n<h2 id=\"独热编码-one-hot-编码\"><a class=\"anchor\" href=\"#独热编码-one-hot-编码\">#</a> 独热编码 （one-hot 编码）</h2>\n<p>独热编码：让计算机认识单词</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNSU4RCU5NSVFOCVBRiU4RCVFNyU5QSU4NCVFNyU4QiVBQyVFNyU4MyVBRCVFOCVBMSVBOCVFNyVBNCVCQS5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 单词的独热表示.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>词典 V（新华字典里面把所有词集合成一个集合 V）</p>\n<p>假设词典里面只有 8 个单词</p>\n<p>计算机不认识单词的</p>\n<p>但是我们要计算机认识单词</p>\n<p>“fruit”</p>\n<p>独热编码：给出一个 8*8 的矩阵</p>\n<p>“time” --》 10000000</p>\n<p>“fruit” --》 01000000</p>\n<p>“banana” --》 00000001</p>\n<p>余弦相似度 去计算两者的相似度（0）-- 词向量（矩阵乘法）</p>\n<h1 id=\"词向量神经网络语言模型的副产品-q\"><a class=\"anchor\" href=\"#词向量神经网络语言模型的副产品-q\">#</a> 词向量（神经网络语言模型的副产品 Q）</h1>\n<p>给我任何一个词，</p>\n<p>“判断” --》 独热编码 w1 [1,0,0,0,0]</p>\n<p>w1*Q =c1  （“判断” 这个词的词向量）</p>\n<p>词向量：就是用一个向量来表示一个单词</p>\n<p>可以控制词向量的维度（大小）</p>\n<p>如果我们得到的词向量，第一个问题也被解决了，（下游任务）</p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>神经网络语言模型：通过神经网络解决两个人说的话的问题</p>\n<p>有一个副产品：Q 矩阵 --》新的词向量（词向量可以选择词向量的维度，可以求两个词之间的相似程度）</p>\n<p>下游任务</p>\n","categories":["NER"],"tags":["NER"]},{"title":"Word2Vec模型（第一个专门做词向量的模型，CBOW和Skip-gram）","url":"/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/06%20Word2Vec%E6%A8%A1%E5%9E%8B%EF%BC%88%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%93%E9%97%A8%E5%81%9A%E8%AF%8D%E5%90%91%E9%87%8F%E7%9A%84%E6%A8%A1%E5%9E%8B%EF%BC%8CCBOW%E5%92%8CSkip-gram%EF%BC%89/","content":"<h1 id=\"神经网络语言模型nnlm-为了预测下一个词\"><a class=\"anchor\" href=\"#神经网络语言模型nnlm-为了预测下一个词\">#</a> 神经网络语言模型（NNLM）--》为了预测下一个词</h1>\n<p>NNLM（）--》预测下一个词</p>\n<p>神经网络 + 语言模型：用神经网络去解决和人说话有关的两个任务的一个东西</p>\n<p>softmax(w2(tanh(（w1x+b1）))+b2)</p>\n<p>得到一个副产品（词向量）</p>\n<p>Q 矩阵，对于任何一个独热编码的词向量都可以通过 Q 矩阵得到新的词向量</p>\n<ol>\n<li>可以转换维度</li>\n<li>相似词之间的词向量之间也有了关系</li>\n</ol>\n<h1 id=\"word2vec-为了得到词向量\"><a class=\"anchor\" href=\"#word2vec-为了得到词向量\">#</a> Word2Vec --》 为了得到词向量</h1>\n<p>神经网络语言模型 --》主要目的就是为了得到词向量</p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B.jpg\" alt=\"img\" /></p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/word2vec.jpg\" alt=\"img\" /></p>\n<p>NNLM 和 Word2Vec 基本一致（一模一样），不考虑细节，网络架构就是一模一样</p>\n<h2 id=\"cbow\"><a class=\"anchor\" href=\"#cbow\">#</a> CBOW</h2>\n<p>给出一个词的<mark>上下文</mark>，得到这个词</p>\n<p>“我是最 <code>_</code> 的 Nick”</p>\n<p>“帅” <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<h2 id=\"skip-gram\"><a class=\"anchor\" href=\"#skip-gram\">#</a> Skip-gram</h2>\n<p>给出一个词，得到这个词的上下文</p>\n<p>“帅”</p>\n<p>“我是 <code>_</code> 的 Nick”</p>\n<h1 id=\"nnlm-和-word2vec-的区别\"><a class=\"anchor\" href=\"#nnlm-和-word2vec-的区别\">#</a> NNLM 和 Word2Vec 的区别</h1>\n<p>NNNL --》 重点是预测下一词，双层感知机 softmax (w2 (tanh (（w1 (xQ)+b1）))+b2)</p>\n<p>Word2Vec --》 CBOW 和 Skip-gram 的两种架构的重点都是得到一个 Q 矩阵，softmax (w1 (xQ) +b1)</p>\n<ol>\n<li>CBOW：一个老师告诉多个学生，Q 矩阵怎么变</li>\n<li>Skip：多个老师告诉一个学生，Q 矩阵怎么变</li>\n</ol>\n<h1 id=\"word2vec的缺点\"><a class=\"anchor\" href=\"#word2vec的缺点\">#</a> Word2Vec 的缺点</h1>\n<p>Q 矩阵的设计</p>\n<p>![image-20220614193540503](../../Library/Application Support/typora-user-images/image-20220614193540503.png)</p>\n<p>00010 代表 apple × Q = 10，12，19</p>\n<p>apple（苹果，）</p>\n<p>假设数据集里面的 apple 只有苹果这个意思，没有这个意思（训练）</p>\n<p>（测试，应用）10，12，19 apple, 无法表示这个意思</p>\n<p>词向量不能进行多意 ---》 ELMO</p>\n","categories":["NER"],"tags":["NER"]},{"title":"预训练语言模型的前世今生","url":"/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/00%20%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E5%85%A8%E6%96%87%2024854%20%E4%B8%AA%E8%AF%8D%EF%BC%89/","content":"<p>&lt;h1 style='text-align:center;'&gt; 预训练语言模型的前世今生 - 从 Word Embedding 到 BERT&lt;/h1&gt;</p>\n<p>本篇文章共 25027 个词，一个字一个字手码的不容易，转载请标明出处：<br />\n&lt;a href='<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbmlja2NoZW4xMjEvcC8xNTEwNTA0OC5odG1s\">https://www.cnblogs.com/nickchen121/p/15105048.html</span>'&gt; 预训练语言模型的前世今生 - 从 Word Embedding 到 BERT - 二十三岁的有德 &lt;/a&gt;</p>\n<p>[TOC]</p>\n<p>Bert 最近很火，应该是最近最火爆的 AI 进展，网上的评价很高，从模型创新角度看一般，创新不算大。但是架不住效果太好了，基本刷新了很多 NLP 的任务的最好性能，有些任务还被刷爆了，这个才是关键。另外一点是 Bert 具备广泛的通用性，就是说绝大部分 NLP 任务都可以采用类似的两阶段模式直接去提升效果，这个第二关键。客观的说，把 Bert 当做最近两年 NLP 重大进展的集大成者更符合事实。</p>\n<p>本文的主题是预训练语言模型的前世今生，会大致说下 NLP 中的预训练技术是一步一步如何发展到 Bert 模型的，从中可以很自然地看到 Bert 的思路是如何逐渐形成的，Bert 的历史沿革是什么，继承了什么，创新了什么，为什么效果那么好，主要原因是什么，以及为何说模型创新不算太大，为何说 Bert 是近年来 NLP 重大进展的集大成者。</p>\n<p>预训练语言模型的发展并不是一蹴而就的，而是伴随着诸如词嵌入、序列到序列模型及 Attention 的发展而产生的。</p>\n<p>DeepMind 的计算机科学家 Sebastian Ruder 给出了 21 世纪以来，从神经网络技术的角度分析，自然语言处理的里程碑式进展，如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>年份</th>\n<th>2013 年</th>\n<th>2014 年</th>\n<th>2015 年</th>\n<th>2016 年</th>\n<th>2017 年</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>技术</td>\n<td>word2vec</td>\n<td>GloVe</td>\n<td>LSTM/Attention</td>\n<td>Self-Attention</td>\n<td>Transformer</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>年份</td>\n<td>2018 年</td>\n<td>2019 年</td>\n<td>2020 年</td>\n</tr>\n<tr>\n<td>----</td>\n<td>-----------------</td>\n<td>----------------------------</td>\n<td>--------------------</td>\n</tr>\n<tr>\n<td>技术</td>\n<td>GPT/ELMo/BERT/GNN</td>\n<td>XLNet/BoBERTa/GPT-2/ERNIE/T5</td>\n<td>GPT-3/ELECTRA/ALBERT</td>\n</tr>\n</tbody>\n</table>\n<p>本篇文章将会通过上表显示的 NLP 中技术的发展史一一叙述，由于 19 年后的技术大都是 BERT 的变体，在这里不会多加叙述，读者可以自行加以了解。</p>\n<h1 id=\"一-预训练\"><a class=\"anchor\" href=\"#一-预训练\">#</a> 一、预训练</h1>\n<h2 id=\"11-图像领域的预训练\"><a class=\"anchor\" href=\"#11-图像领域的预训练\">#</a> 1.1 图像领域的预训练</h2>\n<p>在介绍图像领域的预训练之前，我们首先介绍下卷积神经网络（CNN），CNN 一般用于图片分类任务，并且 CNN 由多个层级结构组成，不同层学到的图像特征也不同，<strong>越浅的层学到的特征越通用（横竖撇捺），越深的层学到的特征和具体任务的关联性越强（人脸 - 人脸轮廓、汽车 - 汽车轮廓）</strong>，如下图所示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNSU5QiVCRSVFNSU4MyU4RiVFOSVBMiU4NCVFOCVBRSVBRCVFNyVCQiU4MyVFNyVBNCVCQSVFNCVCRSU4Qi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 图像预训练示例.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>由此，当领导给我们一个任务：阿猫、阿狗、阿虎的图片各十张，然后让我们设计一个深度神经网络，通过该网络把它们三者的图片进行分类。</p>\n<p>对于上述任务，如果我们亲手设计一个深度神经网络基本是不可能的，<strong>因为深度学习一个弱项就是在训练阶段对于数据量的需求特别大</strong>，而领导只给我们合计三十张图片，显然这是不够的。</p>\n<p>虽然领导给我们的数据量很少，<strong>但是我们是否可以利用网上现有的大量已做好分类标注的图片</strong>。比如 ImageNet 中有 1400 万张图片，并且这些图片都已经做好了分类标注。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFOSVBMiU4NCVFOCVBRSVBRCVFNyVCQiU4MyVFNyU5QSU4NCVFNSVCQSU5NCVFNyU5NCVBOC5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 预训练的应用.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>上述利用网络上现有图片的思想就是预训练的思想，具体做法就是：</p>\n<ol>\n<li>通过 ImageNet 数据集我们训练出一个模型 A</li>\n<li>由于上面提到 CNN 的浅层学到的特征通用性特别强，我们可以对模型 A 做出一部分改进得到模型 B（两种方法）：\n<ol>\n<li>冻结：浅层参数使用模型 A 的参数，高层参数随机初始化，<strong>浅层参数一直不变</strong>，然后利用领导给出的 30 张图片训练参数</li>\n<li>微调：浅层参数使用模型 A 的参数，高层参数随机初始化，然后利用领导给出的 30 张图片训练参数，<strong>但是在这里浅层参数会随着任务的训练不断发生变化</strong></li>\n</ol>\n</li>\n</ol>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFOSVBMiU4NCVFOCVBRSVBRCVFNyVCQiU4MyVFNSU5QyVBOCVFNSU5QiVCRSVFNSU4MyU4RiVFOSVBMiU4NiVFNSU5RiU5RiVFNyU5QSU4NCVFNSVCQSU5NCVFNyU5NCVBOC5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 预训练在图像领域的应用.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>通过上述的讲解，对图像预训练做个总结（可参照上图）：对于一个具有少量数据的任务 A，首先通过一个现有的大量数据搭建一个 CNN 模型 A，由于 CNN 的浅层学到的特征通用性特别强，因此在搭建一个 CNN 模型 B，其中模型 B 的浅层参数使用模型 A 的浅层参数，模型 B 的高层参数随机初始化，然后通过冻结或微调的方式利用任务 A 的数据训练模型 B，模型 B 就是对应任务 A 的模型。</p>\n<h2 id=\"12-预训练的思想\"><a class=\"anchor\" href=\"#12-预训练的思想\">#</a> 1.2 预训练的思想</h2>\n<p>有了图像领域预训练的引入，我们在此给出预训练的思想：任务 A 对应的模型 A 的参数不再是随机初始化的，而是通过任务 B 进行预先训练得到模型 B，然后利用模型 B 的参数对模型 A 进行初始化，再通过任务 A 的数据对模型 A 进行训练。注：模型 B 的参数是随机初始化的。</p>\n<h1 id=\"二-语言模型\"><a class=\"anchor\" href=\"#二-语言模型\">#</a> 二、语言模型</h1>\n<p>想了解预训练语言模型，首先得了解什么是语言模型。</p>\n<p>语言模型通俗点讲就是 ** 计算一个句子的概率。** 也就是说，对于语言序列 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_1,w_2,\\cdots,w_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，语言模型就是计算该序列的概率，即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(w_1,w_2,\\cdots,w_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>下面通过两个实例具体了解上述所描述的意思：</p>\n<ol>\n<li>假设给定两句话 “判断这个词的磁性” 和 “判断这个词的词性”，语言模型会认为后者更自然。转化成数学语言也就是：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mtext>判断，这个，词，的，词性</mtext><mo stretchy=\"false\">)</mo><mo>&gt;</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mtext>判断，这个，词，的，磁性</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(判断，这个，词，的，词性) \\gt P(判断，这个，词，的，磁性)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">判</span><span class=\"mord cjk_fallback\">断</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">性</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">判</span><span class=\"mord cjk_fallback\">断</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">磁</span><span class=\"mord cjk_fallback\">性</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>假设给定一句话做填空 “判断这个词的____”，则问题就变成了给定前面的词，找出后面的一个词是什么，转化成数学语言就是：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mtext>词性</mtext><mi mathvariant=\"normal\">∣</mi><mtext>判断，这个，词，的</mtext><mo stretchy=\"false\">)</mo><mo>&gt;</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mtext>磁性</mtext><mi mathvariant=\"normal\">∣</mi><mtext>判断，这个，词，的</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(词性|判断，这个，词，的) \\gt P(磁性|判断，这个，词，的)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">性</span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">判</span><span class=\"mord cjk_fallback\">断</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">的</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">磁</span><span class=\"mord cjk_fallback\">性</span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">判</span><span class=\"mord cjk_fallback\">断</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">的</span><span class=\"mclose\">)</span></span></span></span></li>\n</ol>\n<p>通过上述两个实例，可以给出语言模型更加具体的描述：给定一句由 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个词组成的句子 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">W=w_1,w_2,\\cdots,w_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，计算这个句子的概率 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(w_1,w_2,\\cdots,w_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，或者计算根据上文计算下一个词的概率 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>n</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(w_n|w_1,w_2,\\cdots,w_{n-1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>下面将介绍语言模型的两个分支，统计语言模型和神经网络语言模型。</p>\n<h2 id=\"21-统计语言模型\"><a class=\"anchor\" href=\"#21-统计语言模型\">#</a> 2.1 统计语言模型</h2>\n<p>统计语言模型的基本思想就是<strong>计算条件概率</strong>。</p>\n<p>给定一句由 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个词组成的句子 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">W=w_1,w_2,\\cdots,w_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，计算这个句子的概率 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(w_1,w_2,\\cdots,w_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 的公式如下（条件概率乘法公式的推广，链式法则）：</p>\n\\begin{align*}\nP(w_1,w_2,\\cdots,w_n) \n& =  P(w_1)P(w_2|w_1)P(w_3|w_1,w_2)\\cdots p(w_n|w_1,w_2,\\cdots,w_{n-1}) \\\\\n& = \\prod_i P(w_i|w1,w_2,\\cdots,w_{i-1})\n\\end{align*}\n\n<p>对于上一节提到的 “判断这个词的词性” 这句话，利用上述的公式，可以得到：</p>\n\\begin{align*}\n& P(判断，这个，词，的，词性) = \\\\\n& P(判断)P(这个|判断)P(词|判断，这个) \\\\\n& P(的|判断，这个，词)P(词性|判断，这个，词，的)P(判断，这个，词，的，词性)\n\\end{align*}\n\n<p>对于上一节提到的另外一个问题，当给定前面词的序列 “判断，这个，词，的” 时，想要知道下一个词是什么，可以直接计算如下概率：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mi mathvariant=\"normal\">∣</mi><mtext>判断，这个，词，的</mtext><mo stretchy=\"false\">)</mo><mspace width=\"1em\"/><mtext>公式(1)</mtext></mrow><annotation encoding=\"application/x-tex\">P(w_{next}|判断，这个，词，的)\\quad\\text{公式(1)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">判</span><span class=\"mord cjk_fallback\">断</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">的</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">公式</span><span class=\"mord\">(1)</span></span></span></span></span></span></p>\n<p>其中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mo>∈</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">w_{next} \\in V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> 表示词序列的下一个词，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> 是一个具有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>V</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|V|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord\">∣</span></span></span></span> 个词的词典（词集合）。</p>\n<p>对于公式（1），可以展开成如下形式：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mi mathvariant=\"normal\">∣</mi><mtext>判断，这个，词，的</mtext><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mtext>，判断，这个，词，的</mtext><mo stretchy=\"false\">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mtext>判断，这个，词，的</mtext><mo stretchy=\"false\">)</mo></mrow></mfrac><mspace width=\"1em\"/><mtext>公式(2)</mtext></mrow><annotation encoding=\"application/x-tex\">P(w_{next}|判断，这个，词，的) = \\frac{count(w_{next}，判断，这个，词，的)}{count(判断，这个，词，的)} \\quad\\text{公式(2)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">判</span><span class=\"mord cjk_fallback\">断</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">的</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">判</span><span class=\"mord cjk_fallback\">断</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">的</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">判</span><span class=\"mord cjk_fallback\">断</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">的</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">公式</span><span class=\"mord\">(2)</span></span></span></span></span></span></p>\n<p>对于公式（2），可以把字典 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> 中的多有单词，逐一作为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">w_{next}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，带入计算，最后取最大概率的词作为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">w_{next}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的候选词。</p>\n<p>如果 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>V</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|V|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord\">∣</span></span></span></span> 特别大，公式（2）的计算将会非常困难，但是我们可以引入马尔科夫链的概念（当然，在这里只是简单讲讲如何做，关于马尔科夫链的数学理论知识可以自行查看其他参考资料）。</p>\n<p>假设字典 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> 中有 “火星” 一词，可以明显发现 “火星” 不可能出现在 “判断这个词的” 后面，因此（火星，判断，这个，词，的）这个组合是不存在的，并且词典中会存在很多类似于 “火星” 这样的词。</p>\n<p>进一步，可以发现我们把（火星，判断，这个，词，的）这个组合判断为不存在，是因为 “火星” 不可能出现在 “词的” 后面，也就是说我们可以考虑是否把公式（1）转化为</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mi mathvariant=\"normal\">∣</mi><mtext>判断，这个，词，的</mtext><mo stretchy=\"false\">)</mo><mo>≈</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub><mi mathvariant=\"normal\">∣</mi><mtext>词，的</mtext><mo stretchy=\"false\">)</mo><mspace width=\"1em\"/><mtext>公式(3)</mtext></mrow><annotation encoding=\"application/x-tex\">P(w_{next}|判断，这个，词，的) \\approx P(w_{next}|词，的)\\quad\\text{公式(3)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">判</span><span class=\"mord cjk_fallback\">断</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">的</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">的</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">公式</span><span class=\"mord\">(3)</span></span></span></span></span></span></p>\n<p>公式（3）就是马尔科夫链的思想：假设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">w_{next}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 只和它之前的 <strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个词有相关性</strong>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 时称作一个单元语言模型，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">k=2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 时称为二元语言模型。</p>\n<p>可以发现通过马尔科夫链后改写的公式计算起来将会简单很多，下面我们举个简单的例子介绍下如何计算一个二元语言模型的概率。</p>\n<p>其中二元语言模型的公式为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow></mfrac><mspace width=\"1em\"/><mtext>公式(4)</mtext></mrow><annotation encoding=\"application/x-tex\">P(w_i|w_{i-1})=\\frac{count(w_{i-1},w_i)}{count(w_{i-1})}\\quad\\text{公式(4)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">公式</span><span class=\"mord\">(4)</span></span></span></span></span></span></p>\n<p>假设有一个文本集合：</p>\n<figure class=\"highlight basic\"><figcaption data-lang=\"BASIC\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>“词性是动词”</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>“判断单词的词性”</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>“磁性很强的磁铁”</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>“北京的词性是名词”</pre></td></tr></table></figure><p>对于上述文本，如果要计算 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mtext>词性</mtext><mi mathvariant=\"normal\">∣</mi><mtext>的</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(词性|的)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">性</span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">的</span><span class=\"mclose\">)</span></span></span></span> 的概率，通过公式（4），需要统计 “的，词性” 同时按序出现的次数，再除以 “的” 出现的次数：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mtext>词性</mtext><mi mathvariant=\"normal\">∣</mi><mtext>的</mtext><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mtext>的，词性</mtext><mo stretchy=\"false\">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mtext>的</mtext><mo stretchy=\"false\">)</mo></mrow></mfrac><mo>=</mo><mfrac><mn>2</mn><mn>3</mn></mfrac><mspace width=\"1em\"/><mtext>公式(5)</mtext></mrow><annotation encoding=\"application/x-tex\">P(词性|的) = \\frac{count(的，词性)}{count(的)} = \\frac{2}{3}\\quad\\text{公式(5)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">性</span><span class=\"mord\">∣</span><span class=\"mord cjk_fallback\">的</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">的</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">词</span><span class=\"mord cjk_fallback\">性</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">公式</span><span class=\"mord\">(5)</span></span></span></span></span></span></p>\n<p>上述文本集合是我们自定制的，然而对于绝大多数具有现实意义的文本，会出现数据稀疏的情况，例如<strong>训练时未出现，测试时出现了的未登录单词</strong>。</p>\n<p>由于数据稀疏问题，则会出现概率值为 0 的情况（填空题将无法从词典中选择一个词填入），为了避免 0 值的出现，会使用一种平滑的策略 —— 分子和分母都加入一个非 0 正数，例如可以把公式（4）改为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mn>1</mn></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mi mathvariant=\"normal\">∣</mi><mi>V</mi><mi mathvariant=\"normal\">∣</mi></mrow></mfrac><mspace width=\"1em\"/><mtext>公式(6)</mtext></mrow><annotation encoding=\"application/x-tex\">P(w_i|w_{i-1}) = \\frac{count(w_{i-1},w_i)+1}{count(w_{i-1})+|V|}\\quad\\text{公式(6)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord\">∣</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">公式</span><span class=\"mord\">(6)</span></span></span></span></span></span></p>\n<p>##2.2 神经网络语言模型</p>\n<p>上一节简单的介绍了统计语言模型，并且在结尾处讲到统计语言模型存在数据稀疏问题，针对该问题，我们也提出了平滑方法来应对这个问题。</p>\n<p>神经网络语言模型则引入神经网络架构来估计单词的分布，<strong>并且通过词向量的距离衡量单词之间的相似度，因此，对于未登录单词，也可以通过相似词进行估计，进而避免出现数据稀疏问题</strong>。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNyVBNSU5RSVFNyVCQiU4RiVFNyVCRCU5MSVFNyVCQiU5QyVFOCVBRiVBRCVFOCVBOCU4MCVFNiVBOCVBMSVFNSU5RSU4Qi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 神经网络语言模型.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>上图为神经网络语言模型结构图，它的学习任务是输入某个句中单词 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>t</mi></msub><mo>=</mo><mi>b</mi><mi>e</mi><mi>r</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">w_t = bert</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span></span></span></span> 前的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">t-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个单词，要求网络正确预测单词 “bert”，即最大化：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>t</mi></msub><mo>=</mo><mi>b</mi><mi>e</mi><mi>r</mi><mi>t</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">;</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mspace width=\"1em\"/><mtext>公式(7)</mtext></mrow><annotation encoding=\"application/x-tex\">P(w_t=bert|w_1,w_2,\\cdots,w_{t-1};\\theta)\\quad\\text{公式(7)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">公式</span><span class=\"mord\">(7)</span></span></span></span></span></span></p>\n<p>上图所示的神经网络语言模型分为三层，接下来我们详细讲解这三层的作用：</p>\n<ol>\n<li>神经网络语言模型的第一层，为输入层。首先将前 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个单词用 Onehot 编码（例如：0001000）作为原始单词输入，之后乘以一个随机初始化的矩阵 Q 后获得词向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C(w_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，对这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个词向量处理后得到输入 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>，记作 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>C</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><mi>C</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x=(C(w_1),C(w_2),\\cdots,C(w_{t-1}))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>神经网络语言模型的第二层，为隐层，包含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span> 个隐变量，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span> 代表权重矩阵，因此隐层的输出为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mi>x</mi><mo>+</mo><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">Hx+d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span>，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span> 为偏置项。并且在此之后使用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">tanh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">h</span></span></span></span> 作为激活函数。</li>\n<li>神经网络语言模型的第三层，为输出层，一共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>V</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|V|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord\">∣</span></span></span></span>  个输出节点（字典大小），直观上讲，每个输出节点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">y_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是词典中每一个单词概率值。最终得到的计算公式为：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mi>W</mi><mi>x</mi><mo>+</mo><mi>U</mi><mi>tanh</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>d</mi><mo>+</mo><mi>H</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y = softmax(b+Wx+U\\tanh(d+Hx))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">tanh</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span>，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> 是直接从输入层到输出层的权重矩阵，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span> 是隐层到输出层的参数矩阵。</li>\n</ol>\n<h1 id=\"三-词向量\"><a class=\"anchor\" href=\"#三-词向量\">#</a> 三、词向量</h1>\n<p>在描述神经网络语言模型的时候，提到 Onehot 编码和词向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C(w_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，但是并没有具体提及他们到底是什么玩意。</p>\n<p>由于他们对于未来 BERT 的讲解非常重要，所以在这里重开一章来描述词向量到底是什么，如何表示。</p>\n<h2 id=\"31-独热onehot编码\"><a class=\"anchor\" href=\"#31-独热onehot编码\">#</a> 3.1 独热（Onehot）编码</h2>\n<p><strong>把单词用向量表示，是把深度神经网络语言模型引入自然语言处理领域的一个核心技术。</strong></p>\n<p>在自然语言处理任务中，训练集大多为一个字或者一个词，把他们转化为计算机适合处理的数值类数据非常重要。</p>\n<p>早期，人们想到的方法是使用独热（Onehot）编码，如下图所示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNSU4RCU5NSVFOCVBRiU4RCVFNyU5QSU4NCVFNyU4QiVBQyVFNyU4MyVBRCVFOCVBMSVBOCVFNyVBNCVCQS5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 单词的独热表示.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>对于上图的解释，假设有一个包含 8 个次的字典 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>，“time” 位于字典的第 1 个位置，“banana” 位于字典的第 8 个位置，因此，采用独热表示方法，对于 “time” 的向量来说，除了第 1 个位置为 1，其余位置为 0；对于 “banana” 的向量来说，除了第 8 个位置为 1，其余位置为 0。</p>\n<p>但是，对于独热表示的向量，如果采用余弦相似度计算向量间的相似度，<strong>可以明显的发现任意两者向量的相似度结果都为 0</strong>，即任意二者都不相关，也就是说独热表示无法解决词之间的相似性问题。</p>\n<h2 id=\"32-word-embedding\"><a class=\"anchor\" href=\"#32-word-embedding\">#</a> 3.2 Word Embedding</h2>\n<p>由于独热表示无法解决词之间相似性问题，这种表示很快就被词向量表示给替代了，这个时候聪明的你可能想到了在神经网络语言模型中出现的一个词向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C(w_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，对的，<strong>这个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C(w_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 其实就是单词对应的 Word Embedding 值，也就是我们这节的核心 —— 词向量。</strong></p>\n<p>在神经网络语言模型中，我们并没有详细解释词向量是如何计算的，现在让我们重看神经网络语言模型的架构图：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNyVBNSU5RSVFNyVCQiU4RiVFNyVCRCU5MSVFNyVCQiU5QyVFOCVBRiVBRCVFOCVBOCU4MCVFNiVBOCVBMSVFNSU5RSU4Qi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 神经网络语言模型.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>上图所示有一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo>×</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">V×m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 的矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span>，这个矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span> 包含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> 行，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> 代表词典大小，每一行的内容代表对应单词的 Word Embedding 值。</p>\n<p>只不过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span> 的内容也是网络参数，需要学习获得，训练刚开始用随机值初始化矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span>，当这个网络训练好之后，矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span> 的内容被正确赋值，每一行代表一个单词对应的 Word embedding 值。</p>\n<p>但是这个词向量有没有解决词之间的相似度问题呢？为了回答这个问题，我们可以看看词向量的计算过程：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>17</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>24</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>23</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>7</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>13</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>12</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>19</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>11</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>18</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>25</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>12</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>19</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mspace width=\"1em\"/><mtext>公式(8)</mtext></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix}\n0&amp;0&amp;0&amp;1&amp;0\n\\end{bmatrix}\n\n\\begin{bmatrix}\n17&amp;24&amp;1\\\\\n23&amp;5&amp;7\\\\\n4&amp;6&amp;13\\\\\n10&amp;12&amp;19\\\\\n11&amp;18&amp;25\n\\end{bmatrix}\n\n=\n\n\\begin{bmatrix}\n10&amp;12&amp;19\n\\end{bmatrix}\n\\quad\\text{公式(8)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.00503em;vertical-align:-2.75004em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2549900000000003em;\"><span style=\"top:-1.0499800000000006em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.1999800000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-2.79598em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.39198em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-3.9879800000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-4.0139700000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎢</span></span></span><span style=\"top:-5.25499em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75004em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2500000000000004em;\"><span style=\"top:-5.410000000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">7</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\">3</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span></span></span><span style=\"top:-1.8099999999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span style=\"top:-0.6099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2500000000000004em;\"><span style=\"top:-5.410000000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\">4</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">5</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">6</span></span></span><span style=\"top:-1.8099999999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">2</span></span></span><span style=\"top:-0.6099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">8</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2500000000000004em;\"><span style=\"top:-5.410000000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">7</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">3</span></span></span><span style=\"top:-1.8099999999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">9</span></span></span><span style=\"top:-0.6099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\">5</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2549900000000003em;\"><span style=\"top:-1.0499800000000006em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.1999800000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-2.79598em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.39198em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-3.9879800000000003em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-4.0139700000000005em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎥</span></span></span><span style=\"top:-5.25499em;\"><span class=\"pstrut\" style=\"height:3.1550000000000002em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75004em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20001em;vertical-align:-0.35001em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">9</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">公式</span><span class=\"mord\">(8)</span></span></span></span></span></span></p>\n<p>通过上述词向量的计算，可以发现第 4 个词的词向量表示为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>10</mn><mtext> </mtext><mn>12</mn><mtext> </mtext><mn>19</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[10\\,12\\,19]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">9</span><span class=\"mclose\">]</span></span></span></span>。</p>\n<p>如果再次采用余弦相似度计算两个词之间的相似度，结果不再是 0 ，既可以一定程度上描述两个词之间的相似度。</p>\n<p>下图给了网上找的几个例子，可以看出有些例子效果还是很不错的，一个单词表达成 Word Embedding 后，很容易找出语义相近的其它词汇。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3dvcmRlbWJlZGRpbmclRTQlQkUlOEIlRTUlQUQlOTAuanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/wordembedding 例子.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h1 id=\"四-word2vec-模型\"><a class=\"anchor\" href=\"#四-word2vec-模型\">#</a> 四、Word2Vec 模型</h1>\n<p>2013 年最火的用语言模型做 Word Embedding 的工具是 Word2Vec ，后来又出了 Glove（由于 Glove 和 Word2Vec 的作用类似，并对 BERT 的讲解没有什么帮助，之后不再多加叙述），Word2Vec 是怎么工作的呢？看下图：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3dvcmQydmVjLmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/word2vec.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>Word2Vec 的网络结构其实和神经网络语言模型（NNLM）是基本类似的，只是这个图长得清晰度差了点，看上去不像，其实它们是亲兄弟。不过这里需要指出：尽管网络结构相近，而且都是做语言模型任务，但是他们训练方法不太一样。</p>\n<p>Word2Vec 有两种训练方法：</p>\n<ol>\n<li>第一种叫 CBOW，<strong>核心思想是从一个句子里面把一个词抠掉</strong>，用这个词的上文和下文去预测被抠掉的这个词；</li>\n<li>第二种叫做 Skip-gram，和 CBOW 正好反过来，输入某个单词，要求网络预测它的上下文单词。</li>\n</ol>\n<p>而你回头看看，NNLM 是怎么训练的？是输入一个单词的上文，去预测这个单词。这是有显著差异的。</p>\n<p>为什么 Word2Vec 这么处理？原因很简单，因为 Word2Vec 和 NNLM 不一样，NNLM 的主要任务是要学习一个解决语言模型任务的网络结构，语言模型就是要看到上文预测下文，而 Word Embedding 只是 NNLM 无心插柳的一个副产品；但是 Word2Vec 目标不一样，它单纯就是要 Word Embedding 的，这是主产品，所以它完全可以随性地这么去训练网络。</p>\n<p>为什么要讲 Word2Vec 呢？这里主要是要引出 CBOW 的训练方法，BERT 其实跟它有关系，后面会讲解它们之间的关系，当然它们的关系 BERT 作者没说，是我猜的，至于我猜的对不对，你看完这篇文章之后可以自行判断。</p>\n<h1 id=\"五-自然语言处理的预训练模型\"><a class=\"anchor\" href=\"#五-自然语言处理的预训练模型\">#</a> 五、自然语言处理的预训练模型</h1>\n<p>突然在文章中插入这一段，其实就是给出一个问题：Word Embedding 这种做法能算是预训练吗？这其实就是标准的预训练过程。要理解这一点要看看学会 Word Embedding 后下游任务是怎么使用它的。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3dlJUU2JUE4JUExJUU1JUJDJThGJUU0JUI4JThCJUU3JTlBJTg0JUU5JUEyJTg0JUU4JUFFJUFEJUU3JUJCJTgzLmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/we 模式下的预训练.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>假设如上图所示，我们有个 NLP 的下游任务，比如 QA，就是问答问题，所谓问答问题，指的是给定一个问题 X，给定另外一个句子 Y，要判断句子 Y 是否是问题 X 的正确答案。</p>\n<p>问答问题假设设计的网络结构如上图所示，这里不展开讲了，懂得自然懂，不懂的也没关系，因为这点对于本文主旨来说不关键，关键是网络如何使用训练好的 Word Embedding 的。</p>\n<p>它的使用方法其实和前面讲的 NNLM 是一样的，句子中每个单词以 Onehot 形式作为输入，然后乘上学好的 Word Embedding 矩阵 Q，就直接取出单词对应的 Word Embedding 了。</p>\n<p>这乍看上去好像是个查表操作，不像是预训练的做法是吧？其实不然，<strong>那个 Word Embedding 矩阵 Q 其实就是网络 Onehot 层到 embedding 层映射的网络参数矩阵。</strong></p>\n<p>所以你看到了，使用 Word Embedding 等价于什么？等价于把 Onehot 层到 embedding 层的网络用预训练好的参数矩阵 Q 初始化了。这跟前面讲的图像领域的低层预训练过程其实是一样的，<strong>区别无非 Word Embedding 只能初始化第一层网络参数，再高层的参数就无能为力了</strong>。</p>\n<p>下游 NLP 任务在使用 Word Embedding 的时候也类似图像有两种做法，一种是 Frozen，就是 Word Embedding 那层网络参数固定不动；另外一种是 Fine-Tuning，就是 Word Embedding 这层参数使用新的训练集合训练也需要跟着训练过程更新掉。</p>\n<p>上面这种做法就是 18 年之前 NLP 领域里面采用预训练的典型做法，并且 Word Embedding 其实对于很多下游 NLP 任务是有帮助的，只是帮助没有大到闪瞎忘记戴墨镜的围观群众的双眼而已。</p>\n<h1 id=\"六-rnn-和-lstm\"><a class=\"anchor\" href=\"#六-rnn-和-lstm\">#</a> 六、RNN 和 LSTM</h1>\n<p>为什么要在这里穿插一个 RNN（Recurrent Neural Network） 和 LSTM（Long Short-Term Memory） 呢？</p>\n<p>因为接下来要介绍的 ELMo（Embeddings from Language Models） 模型在训练过程中使用了双向长短期记忆网络（Bi-LSTM）。</p>\n<p>当然，这里只是简单地介绍，想要详细了解的可以去查看网上铺天盖地的参考资料。</p>\n<h2 id=\"61-rnn\"><a class=\"anchor\" href=\"#61-rnn\">#</a> 6.1 RNN</h2>\n<p>传统的神经网络无法获取时序信息，然而<strong>时序信息在自然语言处理任务中非常重要</strong>。</p>\n<p>例如对于这一句话 “我吃了一个苹果”，“苹果” 的词性和意思，在这里取决于前面词的信息，如果没有 “我吃了一个” 这些词，“苹果” 也可以翻译为乔布斯搞出来的那个被咬了一口的苹果。</p>\n<p>也就是说，RNN 的出现，让处理时序信息变为可能。</p>\n<p>RNN 的基本单元结构如下图所示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL1JOTi11bnJvbGxlZC5wbmc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/RNN-unrolled.png</span>&quot; style=&quot;zoom:36%;&quot; /&gt;</p>\n<p>上图左边部分称作 RNN 的一个 timestep，在这个 timestep 中可以看到，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> 时刻，输入变量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，通过 RNN 的一个基础模块 A，输出变量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">h_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，而 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> 时刻的信息，将会传递到下一个时刻 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">t+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。</p>\n<p>如果把模块按照时序展开，则会如上图右边部分所示，<strong>由此可以看到 RNN 为多个基础模块 A 的互连，每一个模块都会把当前信息传递给下一个模块</strong>。</p>\n<p>RNN 解决了时序依赖问题，但这里的时序一般指的是短距离的，首先我们先介绍下短距离依赖和长距离依赖的区别：</p>\n<ul>\n<li>短距离依赖：对于这个填空题 “我想看一场篮球____”，我们很容易就判断出 “篮球” 后面跟的是 “比赛”，这种短距离依赖问题非常适合 RNN。</li>\n<li>长距离依赖：对于这个填空题 “我出生在中国的瓷都景德镇，小学和中学离家都很近，……，我的母语是____”，对于短距离依赖，“我的母语是” 后面可以紧跟着 “汉语”、“英语”、“法语”，但是如果我们想精确答案，则必须回到上文中很长距离之前的表述 “我出生在中国的瓷都景德镇”，进而判断答案为 “汉语”，而 RNN 是很难学习到这些信息的。</li>\n</ul>\n<h2 id=\"62-rnn-的梯度消失问题\"><a class=\"anchor\" href=\"#62-rnn-的梯度消失问题\">#</a> 6.2 RNN 的梯度消失问题</h2>\n<p>在这里我简单讲解下 RNN 为什么不适合长距离依赖问题。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL1JOTiVFNiVBOCVBMSVFNSU5RSU4QiVFNyVCQiU5MyVFNiU5RSU4NC5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/RNN 模型结构.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>如上图所示，为 RNN 模型结构，前向传播过程包括：</p>\n<ul (t)=\"\">\n<li><strong>隐藏状态：</strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msup><mi>z</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><mi>U</mi><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><mi>W</mi><msup><mi>h</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h^{(t)} = \\sigma (z^{(t)}) = \\sigma(Ux^{(t)} + Wh^{(t-1)} + b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8879999999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.138em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.138em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9713299999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span> ，此处激活函数一般为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">tanh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">h</span></span></span></span> 。</li>\n<li><strong>模型输出：</strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>o</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mi>V</mi><msup><mi>h</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">o^{(t)} = Vh^{(t)} + c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8879999999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9713299999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span></li>\n<li><strong>预测输出：</strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msup><mi>o</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat{y}^{(t)} = \\sigma(o^{(t)})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0824399999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.138em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> ，此处激活函数一般为 softmax。</li>\n<li><strong>模型损失：</strong>L = \\sum_{t = 1}^{T} L^</li>\n</ul>\n<p>RNN 所有的 timestep 共享一套参数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo separator=\"true\">,</mo><mi>V</mi><mo separator=\"true\">,</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">U,V,W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span>，在 RNN 反向传播过程中，需要计算 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo separator=\"true\">,</mo><mi>V</mi><mo separator=\"true\">,</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">U,V,W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> 等参数的梯度，以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> 的梯度表达式为例（假设 RNN 模型的损失函数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span>）：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>W</mi></mrow></mfrac><mo>=</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>o</mi><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>o</mi><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>h</mi><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac><mrow><mo fence=\"true\">(</mo><munderover><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></munderover><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>h</mi><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>h</mi><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac><mo fence=\"true\">)</mo></mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>h</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>W</mi></mrow></mfrac><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mo>=</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>o</mi><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>o</mi><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>h</mi><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac><mrow><mo fence=\"true\">(</mo><munderover><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></munderover><mi>t</mi><mi>a</mi><mi>n</mi><msup><mi>h</mi><msup><mrow></mrow><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></msup><mo stretchy=\"false\">(</mo><msup><mi>z</mi><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mi>W</mi><mo fence=\"true\">)</mo></mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>h</mi><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>W</mi></mrow></mfrac><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mspace width=\"1em\"/><mtext>公式(9)</mtext></mrow><annotation encoding=\"application/x-tex\">\\frac{\\partial L}{\\partial W} \n= \\sum_{t = 1}^{T} \\frac{\\partial L}{\\partial y^{(T)}} \\frac{\\partial y^{(T)}}{\\partial o^{(T)}} \\frac{\\partial o^{(T)}}{\\partial h^{(T)}} \\left( \\prod_{k=t + 1}^{T} \\frac{\\partial h^{(k)}}{\\partial h^{(k - 1)}} \\right) \\frac{\\partial h^{(t)}}{\\partial W} \\  \\\\ \n= \\sum_{t = 1}^{T} \\frac{\\partial L}{\\partial y^{(T)}} \\frac{\\partial y^{(T)}}{\\partial o^{(T)}} \\frac{\\partial o^{(T)}}{\\partial h^{(T)}} \\left( \\prod_{k=t+1}^{T} tanh^{&#x27;}(z^{(k)}) W \\right) \\frac{\\partial h^{(t)}}{\\partial W} \\  \\\\\n\\quad\\text{公式(9)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1887800000000004em;vertical-align:-1.360444em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.882887em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.267113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.2960000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8984399999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.565em;\"><span style=\"top:-2.2960000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.704em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.565em;\"><span style=\"top:-2.2960000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.704em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∏</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.360444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.565em;\"><span style=\"top:-2.2960000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.704em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.565em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1887800000000004em;vertical-align:-1.360444em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.882887em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.267113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.2960000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8984399999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.565em;\"><span style=\"top:-2.2960000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.704em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.565em;\"><span style=\"top:-2.2960000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.704em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∏</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.360444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.99248em;\"><span style=\"top:-2.99248em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.57948em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8278285714285715em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.565em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">公式</span><span class=\"mord\">(9)</span></span></span></span></span></span></p>\n<p>对于公式（9）中的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mo fence=\"true\">(</mo><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>h</mi><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>h</mi><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mi>t</mi><mi>a</mi><mi>n</mi><msup><mi>h</mi><msup><mrow></mrow><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></msup><mo stretchy=\"false\">(</mo><msup><mi>z</mi><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mi>W</mi><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\left( \\prod_{k=t + 1}^{T} \\frac{\\partial h^{(k)}}{\\partial h^{(k - 1)}} \\right) = \\left( \\prod_{k=t+1}^{T} tanh^{&#x27;}(z^{(k)}) W \\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.80002em;vertical-align:-0.65002em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35804100000000005em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0707em;\"><span style=\"top:-2.614575em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8220357142857143em;\"><span style=\"top:-2.8220357142857138em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5357142857142856em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9667142857142857em;\"><span style=\"top:-2.966714285714285em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5357142857142856em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.38542499999999996em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.80002em;vertical-align:-0.65002em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35804100000000005em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.94248em;\"><span style=\"top:-2.94248em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.57948em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8278285714285715em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>tanh</mi><mo>⁡</mo></mrow><annotation encoding=\"application/x-tex\">\\tanh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mop\">tanh</span></span></span></span> 的导数总是小于 1 的，由于是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo>−</mo><mo stretchy=\"false\">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T-(t+1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 个 timestep 参数的连乘，<strong>如果 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> 的主特征值小于 1，梯度便会消失；如果 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> 的特征值大于 1，梯度便会爆炸。</strong></p>\n<p>需要注意的是，RNN 和 DNN 梯度消失和梯度爆炸含义并不相同。</p>\n<p>RNN 中权重在各时间步内共享，最终的梯度是各个时间步的梯度和，梯度和会越来越大。因此，RNN 中总的梯度是不会消失的，即使梯度越传越弱，也只是远距离的梯度消失。 从公式（9）中的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">(</mo><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mi>t</mi><mi>a</mi><mi>n</mi><msup><mi>h</mi><msup><mrow></mrow><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></msup><mo stretchy=\"false\">(</mo><msup><mi>z</mi><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mi>W</mi><mo fence=\"true\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\left( \\prod_{k=t+1}^{T} tanh^{&#x27;}(z^{(k)}) W \\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.80002em;vertical-align:-0.65002em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35804100000000005em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.94248em;\"><span style=\"top:-2.94248em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.57948em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8278285714285715em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span></span></span></span> 可以看到，<strong>RNN 所谓梯度消失的真正含义是，梯度被近距离（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>+</mo><mn>1</mn><mtext>趋向于</mtext><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">t+1 趋向于 T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">趋</span><span class=\"mord cjk_fallback\">向</span><span class=\"mord cjk_fallback\">于</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>）梯度主导，远距离（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>+</mo><mn>1</mn><mtext>远离</mtext><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">t+1 远离 T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">远</span><span class=\"mord cjk_fallback\">离</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>）梯度很小，导致模型难以学到远距离的信息。</strong></p>\n<h2 id=\"63-lstm\"><a class=\"anchor\" href=\"#63-lstm\">#</a> 6.3 LSTM</h2>\n<p>为了解决 RNN 缺乏的序列长距离依赖问题，LSTM 被提了出来，首先我们来看看 LSTM 相对于 RNN 做了哪些改进：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL0xTVE0lRTYlQTglQTElRTUlOUUlOEIlRTclQkIlOTMlRTYlOUUlODQuanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/LSTM 模型结构.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>如上图所示，为 LSTM 的 RNN 门控结构（LSTM 的 timestep），LSTM 前向传播过程包括：</p>\n<ul>\n<li>** 遗忘门：** 决定了丢弃哪些信息，遗忘门接收 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">t-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 时刻的状态 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">h_{t-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span>，以及当前的输入 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，经过 Sigmoid 函数后输出一个 0 到 1 之间的值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>\n<ul>\n<li>输出： <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mi>f</mi></msub><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>U</mi><mi>f</mi></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mi>f</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f_{t} = \\sigma(W_fh_{t-1} + U_fx_{t} + b_f)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n<li>** 输入门：** 决定了哪些新信息被保留，并更新细胞状态，输入们的取值由 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">h_{t-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 决定，通过 Sigmoid 函数得到一个 0 到 1 之间的值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">i_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，而 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>tanh</mi><mo>⁡</mo></mrow><annotation encoding=\"application/x-tex\">\\tanh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mop\">tanh</span></span></span></span> 函数则创造了一个当前细胞状态的候选 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>\n<ul>\n<li>输出：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>i</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mi>i</mi></msub><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>U</mi><mi>i</mi></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">i_{t} = \\sigma(W_ih_{t-1} + U_ix_{t} + b_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> , <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><msub><mi>C</mi><mi>t</mi></msub><mo>~</mo></mover><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><msub><mi>W</mi><mi>a</mi></msub><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>U</mi><mi>a</mi></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mi>a</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\tilde{C_{t} }= tanhW_ah_{t-1} + U_ax_{t} + b_a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0701899999999998em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.6023300000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">h</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n</li>\n<li>** 细胞状态：** 旧细胞状态 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{t-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.891661em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> 被更新到新的细胞状态 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 上，\n<ul>\n<li>输出：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>t</mi></msub><mo>=</mo><msub><mi>C</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>⊙</mo><msub><mi>f</mi><mi>t</mi></msub><mo>+</mo><msub><mi>i</mi><mi>t</mi></msub><mo>⊙</mo><mover accent=\"true\"><msub><mi>C</mi><mi>t</mi></msub><mo>~</mo></mover></mrow><annotation encoding=\"application/x-tex\">C_{t} = C_{t-1}\\odot f_{t} + i_{t}\\odot \\tilde{C_{t} }</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.891661em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊙</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊙</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0701899999999998em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.6023300000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></li>\n</ul>\n</li>\n<li t=\"\">** 输出门：** 决定了最后输出的信息，输出门取值由 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">h_{t-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 决定，通过 Sigmoid 函数得到一个 0 到 1 之间的值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>o</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">o_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，最后通过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>tanh</mi><mo>⁡</mo></mrow><annotation encoding=\"application/x-tex\">\\tanh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mop\">tanh</span></span></span></span> 函数决定最后输出的信息\n<ul>\n<li>输出：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>o</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mi>o</mi></msub><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>U</mi><mi>o</mi></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mi>o</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">o_{t} = \\sigma(W_oh_{t-1} + U_ox_{t} + b_o)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> , h_{t} = o_{t}\\odot tanhC_</li>\n</ul>\n</li>\n<li><strong>预测输出：</strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mo stretchy=\"false\">(</mo><mi>V</mi><msub><mi>h</mi><mi>t</mi></msub><mo>+</mo><mi>c</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat{y}_{t} = \\sigma(Vh_{t}+c)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h2 id=\"64-lstm-解决-rnn-的梯度消失问题\"><a class=\"anchor\" href=\"#64-lstm-解决-rnn-的梯度消失问题\">#</a> 6.4 LSTM 解决 RNN 的梯度消失问题</h2>\n<p>明白了 RNN 梯度消失的原因之后，我们看 LSTM 如何解决问题的呢？</p>\n<p>RNN 梯度消失的原因是，随着梯度的传导，梯度被近距离梯度主导，模型难以学习到远距离的信息。具体原因也就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>h</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>h</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\prod_{k=t+1}^{T}\\frac{\\partial h_{k}}{\\partial h_{k - 1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4737559999999998em;vertical-align:-0.4925249999999999em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35804100000000005em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9019679999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21074999999999994em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.41586em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4925249999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 部分，在迭代过程中，每一步 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>h</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>h</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{\\partial h_{k}}{\\partial h_{k - 1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3944929999999998em;vertical-align:-0.4925249999999999em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9019679999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21074999999999994em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.41586em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4925249999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> <strong>始终在 [0,1) 之间或者始终大于 1。</strong></p>\n<p>而对于 LSTM 模型而言，针对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>C</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\prod _{k=t+1}^{T} \\frac{\\partial C_{k}}{\\partial C_{k-1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4737559999999998em;vertical-align:-0.4925249999999999em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35804100000000005em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9019679999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21074999999999994em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.41586em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4925249999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 求得：</p>\n\\begin{align}\n& \\frac{\\partial C_{k}}{\\partial C_{k-1}} = f_k + other \\\\\n& \\prod _{k=t+1}^{T} \\frac{\\partial C_{k}}{\\partial C_{k-1}} = f_{k}f_{k+1}...f_{T} + other  \\\\\n\\end{align}\n\n<p>在 LSTM 迭代过程中，针对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>C</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\prod_{k=t+1}^{T} \\frac{\\partial C_{k}}{\\partial C_{k-1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4737559999999998em;vertical-align:-0.4925249999999999em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35804100000000005em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9019679999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21074999999999994em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.41586em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4925249999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 而言，每一步<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>C</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{\\partial C_{k}}{\\partial C_{k-1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3944929999999998em;vertical-align:-0.4925249999999999em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9019679999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21074999999999994em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.41586em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4925249999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> <strong>可以自主的选择在 [0,1] 之间，或者大于 1</strong>，因为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_{k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是可训练学习的。那么整体 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>C</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\prod _{k=t+1}^{T} \\frac{\\partial C_{k}}{\\partial C_{k-1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4737559999999998em;vertical-align:-0.4925249999999999em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35804100000000005em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9019679999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.21074999999999994em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.41586em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4925249999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 也就不会一直减小，远距离梯度不至于完全消失，也就能够解决 RNN 中存在的梯度消失问题。</p>\n<p>LSTM 遗忘门值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 可以选择在 [0,1] 之间，让 LSTM 来改善梯度消失的情况。也可以选择接近 1，让遗忘门饱和，此时远距离信息梯度不消失；也可以选择接近 0，此时模型是故意阻断梯度流，遗忘之前信息。</p>\n<p>另外需要强调的是 LSTM 搞的这么复杂，<strong>除了在结构上天然地克服了梯度消失的问题，更重要的是具有更多的参数来控制模型</strong>；通过四倍于 RNN 的参数量，可以更加精细地预测时间序列变量。</p>\n<p>此外，我记得有一篇文章讲到，<strong>LSTM 在 200 左右长度的文本上，就已经捉襟见肘了</strong>。</p>\n<h1 id=\"七-elmo-模型\"><a class=\"anchor\" href=\"#七-elmo-模型\">#</a> 七、ELMo 模型</h1>\n<h2 id=\"71-elmo-的预训练\"><a class=\"anchor\" href=\"#71-elmo-的预训练\">#</a> 7.1 ELMo 的预训练</h2>\n<p>在讲解 Word Embedding 时，细心地读者一定已经发现，这些词表示方法本质上是静态的，每一个词都有一个唯一确定的词向量，不能根据句子的不同而改变，无法处理自然语言处理任务中的多义词问题。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3dlJUU1JUE0JTlBJUU0JUI5JTg5JUU4JUFGJThEJUU5JTk3JUFFJUU5JUEyJTk4LmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/we 多义词问题.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>如上图所示，例如多义词 Bank，有两个常用含义，但是 Word Embedding 在对 bank 这个单词进行编码的时候，是区分不开这两个含义的。</p>\n<p>因为尽管这两句含有 bank 的句子中 bank 上下文环境中出现的单词不同，但是在用语言模型训练的时候，不论什么上下文的句子经过 Word2Vec，都是预测相同的单词 bank，而同一个单词占用的是同一行的参数空间，这会导致两种不同的上下文信息都会编码到相同的 Word Embedding 空间里，进而导致 Word Embedding 无法区分多义词的不同语义。</p>\n<p>所以对于比如 Bank 这个词，它事先学好的 Word Embedding 中混合了几种语义 ，在应用中来了个新句子，即使从上下文中（比如句子包含 money 等词）明显可以看出它代表的是 “银行” 的含义，但是对应的 Word Embedding 内容也不会变，它还是混合了多种语义。</p>\n<p>针对 Word Embedding 中出现的多义词问题，ELMo 提供了一个简洁优雅的解决方案。</p>\n<p>ELMo 的本质思想是：我事先用语言模型学好一个单词的 Word Embedding，此时多义词无法区分，不过这没关系。在我实际使用 Word Embedding 的时候，单词已经具备了特定的上下文了，这个时候我可以根据上下文单词的语义再去调整单词的 Word Embedding 表示，这样经过调整后的 Word Embedding 更能表达在这个上下文中的具体含义，自然也就解决了多义词的问题了。所以 ELMo 本身是个根据当前上下文对 Word Embedding 动态调整的思路。</p>\n<p>ELMo 采用了典型的两阶段过程：</p>\n<ol>\n<li>第一个阶段是利用语言模型进行预训练；</li>\n<li>第二个阶段是在做下游任务时，从预训练网络中提取对应单词的网络各层的 Word Embedding 作为新特征补充到下游任务中。</li>\n</ol>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNSU5RiVCQSVFNCVCQSU4RSVFNCVCOCU4QSVFNCVCOCU4QiVFNiU5NiU4NyVFNyU5QSU4NGVtZWRkaW5nLmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 基于上下文的 emedding.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>上图展示的是其第一阶段预训练过程，它的网络结构采用了双层双向 LSTM，目前语言模型训练的任务目标是根据单词 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的上下文去正确预测单词 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 之前的单词序列 Context-before 称为上文，之后的单词序列 Context-after 称为下文。</p>\n<p>图中左端的前向双层 LSTM 代表正方向编码器，输入的是从左到右顺序的除了预测单词外 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的上文 Context-before；右端的逆向双层 LSTM 代表反方向编码器，输入的是从右到左的逆序的句子下文 Context-after；每个编码器的深度都是两层 LSTM 叠加。</p>\n<p>这个网络结构其实在 NLP 中是很常用的。使用这个网络结构利用大量语料做语言模型任务就能预先训练好这个网络，如果训练好这个网络后，输入一个新句子 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">s_{new}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> ，句子中每个单词都能得到对应的三个 Embedding：</p>\n<ul>\n<li>最底层是单词的 Word Embedding；</li>\n<li>往上走是第一层双向 LSTM 中对应单词位置的 Embedding，这层编码单词的句法信息更多一些；</li>\n<li>再往上走是第二层 LSTM 中对应单词位置的 Embedding，这层编码单词的语义信息更多一些。</li>\n</ul>\n<p>也就是说，ELMo 的预训练过程不仅仅学会单词的 Word Embedding，还学会了一个双层双向的 LSTM 网络结构，而这两者后面都有用。</p>\n<h2 id=\"72-elmo-的-feature-based-pre-training\"><a class=\"anchor\" href=\"#72-elmo-的-feature-based-pre-training\">#</a> 7.2 ELMo 的 Feature-based Pre-Training</h2>\n<p>上面介绍的是 ELMo 的第一阶段：预训练阶段。那么预训练好网络结构后，如何给下游任务使用呢？</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2VsbW8lRTglQUUlQUQlRTclQkIlODMlRTUlOTAlOEUlRTclOUElODQlRTQlQkQlQkYlRTclOTQlQTguanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/elmo 训练后的使用.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>上图展示了下游任务的使用过程，比如我们的下游任务仍然是 QA 问题，此时对于问句 X：</p>\n<ol>\n<li>我们可以先将句子 X 作为预训练好的 ELMo 网络的输入，这样句子 X 中每个单词在 ELMO 网络中都能获得对应的三个 Embedding；</li>\n<li>之后给予这三个 Embedding 中的每一个 Embedding 一个权重 a，这个权重可以学习得来，根据各自权重累加求和，将三个 Embedding 整合成一个；</li>\n<li>然后将整合后的这个 Embedding 作为 X 句在自己任务的那个网络结构中对应单词的输入，以此作为补充的新特征给下游任务使用。</li>\n<li>对于上图所示下游任务 QA 中的回答句子 Y 来说也是如此处理。</li>\n</ol>\n<p><strong>因为 ELMo 给下游提供的是每个单词的特征形式，所以这一类预训练的方法被称为 “Feature-based Pre-Training”。</strong></p>\n<p>至于为何这么做能够达到区分多义词的效果，原因在于在训练好 ELMo 后，<strong>在特征提取的时候，每个单词在两层 LSTM 上都会有对应的节点，这两个节点会编码单词的一些句法特征和语义特征，并且它们的 Embedding 编码是动态改变的</strong>，会受到上下文单词的影响，周围单词的上下文不同应该会强化某种语义，弱化其它语义，进而就解决了多义词的问题。</p>\n<h1 id=\"八-attention\"><a class=\"anchor\" href=\"#八-attention\">#</a> 八、Attention</h1>\n<p>上面巴拉巴拉了一堆，都在为 BERT 的讲解做铺垫，而接下来要叙述的 Attention 和 Transformer 同样如此，它们都只是 BERT 构成的一部分。</p>\n<h2 id=\"81-人类的视觉注意力\"><a class=\"anchor\" href=\"#81-人类的视觉注意力\">#</a> 8.1 人类的视觉注意力</h2>\n<p>Attention 是注意力的意思，从它的命名方式看，很明显借鉴了人类的注意力机制，因此，我们首先介绍人类的视觉注意力。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCQSVCQSVFNyVCMSVCQiVFNyU5QSU4NCVFOCVBNyU4NiVFOCVBNyU4OSVFNiVCMyVBOCVFNiU4NCU4RiVFNSU4QSU5Qi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 人类的视觉注意力.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>视觉注意力机制是人类视觉所特有的大脑信号处理机制。人类视觉通过快速扫描全局图像，获得需要重点关注的目标区域，也就是一般所说的注意力焦点，而后对这一区域投入更多注意力资源，以获取更多所需要关注目标的细节信息，而抑制其他无用信息。</p>\n<p>这是人类利用有限的注意力资源从大量信息中快速筛选出高价值信息的手段，是人类在长期进化中形成的一种生存机制，人类视觉注意力机制极大地提高了视觉信息处理的效率与准确性。</p>\n<p>上图形象化展示了人类在看到一副图像时是如何高效分配有限的注意力资源的，<strong>其中红色区域表明视觉系统更关注的目标</strong>，很明显对于上图所示的场景，人们会把注意力更多投入到人的脸部，文本的标题以及文章首句等位置。</p>\n<p>深度学习中的注意力机制从本质上讲和人类的选择性视觉注意力机制类似，<strong>核心目标也是从众多信息中选择出对当前任务目标更关键的信息。</strong></p>\n<h2 id=\"82-attention-的本质思想\"><a class=\"anchor\" href=\"#82-attention-的本质思想\">#</a> 8.2 Attention 的本质思想</h2>\n<p>从人类的视觉注意力可以看出，注意力模型 Attention 的本质思想为：从大量信息中有选择地筛选出少量重要信息并聚焦到这些重要信息上，忽略不重要的信息。</p>\n<p>在详细讲解 Attention 之前，我们在讲讲 Attention 的其他作用。之前我们讲解 LSTM 的时候说到，虽然 LSTM 解决了序列长距离依赖问题，但是单词超过 200 的时候就会失效。<strong>而 Attention 机制可以更加好的解决序列长距离依赖问题，并且具有并行计算能力</strong>。现在不明白这点不重要，随着我们对 Attention 的慢慢深入，相信你会明白。</p>\n<p>首先我们得明确一个点，注意力模型从大量信息 Values 中筛选出少量重要信息，这些重要信息一定是相对于另外一个信息 Query 而言是重要的，例如对于上面那张婴儿图，Query 就是观察者。也就是说，我们要搭建一个注意力模型，我们必须得要有一个 Query 和一个 Values，然后通过 Query 这个信息从 Values 中筛选出重要信息。</p>\n<p>通过 Query 这个信息从 Values 中筛选出重要信息，简单点说，<strong>就是计算 Query 和 Values 中每个信息的相关程度。</strong></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2F0dGVudGlvbi0lRTglQUUlQTElRTclQUUlOTclRTUlOUIlQkUucG5n\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/attention - 计算图.png</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>再具体点，通过上图，Attention 通常可以进行如下描述，表示为将 Query (Q) 和 key-value pairs（<strong>把 Values 拆分成了键值对的形式</strong>） 映射到输出上，其中 query、每个 key、每个 value 都是向量，输出是 V 中所有 values 的加权，其中权重是由 Query 和每个 key 计算出来的，计算方法分为三步：</p>\n<ol>\n<li>第一步：计算比较 Q 和 K 的相似度，用 f 来表示：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mspace width=\"1em\"/><mi>i</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">f(Q,K_i)\\quad i=1,2,\\cdots,m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span>，一般第一步计算方法包括四种\n<ol>\n<li>点乘（<strong>Transformer 使用</strong>）：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>Q</mi><mi>T</mi></msup><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">f(Q,K_i) = Q^T K_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.035771em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>权重：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>Q</mi><mi>T</mi></msup><mi>W</mi><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">f(Q,K_i) = Q^TWK_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.035771em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>拼接权重：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>W</mi><mo stretchy=\"false\">[</mo><msup><mi>Q</mi><mi>T</mi></msup><mo separator=\"true\">;</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f(Q,K_i) = W[Q^T;K_i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></li>\n<li>感知器：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>V</mi><mi>T</mi></msup><mi>tanh</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>W</mi><mi>Q</mi><mo>+</mo><mi>U</mi><msub><mi>K</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(Q,K_i)=V^T \\tanh(WQ+UK_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">tanh</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">Q</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n</ol>\n</li>\n<li>第二步：将得到的相似度进行 softmax 操作，进行归一化：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><msub><msqrt><mi>d</mi></msqrt><mi>k</mi></msub></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha_i = softmax(\\frac{f(Q,K_i)}{\\sqrt d_k})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.5979999999999999em;vertical-align:-0.588em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.5335085em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord sqrt mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.937845em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal mtight\" style=\"padding-left:0.833em;\">d</span></span><span style=\"top:-2.8978450000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail mtight\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.102155em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3224449999999999em;\"><span style=\"top:-2.3264164285714286em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17358357142857145em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">Q</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3280857142857143em;\"><span style=\"top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.588em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span>\n<ol>\n<li>这里简单讲解除以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><msqrt><mi>d</mi></msqrt><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sqrt d_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0897000000000001em;vertical-align:-0.15747999999999998em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93222em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"padding-left:0.833em;\">d</span></span><span style=\"top:-2.89222em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.10777999999999999em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3286279999999999em;\"><span style=\"top:-2.54252em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15747999999999998em;\"><span></span></span></span></span></span></span></span></span></span> 的作用：假设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span> , <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 里的元素的均值为 0，方差为 1，那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>A</mi><mi>T</mi></msup><mo>=</mo><msup><mi>Q</mi><mi>T</mi></msup><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">A^T=Q^TK</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.035771em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 中元素的均值为 0，方差为 d。当 d 变得很大时， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 中的元素的方差也会变得很大，如果 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 中的元素方差很大 (分布的方差大，分布集中在绝对值大的区域)，<strong>在数量级较大时， softmax 将几乎全部的概率分布都分配给了最大值对应的标签</strong>，由于某一维度的数量级较大，进而会导致 softmax 未来求梯度时会消失。总结一下就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">softmax</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mi>A</mi><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\operatorname{softmax}\\left(A\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">s</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mathrm\">t</span><span class=\"mord mathrm\">m</span><span class=\"mord mathrm\">a</span><span class=\"mord mathrm\">x</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span> 的分布会和 d 有关。因此 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 中每一个元素乘上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{\\sqrt{d_k}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.383108em;vertical-align:-0.538em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.5864385em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sqrt mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8622307142857143em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mtight\" style=\"padding-left:0.833em;\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.8222307142857144em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail mtight\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17776928571428574em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.538em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 后，方差又变为 1，并且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 的数量级也将会变小。</li>\n</ol>\n</li>\n<li>第三步：针对计算出来的权重 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> 中的所有 values 进行加权求和计算，得到 Attention 向量：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><msub><mi>α</mi><mi>i</mi></msub><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">Attention = \\sum_{i=1}^m \\alpha_i V_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.104002em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ol>\n<h2 id=\"83-self-attention-模型\"><a class=\"anchor\" href=\"#83-self-attention-模型\">#</a> 8.3 Self Attention 模型</h2>\n<p>上面已经讲了 Attention 就是从一堆信息中筛选出重要的信息，现在我们来通过 Self Attention 模型来详细讲解如何找到这些重要的信息。</p>\n<p>Self Attention 模型的架构如下图所示，接下来我们将按照这个模型架构的顺序来逐一解释。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3NlbGYtYXR0ZW50aW9uLmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>首先可以看到 Self Attention 有三个输入 Q、K、V：<strong>对于 Self Attention，Q、K、V 来自句子 X 的 词向量 x 的线性转化，即对于词向量 x，给定三个可学习的矩阵参数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>Q</mi></msub><mo separator=\"true\">,</mo><msub><mi>W</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><msub><mi>W</mi><mi>v</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_Q,W_k,W_v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，x 分别右乘上述矩阵得到 Q、K、V</strong>。</p>\n<p>接下来为了表示的方便，我们先通过向量的计算叙述 Self Attention 计算的流程，然后再描述 Self Attention 的矩阵计算过程</p>\n<ol>\n<li>\n<p>第一步，Q、K、V 的获取</p>\n<ol>\n<li></li>\n</ol>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3Frdi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qkv.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>上图操作：两个单词 Thinking 和 Machines。通过线性变换，即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 两个向量分别与<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>q</mi></msub><mo separator=\"true\">,</mo><msub><mi>W</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><msub><mi>W</mi><mi>v</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_q,W_k,W_v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 三个矩阵点乘得到 ${q_1,q_2},{k_1,k_2},{v_1,v_2} $ 共 6 个向量。矩阵 Q 则是向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">q_1,q_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的拼接，K、V 同理。</p>\n</li>\n<li>\n<p>第二步，MatMul</p>\n<ol>\n<li>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL1EtSyVFNCVCOSU5OCVFNyVBNyVBRi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/Q-K 乘积.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>上图操作：向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">{q_1,k_1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 做点乘得到得分 112， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">{q_1,k_2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 做点乘得到得分 96。注意：<strong>这里是通过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">q_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 这个信息找到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1,x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 中的重要信息。</strong></p>\n</li>\n</ol>\n</li>\n<li>\n<p>第三步和第四步，Scale + Softmax</p>\n<ol>\n<li>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3FrLXNjYWxlLmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qk-scale.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</li>\n</ol>\n<p>上图操作：对该得分进行规范，除以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt><mo>=</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">\\sqrt {d_k} = 8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.18278000000000005em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85722em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.81722em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.18278000000000005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">8</span></span></span></span></p>\n</li>\n<li>\n<p>第五步，MatMul</p>\n<ol>\n<li>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3FrLXNvZnRtYXguanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qk-softmax.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</li>\n</ol>\n</li>\n</ol>\n<p>用得分比例 [0.88，0.12] 乘以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[v_1,v_2]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> 值得到一个加权后的值，将这些值加起来得到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">z_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>上述所说就是 Self Attention 模型所做的事，仔细感受一下，用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">q_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">K=[k_1,k_2]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> 去计算一个 Thinking 相对于 Thinking 和 Machine 的权重，再用权重乘以 Thinking 和 Machine 的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">V=[v_1,v_2]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> 得到加权后的 Thinking 和 Machine 的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">V=[v_1,v_2]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>，最后求和得到针对各单词的输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">z_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>同理可以计算出 Machine 相对于 Thinking 和 Machine 的加权输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">z_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，拼接 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">z_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">z_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 即可得到 Attention 值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>z</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">Z=[z_1,z_2]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>，这就是 Self Attention 的矩阵计算，如下所示。</p>\n<p>之前的例子是单个向量的运算例子。这张图展示的是矩阵运算的例子，输入是一个 [2x4] 的矩阵（句子中每个单词的词向量的拼接），每个运算是 [4x3] 的矩阵，求得 Q、K、V。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL1FLVi0lRTclOUYlQTklRTklOTglQjUlRTglQTElQTglRTclQTQlQkEuanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/QKV - 矩阵表示.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>Q 对 K 转制做点乘，除以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><msqrt><mi>d</mi></msqrt><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sqrt d_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0897000000000001em;vertical-align:-0.15747999999999998em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93222em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"padding-left:0.833em;\">d</span></span><span style=\"top:-2.89222em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.10777999999999999em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3286279999999999em;\"><span style=\"top:-2.54252em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15747999999999998em;\"><span></span></span></span></span></span></span></span></span></span>，做一个 softmax 得到合为 1 的比例，对 V 做点乘得到输出 Z。那么这个 Z 就是一个考虑过 Thinking 周围单词 Machine 的输出。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL1FLVlotJUU3JUJCJTkzJUU2JTlFJTlDLmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/QKVZ - 结果.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>注意看这个公式，<strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">QK^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.035771em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span> 其实就会组成一个 word2word 的 attention map！</strong>（加了 softmax 之后就是一个合为 1 的权重了）。比如说你的输入是一句话 &quot;i have a dream&quot; 总共 4 个单词，这里就会形成一张 4x4 的注意力机制的图：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNiVCMyVBOCVFNiU4NCU4RiVFNSU4QSU5QiVFNiU5QyVCQSVFNSU4OCVCNiVFNyU5RiVBOSVFOSU5OCVCNSVFNSU5QiVCRS5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 注意力机制矩阵图.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>这样一来，每一个单词对应每一个单词都会有一个权重，<strong>这也是 Self Attention 名字的来源，即 Attention 的计算来源于 Source（源句） 和 Source 本身，通俗点讲就是 Q、K、V 都来源于输入 X 本身。</strong></p>\n<h2 id=\"84-self-attention-和-rnn-lstm-的区别\"><a class=\"anchor\" href=\"#84-self-attention-和-rnn-lstm-的区别\">#</a> 8.4 Self Attention 和 RNN、LSTM 的区别</h2>\n<p>引入 Self Attention 有什么好处呢？或者说通过 Self Attention 到底学到了哪些规律或者抽取出了哪些特征呢？我们可以通过下述两幅图来讲解：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3NlbGYtYXR0ZW50aW9uLSVFNSVBNSVCRCVFNSVBNCU4NDEuanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention - 好处 1.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3NlbGYtYXR0ZW50aW9uLSVFNSVBNSVCRCVFNSVBNCU4NDIuanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention - 好处 2.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>从上述两张图可以看出，Self Attention 可以捕获同一个句子中单词之间的一些句法特征（例如第一张图展示的有一定距离的短语结构）或者语义特征（例如第二张图展示的 its 的指代对象为 Law）。</p>\n<p>有了上述的讲解，我们现在可以来看看 Self Attention 和 RNN、LSTM 的区别：</p>\n<ul>\n<li>RNN、LSTM：如果是 RNN 或者 LSTM，需要依次序列计算，对于远距离的相互依赖的特征，<strong>要经过若干时间步步骤的信息累积才能将两者联系起来，而距离越远，有效捕获的可能性越小</strong>。</li>\n<li>Self Attention：\n<ul>\n<li>通过上述两幅图，很明显的可以看出，引入 Self Attention 后会更容易捕获句子中长距离的相互依赖的特征，<strong>因为 Self Attention 在计算过程中会直接将句子中任意两个单词的联系通过一个计算步骤直接联系起来，所以远距离依赖特征之间的距离被极大缩短，有利于有效地利用这些特征</strong>；</li>\n<li>除此之外，Self<br />\nAttention 对于<strong>一句话中的每个单词都可以单独的进行 Attention 值的计算</strong>，也就是说 Self Attention 对计算的并行性也有直接帮助作用，而对于必须得依次序列计算的 RNN 而言，是无法做到并行计算的。</li>\n</ul>\n</li>\n</ul>\n<p>从上面的计算步骤和图片可以看出，<strong>无论句子序列多长，都可以充分捕获近距离上往下问中的任何依赖关系，进而可以很好的提取句法特征还可以提取语义特征</strong>；而且对于一个句子而言，<strong>每个单词的计算是可以并行处理的</strong>。</p>\n<p>理论上 Self-Attention （Transformer 50 个左右的单词效果最好）解决了 RNN 模型的长序列依赖问题，但是由于文本长度增加时，训练时间也将会呈指数增长，因此在处理长文本任务时可能不一定比 LSTM（200 个左右的单词效果最好） 等传统的 RNN 模型的效果好。</p>\n<p>上述所说的，则是为何 Self Attention 逐渐替代 RNN、LSTM 被广泛使用的原因所在。</p>\n<h2 id=\"85-masked-self-attention-模型\"><a class=\"anchor\" href=\"#85-masked-self-attention-模型\">#</a> 8.5 Masked Self Attention 模型</h2>\n<p>趁热打铁，我们讲讲 Transformer 未来会用到的 Masked Self Attention 模型，这里的 Masked 就是要在做语言模型（或者像翻译）的时候，不给模型看到未来的信息，它的结构如下图所示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL21hc2tlZC1hdHRlbnRpb24uanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/masked-attention.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>上图中和 Self Attention 重复的部分此处就不讲了，主要讲讲 Mask 这一块。</p>\n<p>假设在此之前我们已经通过 scale 之前的步骤得到了一个 attention map，<strong>而 mask 就是沿着对角线把灰色的区域用 0 覆盖掉，不给模型看到未来的信息</strong>，如下图所示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL21hc2stYXR0ZW50aW9uLW1hcC5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/mask-attention-map.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>详细来说：</p>\n<ol>\n<li>&quot;i&quot; 作为第一个单词，只能有和 &quot;i&quot; 自己的 attention；</li>\n<li>&quot;have&quot; 作为第二个单词，有和 &quot;i、have&quot; 前面两个单词的 attention；</li>\n<li>&quot;a&quot; 作为第三个单词，有和 &quot;i、have、a&quot; 前面三个单词的 attention；</li>\n<li>&quot;dream&quot; 作为最后一个单词，才有对整个句子 4 个单词的 attention。</li>\n</ol>\n<p>并且在做完 softmax 之后，横轴结果合为 1。如下图所示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL21hc2stYXR0ZW50aW9uLW1hcC1zb2Z0bWF4LmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/mask-attention-map-softmax.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>具体为什么要 mask，未来再讲解 Transformer 的时候我们会详细解释。</p>\n<h2 id=\"86-multi-head-self-attention-模型\"><a class=\"anchor\" href=\"#86-multi-head-self-attention-模型\">#</a> 8.6 Multi-head Self Attention 模型</h2>\n<p>由于 Transformer 使用的都是 Self Attention 的进阶版 Multi-head Self Attention，我们简单讲讲  Multi-head Self Attention 的架构，并且在该小节结尾处讲讲它的优点。</p>\n<p>Multi-Head Attention 就是把 Self Attention 得到的注意力值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 切分成 n 个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Z</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>Z</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>Z</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">Z_1,Z_2,\\cdots,Z_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，然后通过全连接层获得新的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>Z</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">Z&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL211bHRpLWhlYWQtYXR0ZW50aW9uLnBuZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/multi-head-attention.png</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>我们还是以上面的形式来解释，我们对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 进行 8 等份的切分得到 8 个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Z</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">Z_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 矩阵：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLzgtaGVhZC1hdHRlbnRpb24uanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/8-head-attention.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>为了使得输出与输入结构相同，拼接矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Z</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">Z_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 后乘以一个线性 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">W_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 得到最终的 Z：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLzgtei0lRTYlOEIlQkMlRTYlOEUlQTUuanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/8-z - 拼接.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>可以通过下图看看 multi-head attention 的整个流程：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL211bHRpLWhlYWQtJUU2JThCJUJDJUU2JThFJUE1LmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/multi-head - 拼接.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>上述操作有什么好处呢？<strong>多头相当于把原始信息 Source 放入了多个子空间中，也就是捕捉了多个信息，对于使用 multi-head（多头） attention 的简单回答就是，多头保证了 attention 可以注意到不同子空间的信息，捕捉到更加丰富的特征信息</strong>。其实本质上是论文原作者发现这样效果确实好。</p>\n<h1 id=\"九-position-embedding\"><a class=\"anchor\" href=\"#九-position-embedding\">#</a> 九、Position Embedding</h1>\n<p>在 Attention 和 RNN、LSTM 的对比中，我们说到 Attention 解决了长距离依赖问题，并且可以支持并行化，但是它就真的百利而无一害了吗？</p>\n<p>其实不然，我们往前回顾，Self Attention 的 Q、K、V 三个矩阵是由同一个输入 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">X_1=(x_1,x_2,\\cdots,x_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 线性转换而来，也就是说对于这样的一个被打乱序列顺序的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mn>2</mn></msub><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">X_2=(x_2,x_1,\\cdots,x_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 而言，<strong>由于 Attention 值的计算最终会被加权求和，也就是说两者最终计算的 Attention 值都是一样的，进而也就表明了 Attention 丢掉了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">X_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的序列顺序信息。</strong></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNSU5MCU5MSVFOSU4NyU4Ri5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置向量.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>如上图所示，为了解决 Attention 丢失的序列顺序信息，Transformer 的提出者提出了 Position Embedding，也就是对于输入 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 进行 Attention 计算之前，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的词向量中加上位置信息，也就是说 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的词向量为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mrow><mi>f</mi><mi>i</mi><mi>n</mi><mi>a</mi><mi>l</mi><mi mathvariant=\"normal\">_</mi><mi>e</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi></mrow></msub><mo>=</mo><mi>E</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>+</mo><mi>P</mi><mi>o</mi><mi>s</mi><mi>i</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>l</mi><mtext> </mtext><mi>E</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">X_{final\\_embedding} = Embedding + Positional\\, Embedding</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.05033em;vertical-align:-0.367em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mtight\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.367em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span></p>\n<p>但是如何得到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的位置向量呢？</p>\n<p>其中位置编码公式如下图所示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNyVCQyU5NiVFNyVBMCU4MSVFNSU4NSVBQyVFNSVCQyU4Ri5wbmc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置编码公式.png</span>&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>其中 pos 表示位置、i 表示维度、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>d</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">d_{model}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示位置向量的向量维度 、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi>i</mi><mtext>、</mtext><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2i、2i+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">i</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 表示的是奇偶数（奇偶维度），上图所示就是偶数位置使用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>sin</mi><mo>⁡</mo></mrow><annotation encoding=\"application/x-tex\">\\sin</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66786em;vertical-align:0em;\"></span><span class=\"mop\">sin</span></span></span></span> 函数，奇数位置使用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>cos</mi><mo>⁡</mo></mrow><annotation encoding=\"application/x-tex\">\\cos</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mop\">cos</span></span></span></span> 函数。</p>\n<p>有了位置编码，我们再来看看位置编码是如何嵌入单词编码的（其中 512 表示编码维度），<strong>通过把单词的词向量和位置向量进行叠加，这种方式就称作位置嵌入</strong>，如下图所示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNyVCQyU5NiVFNyVBMCU4MSVFNSU5MiU4QyVFOCVBRiU4RCVFNSU5MCU5MSVFOSU4NyU4RiVFNCVCOSU4QiVFNSU5MiU4Qy5wbmc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置编码和词向量之和.png</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p><strong>Position Embedding 本身是一个绝对位置的信息</strong>，但在语言模型中，相对位置也很重要。那么为什么位置嵌入机制有用呢？</p>\n<p>我们不要去关心三角函数公式，可以看看下图公式（3）中的第一行，我们做如下的解释，对于 “我爱吃苹果” 这一句话，有 5 个单词，假设序号分别为 1、2、3、4、5。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNSVCNSU4QyVFNSU4NSVBNSVFOCVBNyVBMyVFOSU4NyU4QS5wbmc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置嵌入解释.png</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>假设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mo>=</mo><mn>1</mn><mo>=</mo><mtext>我、</mtext><mi>k</mi><mo>=</mo><mn>2</mn><mo>=</mo><mtext>爱、</mtext><mi>p</mi><mi>o</mi><mi>s</mi><mo>+</mo><mi>k</mi><mo>=</mo><mn>3</mn><mo>=</mo><mtext>吃</mtext></mrow><annotation encoding=\"application/x-tex\">pos=1=我、k=2=爱、pos+k=3=吃</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">我</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord cjk_fallback\">爱</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">吃</span></span></span></span>，也就是说 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mo>+</mo><mi>k</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">pos+k=3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7777700000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span> 位置的位置向量的某一维可以通过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">pos=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 位置的位置向量的某一维线性组合加以线性表示，通过该线性表示可以得出 “吃” 的位置编码信息蕴含了相对于前两个字 “我” 的位置编码信息。</p>\n<p>总而言之就是，<strong>某个单词的位置信息是其他单词位置信息的线性组合，这种线性组合就意味着位置向量中蕴含了相对位置信息。</strong></p>\n<h1 id=\"十-transformer\"><a class=\"anchor\" href=\"#十-transformer\">#</a> 十、Transformer</h1>\n<h2 id=\"101-transformer-的结构\"><a class=\"anchor\" href=\"#101-transformer-的结构\">#</a> 10.1 Transformer 的结构</h2>\n<p>万事俱备，只欠东风，下面我们来讲讲我们的重点之一，Transformer，你可以先记住这一句话：<strong>Transformer 简单点看其实就是 self-attention 模型的叠加</strong>，首先我们来看看 Transformer 的整体框架。</p>\n<p>Transformer 的整体框架如下图所示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLSVFNiU5NSVCNCVFNCVCRCU5MyVFNiVBMSU4NiVFNiU5RSVCNi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf - 整体框架.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>上图所示的整体框架乍一眼一看非常复杂，由于 Transformer 起初是作为翻译模型，因此我们以翻译举例，简化一下上述的整体框架：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLSVFNiVBMSU4NiVFNiU5RSVCNiVFNyVBRSU4MCVFNSU4QyU5Ni5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf - 框架简化.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>从上图可以看出 Transformer 相当于一个黑箱，左边输入 “Je suis etudiant”，右边会得到一个翻译结果 “I am a student”。</p>\n<p>再往细里讲，Transformer 也是一个 Seq2Seq 模型（Encoder-Decoder 框架的模型），左边一个 Encoders 把输入读进去，右边一个 Decoders 得到输出，如下所示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLWVkLSVFNiVBMSU4NiVFNiU5RSVCNi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-ed - 框架.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<blockquote>\n<p>在这里，我们穿插描述下 Encoder-Decoder 框架的模型是如何进行文本翻译的：</p>\n<ol>\n<li>将序列 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x_1,x_2,\\cdots,x_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 作为 Encoders 的输入，得到输出序列 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>z</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(z_1,z_2,\\cdots,z_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>把 Encoders 的输出序列 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>z</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(z_1,z_2,\\cdots,z_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 作为 Decoders 的输入，生成一个输出序列 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>y</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(y_1,y_2,\\cdots,y_m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。注：<strong>Decoders 每个时刻输出一个结果</strong></li>\n</ol>\n</blockquote>\n<p>第一眼看到上述的 Encodes-Decoders 框架图，随之产生问题就是 Transformer 中 左边 Encoders 的输出是怎么和右边 Decoders 结合的。因为 decoders 里面是有 N 层的，再画张图直观的看就是这样：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLWVkLSVFNSVBNCU4RCVFNiU5RCU4Mi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-ed - 复杂.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>也就是说，Encoders 的输出，会和<strong>每一层的 Decoder 进行结合</strong>。</p>\n<p>现在我们取其中一层进行详细的展示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2VkLSVFNyVCQiU4NiVFNSU4OCU4Ni5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed - 细分.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>通过上述分析，发现我们想要详细了解 Transformer，只要了解 Transformer 中的 Encoder 和 Decoder 单元即可，接下来我们将详细阐述这两个单元。</p>\n<h2 id=\"102-encoder\"><a class=\"anchor\" href=\"#102-encoder\">#</a> 10.2 Encoder</h2>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2VkLSVFNyVCQiU4NiVFNSU4OCU4Ni5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed - 细分.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>有了上述那么多知识的铺垫，我们知道 Eecoders 是 N=6 层，通过上图我们可以看到每层 Encoder 包括两个 sub-layers：</p>\n<ul>\n<li>第一个 sub-layer 是 multi-head self-attention，用来计算输入的 self-attention；</li>\n<li>第二个 sub-layer 是简单的前馈神经网络层 Feed Forward；</li>\n</ul>\n<p>注意：在每个 sub-layer 我们都模拟了残差网络（在下面的数据流示意图中会细讲），每个 sub-layer 的输出都是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>a</mi><mi>y</mi><mi>e</mi><mi>r</mi><mi>N</mi><mi>o</mi><mi>r</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mi>S</mi><mi>u</mi><mi>b</mi><mi mathvariant=\"normal\">_</mi><mi>l</mi><mi>a</mi><mi>y</mi><mi>e</mi><mi>r</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">LayerNorm(x+Sub\\_layer(x))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">b</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span>，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>u</mi><mi>b</mi><mi mathvariant=\"normal\">_</mi><mi>l</mi><mi>a</mi><mi>y</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">sub\\_layer</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00444em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">b</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> 表示的是该层的上一层的输出</p>\n<p>现在我们给出 Encoder 的数据流示意图，一步一步去剖析</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2VuY29kZXItJUU4JUFGJUE2JUU3JUJCJTg2JUU1JTlCJUJFLnBuZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/encoder - 详细图.png</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<ol>\n<li>深绿色的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示 Embedding 层的输出，加上代表 Positional Embedding 的向量之后，得到最后输入 Encoder 中的特征向量，也就是浅绿色向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>；</li>\n<li>浅绿色向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示单词 “Thinking” 的特征向量，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 经过 Self-Attention 层，变成浅粉色向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">z_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 作为残差结构的直连向量，直接和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">z_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 相加，之后进行 Layer Norm 操作，得到粉色向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">z_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>；\n<ol>\n<li>残差结构的作用：避免出现梯度消失的情况</li>\n<li>Layer Norm 的作用：为了保证数据特征分布的稳定性，并且可以加速模型的收敛</li>\n</ol>\n</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">z_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 经过前馈神经网络（Feed Forward）层，经过残差结构与自身相加，之后经过 LN 层，得到一个输出向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">r_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>；\n<ol>\n<li>该前馈神经网络包括两个线性变换和一个 ReLU 激活函数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi>F</mi><mi>N</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>x</mi><msub><mi>W</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><msub><mi>W</mi><mn>2</mn></msub><mo>+</mo><mi>b</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">FFN(x) = max(0,xW_1+b_1)W_2+b2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord\">2</span></span></span></span></li>\n</ol>\n</li>\n<li>由于 Transformer 的 Encoders 具有 6 个 Encoder，<strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">r_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 也将会作为下一层 Encoder 的输入，代替 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的角色</strong>，如此循环，直至最后一层 Encoder。</li>\n</ol>\n<p>需要注意的是，<strong>上述的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mtext>、</mtext><mi>z</mi><mtext>、</mtext><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">x、z、r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> 都具有相同的维数</strong>，论文中为 512 维。</p>\n<h2 id=\"103-decoder\"><a class=\"anchor\" href=\"#103-decoder\">#</a> 10.3 Decoder</h2>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2VkLSVFNyVCQiU4NiVFNSU4OCU4Ni5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed - 细分.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>Decoders 也是 N=6 层，通过上图我们可以看到每层 Decoder 包括 3 个 sub-layers：</p>\n<ul>\n<li>第一个 sub-layer 是 Masked multi-head self-attention，也是计算输入的 self-attention；\n<ul>\n<li>在这里，先不解释为什么要做 Masked，后面在 “Transformer 动态流程展示” 这一小节会解释</li>\n</ul>\n</li>\n<li>第二个 sub-layer 是 Encoder-Decoder Attention 计算，对 Encoder 的输入和 Decoder 的 Masked multi-head self-attention 的输出进行 attention 计算；\n<ul>\n<li>在这里，同样不解释为什么要对 Encoder 和 Decoder 的输出一同做 attention 计算，后面在 “Transformer 动态流程展示” 这一小节会解释</li>\n</ul>\n</li>\n<li>第三个 sub-layer 是前馈神经网络层，与 Encoder 相同。</li>\n</ul>\n<h2 id=\"104-transformer-输出结果\"><a class=\"anchor\" href=\"#104-transformer-输出结果\">#</a> 10.4 Transformer 输出结果</h2>\n<p>以上，就讲完了 Transformer 编码和解码两大模块，那么我们回归最初的问题，将 “机器学习” 翻译成 “machine learing”，解码器的输出是一个浮点型的向量，怎么转化成 “machine learing” 这两个词呢？让我们来看看 Encoders 和 Decoders 交互的过程寻找答案：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2VkLSVFNCVCQSVBNCVFNCVCQSU5Mi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed - 交互.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>从上图可以看出，Transformer 最后的工作是让解码器的输出通过线性层 Linear 后接上一个 softmax</p>\n<ul>\n<li>其中线性层是一个简单的全连接神经网络，它将解码器产生的向量 A 投影到一个更高维度的向量 B 上，假设我们模型的词汇表是 10000 个词，那么向量 B 就有 10000 个维度，每个维度对应一个惟一的词的得分。</li>\n<li>之后的 softmax 层将这些分数转换为概率。选择概率最大的维度，并对应地生成与之关联的单词作为此时间步的输出就是最终的输出啦！</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLSVFNiU5QyU4MCVFNSU5MCU4RSVFOCVCRSU5MyVFNSU4NyVCQS5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf - 最后输出.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>假设词汇表维度是 6，那么输出最大概率词汇的过程如下：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLSVFNiU5QyU4MCVFNyVCQiU4OCVFOCVCRSU5MyVFNSU4NyVCQSVFNyVCQiU5MyVFNiU5RSU5Qy5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf - 最终输出结果.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h1 id=\"十一-transformer-动态流程展示\"><a class=\"anchor\" href=\"#十一-transformer-动态流程展示\">#</a> 十一、Transformer 动态流程展示</h1>\n<p>首先我们来看看拿 Transformer 作翻译时，如何生成翻译结果的：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLSVFNSU4QSVBOCVFNiU4MCU4MSVFNyU5NCU5RiVFNiU4OCU5MC5naWY=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf - 动态生成.gif</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>继续进行：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLSVFNSU4QSVBOCVFNiU4MCU4MSVFNyVCQiU5MyVFNiU5RSU5Qy0yLmdpZg==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf - 动态结果 - 2.gif</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLSVFNiU5NSVCNCVFNCVCRCU5MyVFNiVBMSU4NiVFNiU5RSVCNi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf - 整体框架.jpg</span>&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>假设上图是训练模型的某一个阶段，我们来结合 Transformer 的完整框架描述下这个动态的流程图：</p>\n<ol>\n<li>输入 “je suis etudiant” 到 Encoders，然后得到一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mi>e</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>V</mi><mi>e</mi></msub></mrow><annotation encoding=\"application/x-tex\">V_e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 矩阵；</li>\n<li>输入 “I am a student” 到 Decoders ，首先通过 Masked Multi-head Attention 层得到 “I am a student” 的 attention 值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，然后用 attention 值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 Encoders 的输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mi>e</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>V</mi><mi>e</mi></msub></mrow><annotation encoding=\"application/x-tex\">V_e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 矩阵进行 attention 计算，得到第 1 个输出 “I”；</li>\n<li>输入 “I am a student” 到 Decoders ，首先通过 Masked Multi-head Attention 层得到 “I am a student” 的 attention 值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，然后用 attention 值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 Encoders 的输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mi>e</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>V</mi><mi>e</mi></msub></mrow><annotation encoding=\"application/x-tex\">V_e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 矩阵进行 attention 计算，得到第 2 个输出 “am”；</li>\n<li>……</li>\n</ol>\n<p>现在我们来解释我们之前遗留的两个问题。</p>\n<h2 id=\"111-为什么-decoder-需要做-mask\"><a class=\"anchor\" href=\"#111-为什么-decoder-需要做-mask\">#</a> 11.1 为什么 Decoder 需要做 Mask</h2>\n<ul>\n<li>\n<p>训练阶段：我们知道 “je suis etudiant” 的翻译结果为 “I am a student”，我们把 “I am a student” 的 Embedding 输入到 Decoders 里面，翻译第一个词 “I” 时</p>\n<ul>\n<li>如果对 “I am a student” attention 计算不做 mask，“am，a，student” 对 “I” 的翻译将会有一定的贡献</li>\n<li>如果对 “I am a student” attention 计算做 mask，“am，a，student” 对 “I” 的翻译将没有贡献</li>\n</ul>\n</li>\n<li>\n<p>测试阶段：我们不知道 “我爱中国” 的翻译结果为 “I love China”，我们只能随机初始化一个 Embedding 输入到 Decoders 里面，翻译第一个词 “I” 时：</p>\n<ul>\n<li>无论是否做 mask，“love，China” 对 “I” 的翻译都不会产生贡献</li>\n<li>但是翻译了第一个词 “I” 后，随机初始化的 Embedding 有了 “I” 的 Embedding，也就是说在翻译第二词 “love” 的时候，“I” 的 Embedding 将有一定的贡献，但是 “China” 对 “love” 的翻译毫无贡献，随之翻译的进行，<strong>已经翻译的结果将会对下一个要翻译的词都会有一定的贡献，这就和做了 mask 的训练阶段做到了一种匹配</strong></li>\n</ul>\n</li>\n</ul>\n<p>总结下就是：Decoder 做 Mask，是为了让训练阶段和测试阶段行为一致，不会出现间隙，避免过拟合</p>\n<h2 id=\"112-为什么-encoder-给予-decoders-的是-k-v-矩阵\"><a class=\"anchor\" href=\"#112-为什么-encoder-给予-decoders-的是-k-v-矩阵\">#</a> 11.2 为什么 Encoder 给予 Decoders 的是 K、V 矩阵</h2>\n<p>我们在讲解 Attention 机制中曾提到，Query 的目的是借助它从一堆信息中找到重要的信息。</p>\n<p>现在 Encoder 提供了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mi>e</mi></msub><mtext>、</mtext><msub><mi>V</mi><mi>e</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_e、V_e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 矩阵，Decoder 提供了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 矩阵，通过 “我爱中国” 翻译为 “I love China” 这句话详细解释下。</p>\n<p>当我们翻译 “I” 的时候，由于 Decoder 提供了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 矩阵，通过与 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mi>e</mi></msub><mtext>、</mtext><msub><mi>V</mi><mi>e</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_e、V_e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 矩阵的计算，它可以在 “我爱中国” 这四个字中找到对 “I” 翻译最有用的单词是哪几个，并以此为依据翻译出 “I” 这个单词，这就很好的体现了注意力机制想要达到的目的，把焦点放在对自己而言更为重要的信息上。</p>\n<ul>\n<li>其实上述说的就是 Attention 里的 soft attention 机制，解决了曾经的 Encoder-Decoder 框架的一个问题，在这里不多做叙述，有兴趣的可以参考网上的一些资料。\n<ul>\n<li>早期的 Encoder-Decoder 框架中的 Encoder 通过 LSTM 提取出源句（Source） “我爱中国” 的特征信息 C，然后 Decoder 做翻译的时候，目标句（Target）“I love China” 中的任何一个单词的翻译都来源于相同特征信息 C，这种做法是极其不合理的，例如翻译 “I” 时应该着眼于 “我”，翻译 “China” 应该着眼于 “中国”，而早期的这种做法并没有体现出，然而 Transformer 却通过 Attention 的做法解决了这个问题。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"十二-gpt-模型\"><a class=\"anchor\" href=\"#十二-gpt-模型\">#</a> 十二、GPT 模型</h1>\n<h2 id=\"121-gpt-模型的预训练\"><a class=\"anchor\" href=\"#121-gpt-模型的预训练\">#</a> 12.1 GPT 模型的预训练</h2>\n<p>在讲解 ELMo 的时候，我们说到 ELMo 这一类预训练的方法被称为 “Feature-based Pre-Training”。并且如果把 ELMo 这种预训练方法和图像领域的预训练方法对比，发现两者模式看上去还是有很大差异的。</p>\n<p>除了以 ELMo 为代表的这种基于特征融合的预训练方法外，NLP 里还有一种典型做法，这种做法和图像领域的方式就是看上去一致的了，一般将这种方法称为 “基于 Fine-tuning 的模式”，而 GPT 就是这一模式的典型开创者，下面先让我们看看 GPT 的网络结构。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2dwdC0lRTYlQTglQTElRTUlOUUlOEIuanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/gpt - 模型.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>GPT 是 “Generative Pre-Training” 的简称，从名字看其含义是指的生成式的预训练。</p>\n<p>GPT 也采用两阶段过程：</p>\n<ol>\n<li>第一个阶段：利用语言模型进行预训练；</li>\n<li>第二个阶段：通过 Fine-tuning 的模式解决下游任务。</li>\n</ol>\n<p>上图展示了 GPT 的预训练过程，其实和 ELMo 是类似的，主要不同在于两点：</p>\n<ol>\n<li>首先，特征抽取器用的不是 RNN，而是用的 Transformer，它的特征抽取能力要强于 RNN，这个选择很明显是很明智的；</li>\n<li>其次，\n<ol>\n<li>GPT 的预训练虽然仍然是以语言模型作为目标任务，但是采用的是单向的语言模型，所谓 “单向” 的含义是指：语言模型训练的任务目标是根据 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 单词的上下文去正确预测单词 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> ， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 之前的单词序列 Context-before 称为上文，之后的单词序列 Context-after 称为下文。</li>\n<li>ELMo 在做语言模型预训练的时候，预测单词 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 同时使用了上文和下文，而 GPT 则只采用 Context-before 这个单词的上文来进行预测，而抛开了下文。</li>\n<li>GPT 这个选择现在看不是个太好的选择，原因很简单，它没有把单词的下文融合进来，这限制了其在更多应用场景的效果，比如阅读理解这种任务，在做任务的时候是可以允许同时看到上文和下文一起做决策的。如果预训练时候不把单词的下文嵌入到 Word Embedding 中，是很吃亏的，白白丢掉了很多信息。</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"122-gpt-模型的-fine-tuning\"><a class=\"anchor\" href=\"#122-gpt-模型的-fine-tuning\">#</a> 12.2 GPT 模型的 Fine-tuning</h2>\n<p>上面讲的是 GPT 如何进行第一阶段的预训练，那么假设预训练好了网络模型，后面下游任务怎么用？它有自己的个性，和 ELMO 的方式大有不同。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2dwdC1maW5lLmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/gpt-fine.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>上图展示了 GPT 在第二阶段如何使用：</p>\n<ol>\n<li>\n<p>首先，对于不同的下游任务来说，本来你可以任意设计自己的网络结构，现在不行了，你要向 GPT 的网络结构看齐，把任务的网络结构改造成和 GPT 一样的网络结构。</p>\n</li>\n<li>\n<p>然后，在做下游任务的时候，利用第一步预训练好的参数初始化 GPT 的网络结构，这样通过预训练学到的语言学知识就被引入到你手头的任务里来了。</p>\n</li>\n<li>\n<p>再次，你可以用手头的任务去训练这个网络，对网络参数进行 Fine-tuning，使得这个网络更适合解决手头的问题。就是这样。</p>\n</li>\n</ol>\n<p>这有没有让你想起最开始提到的图像领域如何做预训练的过程，对，这跟那个预训练的模式是一模一样的。</p>\n<p>对于 NLP 各种花样的不同任务，怎么改造才能靠近 GPT 的网络结构呢？由于 GPT 对下游任务的改造过程和 BERT 对下游任务的改造极其类似，并且我们主要目的是为了讲解 BERT，所以这个问题将会在 BERT 那里得到回答。</p>\n<h1 id=\"十三-bert-模型\"><a class=\"anchor\" href=\"#十三-bert-模型\">#</a> 十三、BERT 模型</h1>\n<h2 id=\"131-bert公认的里程碑\"><a class=\"anchor\" href=\"#131-bert公认的里程碑\">#</a> 13.1 BERT：公认的里程碑</h2>\n<p>BERT 模型可以作为公认的里程碑式的模型，但是它最大的优点不是创新，而是集大成者，并且这个集大成者有了各项突破，下面让我们看看 BERT 是怎么集大成者的。</p>\n<ul>\n<li>BERT 的意义在于：从大量无标记数据集中训练得到的深度模型，可以显著提高各项自然语言处理任务的准确率。</li>\n<li>近年来优秀预训练语言模型的集大成者：参考了 ELMO 模型的双向编码思想、借鉴了 GPT 用 Transformer 作为特征提取器的思路、采用了 word2vec 所使用的 CBOW 方法</li>\n<li>BERT 和 GPT 之间的区别：\n<ul>\n<li>GPT：<strong>GPT 使用 Transformer Decoder 作为特征提取器、具有良好的文本生成能力</strong>，然而当前词的语义只能由其前序词决定，并且在语义理解上不足</li>\n<li>BERT：使用了 Transformer Encoder 作为特征提取器，并使用了与其配套的掩码训练方法。<strong>虽然使用双向编码让 BERT 不再具有文本生成能力，但是 BERT 的语义信息提取能力更强</strong></li>\n</ul>\n</li>\n<li>单向编码和双向编码的差异，以该句话举例 “今天天气很 {}，我们不得不取消户外运动”，分别从单向编码和双向编码的角度去考虑 {} 中应该填什么词：\n<ul>\n<li>单向编码：单向编码只会考虑 “今天天气很”，以人类的经验，大概率会从 “好”、“不错”、“差”、“糟糕” 这几个词中选择，这些词可以被划为截然不同的两类</li>\n<li>双向编码：<strong>双向编码会同时考虑上下文的信息</strong>，即除了会考虑 “今天天气很” 这五个字，还会考虑 “我们不得不取消户外运动” 来帮助模型判断，则大概率会从 “差”、“糟糕” 这一类词中选择</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"132-bert-的结构强大的特征提取能力\"><a class=\"anchor\" href=\"#132-bert-的结构强大的特征提取能力\">#</a> 13.2 BERT 的结构：强大的特征提取能力</h2>\n<ul>\n<li>\n<p>如下图所示，我们来看看 ELMo、GPT 和 BERT 三者的区别</p>\n<ul>\n<li>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL0JFUlQtR1BULSVFNiVBRiU5NCVFOCVCRSU4My5wbmc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/BERT-GPT - 比较.png</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</li>\n<li>ELMo 使用自左向右编码和自右向左编码的两个 LSTM 网络，分别以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(w_i|w_1,\\cdots,w_{i-1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>w</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(w_i|w_{i+1},\\cdots,w_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 为目标函数独立训练，<strong>将训练得到的特征向量以拼接的形式实现双向编码，本质上还是单向编码，只不过是两个方向上的单向编码的拼接而成的双向编码</strong>。</li>\n<li>GPT 使用 Transformer Decoder 作为 Transformer Block，以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(w_i|w_1,\\cdots,w_{i-1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 为目标函数进行训练，<strong>用 Transformer Block 取代 LSTM 作为特征提取器，实现了单向编码，是一个标准的预训练语言模型，即使用 Fine-Tuning 模式解决下游任务。</strong></li>\n<li>BERT 也是一个标准的预训练语言模型，<strong>它以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(w_i|w_1,\\cdots,w_{i-1},w_{i+1},\\cdots,w_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 为目标函数进行训练，BERT 使用的编码器属于双向编码器</strong>。\n<ul>\n<li>BERT 和 ELMo 的区别在于使用 Transformer Block 作为特征提取器，加强了语义特征提取的能力；</li>\n<li>BERT 和 GPT 的区别在于使用 Transformer Encoder 作为 Transformer Block，并且将 GPT 的单向编码改成双向编码，也就是说 BERT 舍弃了文本生成能力，换来了更强的语义理解能力。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>BERT 的模型结构如下图所示：</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2JlcnQtJUU2JUE4JUExJUU1JTlFJThCJUU3JUJCJTkzJUU2JTlFJTg0LmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/bert - 模型结构.jpg</span>&quot; style=&quot;zoom:51%;&quot; /&gt;</p>\n<p>从上图可以发现，BERT 的模型结构其实就是 Transformer Encoder 模块的堆叠。在模型参数选择上，论文给出了两套大小不一致的模型。</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>E</mi><mi>R</mi><msub><mi>T</mi><mrow><mi>B</mi><mi>A</mi><mi>S</mi><mi>E</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">BERT_{BASE}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> ：L = 12，H = 768，A = 12，总参数量为 1.1 亿</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>E</mi><mi>R</mi><msub><mi>T</mi><mrow><mi>L</mi><mi>A</mi><mi>R</mi><mi>G</mi><mi>E</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">BERT_{LARGE}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">L</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\">G</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>：L = 24，H = 1024，A = 16，总参数量为 3.4 亿</p>\n</blockquote>\n<p>其中 L 代表 Transformer Block 的层数；H 代表特征向量的维数（此处默认 Feed Forward 层中的中间隐层的维数为 4H）；A 表示 Self-Attention 的头数，使用这三个参数基本可以定义 BERT 的量级。</p>\n<p>BERT 参数量级的计算公式：</p>\n\\begin{align*}\n& 词向量参数+ 12 * （Multi-Heads参数 + 全连接层参数 + layernorm参数）\\\\ \n& = （30522+512 + 2）* 768 + 768 * 2 \\\\\n& + 12 * （768 * 768 / 12 * 3 * 12 + 768 * 768 + 768 * 3072 * 2 + 768 * 2 * 2） \\\\ \n& = 108808704.0 \\\\ \n& \\approx 110M\n\\end{align*}\n\n<p>训练过程也是很花费计算资源和时间的，<strong>总之表示膜拜，普通人即便有 idea 没有算力也只能跪着。</strong></p>\n<h2 id=\"133-bert-之无监督训练\"><a class=\"anchor\" href=\"#133-bert-之无监督训练\">#</a> 13.3 BERT 之无监督训练</h2>\n<p>和 GPT 一样，BERT 也采用二段式训练方法：</p>\n<ol>\n<li>第一阶段：使用易获取的大规模无标签余料，来训练基础语言模型；</li>\n<li>第二阶段：根据指定任务的少量带标签训练数据进行微调训练。</li>\n</ol>\n<p>不同于 GPT 等标准语言模型使用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(w_i|w_1,\\cdots,w_{i-1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 为目标函数进行训练，能看到全局信息的 BERT 使用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(w_i|w_1,\\cdots,w_{i-1},w_{i+1},\\cdots,w_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 为目标函数进行训练。</p>\n<p>并且 BERT 用语言掩码模型（MLM）方法训练词的语义理解能力；用下句预测（NSP）方法训练句子之间的理解能力，从而更好地支持下游任务。</p>\n<h2 id=\"134-bert之语言掩码模型mlm\"><a class=\"anchor\" href=\"#134-bert之语言掩码模型mlm\">#</a> 13.4 BERT 之语言掩码模型（MLM）</h2>\n<p>BERT 作者认为，<strong>使用自左向右编码和自右向左编码的单向编码器拼接而成的双向编码器，在性能、参数规模和效率等方面，都不如直接使用深度双向编码器强大</strong>，这也是为什么 BERT 使用 Transformer Encoder 作为特征提取器，而不使用自左向右编码和自右向左编码的两个 Transformer Decoder 作为特征提取器的原因。</p>\n<p>由于无法使用标准语言模型的训练模式，<strong>BERT 借鉴完形填空任务和 CBOW 的思想</strong>，使用语言掩码模型（MLM ）方法训练模型。</p>\n<p>MLM 方法也就是随机去掉句子中的部分 token（单词），然后模型来预测被去掉的 token 是什么。<strong>这样实际上已经不是传统的神经网络语言模型 (类似于生成模型) 了，而是单纯作为分类问题</strong>，根据这个时刻的 hidden state 来预测这个时刻的 token 应该是什么，而不是预测下一个时刻的词的概率分布了。</p>\n<p>随机去掉的 token 被称作掩码词，在训练中，掩码词将以 15% 的概率被替换成 [MASK]，也就是说随机 mask 语料中 15% 的 token，这个操作则称为掩码操作。注意：<strong>在 CBOW 模型中，每个词都会被预测一遍。</strong></p>\n<p>但是这样设计 MLM 的训练方法会引入弊端：<strong>在模型微调训练阶段或模型推理（测试）阶段，输入的文本中将没有 [MASK]，进而导致产生由训练和预测数据偏差导致的性能损失。</strong></p>\n<p>考虑到上述的弊端，BERT 并没有总用 [MASK] 替换掩码词，而是按照一定比例选取替换词。在选择 15% 的词作为掩码词后这些掩码词有三类替换选项：</p>\n<ul>\n<li>80% 练样本中：将选中的词用 [MASK] 来代替，例如：</li>\n</ul>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>“地球是[MASK]八大行星之一”</pre></td></tr></table></figure><ul>\n<li>10% 的训练样本中：选中的词不发生变化，<strong>该做法是为了缓解训练文本和预测文本的偏差带来的性能损失</strong>，例如：</li>\n</ul>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>“地球是太阳系八大行星之一”</pre></td></tr></table></figure><ul>\n<li>10% 的训练样本中：将选中的词用任意的词来进行代替，<strong>该做法是为了让 BERT 学会根据上下文信息自动纠错</strong>，例如：</li>\n</ul>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>“地球是苹果八大行星之一”</pre></td></tr></table></figure><p>作者在论文中提到这样做的好处是，编码器不知道哪些词需要预测的，哪些词是错误的，因此<strong>被迫需要学习每一个 token 的表示向量</strong>，另外作者也<strong>表示双向编码器比单项编码器训练要慢</strong>，进而导致 BERT 的训练效率低了很多，但是实验也证明 MLM 训练方法可以让 BERT 获得超出同期所有预训练语言模型的语义理解能力，牺牲训练效率是值得的。</p>\n<h2 id=\"135-bert-之下句预测nsp\"><a class=\"anchor\" href=\"#135-bert-之下句预测nsp\">#</a> 13.5 BERT 之下句预测（NSP）</h2>\n<p>在很多自然语言处理的下游任务中，如问答和自然语言推断，都基于两个句子做逻辑推理，而语言模型并不具备直接捕获句子之间的语义联系的能力，或者可以说成<strong>单词预测粒度的训练到不了句子关系这个层级</strong>，为了<strong>学会捕捉句子之间的语义联系</strong>，BERT 采用了下句预测（NSP ）作为无监督预训练的一部分。</p>\n<p>NSP 的具体做法是，BERT 输入的语句将由两个句子构成，其中，50% 的概率将语义连贯的两个连续句子作为训练文本（<strong>连续句对一般选自篇章级别的语料，以此确保前后语句的语义强相关</strong>），另外 50% 的概率将完全随机抽取两个句子作为训练文本。</p>\n<blockquote>\n<p>连续句对：[CLS] 今天天气很糟糕 [SEP] 下午的体育课取消了 [SEP]</p>\n<p>随机句对：[CLS] 今天天气很糟糕 [SEP] 鱼快被烤焦啦 [SEP]</p>\n</blockquote>\n<p>其中 [SEP]  标签表示分隔符。 [CLS] 表示标签用于类别预测，结果为 1，表示输入为连续句对；结果为 0，表示输入为随机句对。</p>\n<p>通过训练 [CLS] 编码后的输出标签，<strong>BERT 可以学会捕捉两个输入句对的文本语义</strong>，在连续句对的预测任务中，BERT 的正确率可以达到 97%-98%。</p>\n<h2 id=\"136-bert-之输入表示\"><a class=\"anchor\" href=\"#136-bert-之输入表示\">#</a> 13.6 BERT 之输入表示</h2>\n<p>BERT 在预训练阶段使用了前文所述的两种训练方法，<strong>在真实训练中一般是两种方法混合使用</strong>。</p>\n<p>由于 BERT 通过 Transformer 模型堆叠而成，所以 BERT 的输入需要两套 Embedding 操作：</p>\n<ol>\n<li>一套为 One-hot 词表映射编码（对应下图的 Token Embeddings）；</li>\n<li>另一套为位置编码（对应下图的 Position Embeddings），<strong>不同于 Transformer 的位置编码用三角函数表示，BERT 的位置编码将在预训练过程中训练得到（训练思想类似于 Word Embedding 的 Q 矩阵）</strong></li>\n<li>由于在 MLM 的训练过程中，存在单句输入和双句输入的情况，因此 BERT 还需要一套区分输入语句的分割编码（对应下图的 Segment Embeddings），BERT 的分割编码也将在预训练过程中训练得到</li>\n</ol>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL0JFUlQtJUU4JUJFJTkzJUU1JTg1JUE1LmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/BERT - 输入.jpg</span>&quot; style=&quot;zoom:51%;&quot; /&gt;</p>\n<p>对于分割编码，Segment Embeddings 层只有两种向量表示。前一个向量是把 0 赋给第一个句子中的各个 token，后一个向量是把 1 赋给第二个句子中的各个 token ；如果输入仅仅只有一个句子，那么它的 segment embedding 就是全 0，下面我们简单举个例子描述下：</p>\n<blockquote>\n<p>[CLS] I like dogs [SEP] I like cats [SEP] 对应编码 0 0 0 0 0 1 1 1 1</p>\n<p>[SEP] I Iike dogs and cats [SEP] 对应编码 0 0 0 0 0 0 0</p>\n</blockquote>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3NlZ21lbnQtZW1iZWRkaW5ncy5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/segment-embeddings.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h1 id=\"十四-bert-下游任务改造\"><a class=\"anchor\" href=\"#十四-bert-下游任务改造\">#</a> 十四、BERT 下游任务改造</h1>\n<p>BERT 根据自然语言处理下游任务的输入和输出的形式，将微调训练支持的任务分为四类，分别是句对分类、单句分类、文本问答和单句标注，接下来我们将简要的介绍下 BERT 如何通过微调训练适应这四类任务的要求。</p>\n<h2 id=\"141-句对分类\"><a class=\"anchor\" href=\"#141-句对分类\">#</a> 14.1 句对分类</h2>\n<p>给定两个句子，判断它们的关系，称为句对分类，例如判断句对是否相似、判断后者是否为前者的答案。</p>\n<p>针对句对分类任务，BERT 在预训练过程中就使用了 NSP 训练方法获得了直接捕获句对语义关系的能力。</p>\n<p><strong>如下图所示，句对用 [SEP] 分隔符拼接成文本序列，在句首加入标签 [CLS]，将句首标签所对应的输出值作为分类标签，计算预测分类标签与真实分类标签的交叉熵，将其作为优化目标，在任务数据上进行微调训练。</strong></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNSU4RiVBNSVFNSVBRiVCOSVFNSU4OCU4NiVFNyVCMSVCQi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 句对分类.jpg</span>&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<p>针对二分类任务，BERT 不需要对输入数据和输出数据的结构做任何改动，直接使用与 NSP 训练方法一样的输入和输出结构就行。</p>\n<p>针对多分类任务，需要在句首标签 [CLS] 的输出特征向量后接一个全连接层和 Softmax 层，保证输出维数与类别数目一致，最后通过 arg max 操作（取最大值时对应的索引序号）得到相对应的类别结果。</p>\n<p>下面给出句对分相似性任务的实例：</p>\n<blockquote>\n<p>任务：判断句子 “我很喜欢你” 和句子 “我很中意你” 是否相似</p>\n<p>输入改写：“[CLS] 我很喜欢你 [SEP] 我很中意你”</p>\n<p>取 “[CLS]” 标签对应输出：[0.02, 0.98]</p>\n<p>通过 arg max 操作得到相似类别为 1（类别索引从 0 开始），即两个句子相似</p>\n</blockquote>\n<h2 id=\"142-单句分类\"><a class=\"anchor\" href=\"#142-单句分类\">#</a> 14.2 单句分类</h2>\n<p>给定一个句子，判断该句子的类别，统称为单句分类，例如判断情感类别、判断是否为语义连贯的句子。</p>\n<p>针对单句二分类任务，也无须对 BERT 的输入数据和输出数据的结构做任何改动。</p>\n<p><strong>如下图所示，单句分类在句首加入标签 [CLS]，将句首标签所对应的输出值作为分类标签，计算预测分类标签与真实分类标签的交叉熵，将其作为优化目标，在任务数据上进行微调训练。</strong></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNSU4RCU5NSVFNSU4RiVBNSVFNSU4OCU4NiVFNyVCMSVCQi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 单句分类.jpg</span>&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<p>同样，针对多分类任务，需要在句首标签 [CLS] 的输出特征向量后接一个全连接层和 Softmax 层，保证输出维数与类别数目一致，最后通过 argmax 操作得到相对应的类别结果。</p>\n<p>下面给出语义连贯性判断任务的实例：</p>\n<blockquote>\n<p>任务：判断句子 “海大球星饭茶吃” 是否为一句话</p>\n<p>输入改写：“[CLS] 海大球星饭茶吃”</p>\n<p>取 “[CLS]” 标签对应输出：[0.99, 0.01]</p>\n<p>通过 arg max 操作得到相似类别为 0，即这个句子不是一个语义连贯的句子</p>\n</blockquote>\n<h2 id=\"143-文本问答\"><a class=\"anchor\" href=\"#143-文本问答\">#</a> 14.3 文本问答</h2>\n<p>给定一个问句和一个蕴含答案的句子，找出答案在后这种的位置，称为文本问答，例如给定一个问题（句子 A），在给定的段落（句子 B）中标注答案的其实位置和终止位置。</p>\n<p><strong>文本问答任何和前面讲的其他任务有较大的差别，无论是在优化目标上，还是在输入数据和输出数据的形式上，都需要做一些特殊的处理。</strong></p>\n<p>为了标注答案的起始位置和终止位置，BERT 引入两个辅助向量 s（start，判断答案的起始位置） 和 e（end，判断答案的终止位置）。</p>\n<p><strong>如下图所示，BERT 判断句子 B 中答案位置的做法是，将句子 B 中的每一个次得到的最终特征向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>T</mi><mi>i</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msubsup></mrow><annotation encoding=\"application/x-tex\">T_i&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.010556em;vertical-align:-0.258664em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span></span></span></span> 经过全连接层（利用全连接层将词的抽象语义特征转化为任务指向的特征）后，分别与向量 s 和 e 求内积，对所有内积分别进行 softmax 操作，即可得到词 Tok m（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>M</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">m\\in [1,M]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mclose\">]</span></span></span></span>）作为答案其实位置和终止位置的概率。最后，去概率最大的片段作为最终的答案</strong>。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNiU5NiU4NyVFNiU5QyVBQyVFOSU5NyVBRSVFNyVBRCU5NC5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 文本问答.jpg</span>&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<p>文本回答任务的微调训练使用了两个技巧：</p>\n<ol>\n<li>用全连接层把 BERT 提取后的深层特征向量转化为用于判断答案位置的特征向量</li>\n<li>引入辅助向量 s 和 e 作为答案其实位置和终止位置的基准向量，明确优化目标的方向和度量方法</li>\n</ol>\n<p>下面给出文本问答任务的实例：</p>\n<blockquote>\n<p>任务：给定问句 “今天的最高温度是多少”，在文本 “天气预报显示今天最高温度 37 摄氏度” 中标注答案的起始位置和终止位置</p>\n<p>输入改写：“[CLS] 今天的最高温度是多少 [SEP] 天气预报显示今天最高温度 37 摄氏度”</p>\n<p>BERT Softmax 结果：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">篇章文本</th>\n<th style=\"text-align:center\">天气</th>\n<th style=\"text-align:center\">预报</th>\n<th style=\"text-align:center\">显示</th>\n<th style=\"text-align:center\">今天</th>\n<th style=\"text-align:center\">最高温</th>\n<th style=\"text-align:center\">37</th>\n<th style=\"text-align:center\">摄氏度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">起始位置概率</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.04</td>\n<td style=\"text-align:center\">0.10</td>\n<td style=\"text-align:center\">0.80</td>\n<td style=\"text-align:center\">0.03</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">终止位置概率</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.03</td>\n<td style=\"text-align:center\">0.04</td>\n<td style=\"text-align:center\">0.10</td>\n<td style=\"text-align:center\">0.80</td>\n</tr>\n</tbody>\n</table>\n<p>对 Softmax 的结果取 arg max，得到答案的起始位置为 6，终止位置为 7，即答案为 “37 摄氏度”</p>\n</blockquote>\n<h2 id=\"144-单句标注\"><a class=\"anchor\" href=\"#144-单句标注\">#</a> 14.4 单句标注</h2>\n<p>给定一个句子，标注每个次的标签，称为单句标注。例如给定一个句子，标注句子中的人名、地名和机构名。</p>\n<p>单句标注任务和 BERT 预训练任务具有较大差异，但与文本问答任务较为相似。</p>\n<p><strong>如下图所示，在进行单句标注任务时，需要在每个词的最终语义特征向量之后添加全连接层，将语义特征转化为序列标注任务所需的特征，单句标注任务需要对每个词都做标注，因此不需要引入辅助向量，直接对经过全连接层后的结果做 Softmax 操作，即可得到各类标签的概率分布。</strong></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNSU4RCU5NSVFNSU4RiVBNSVFNiVBMCU4NyVFNiVCMyVBOC5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 单句标注.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>由于 BERT 需要对输入文本进行分词操作，独立词将会被分成若干子词，因此 BERT 预测的结果将会是 5 类（细分为 13 小类）：</p>\n<ul>\n<li>O（非人名地名机构名，O 表示 Other）</li>\n<li>B-PER/LOC/ORG（人名 / 地名 / 机构名初始单词，B 表示 Begin）</li>\n<li>I-PER/LOC/ORG（人名 / 地名 / 机构名中间单词，I 表示 Intermediate）</li>\n<li>E-PER/LOC/ORG（人名 / 地名 / 机构名终止单词，E 表示 End）</li>\n<li>S-PER/LOC/ORG（人名 / 地名 / 机构名独立单词，S 表示 Single）</li>\n</ul>\n<p>将 5 大类的首字母结合，可得 IOBES，这是序列标注最常用的标注方法。</p>\n<p>下面给出命名实体识别（NER）任务的示例：</p>\n<blockquote>\n<p>任务：给定句子 “爱因斯坦在柏林发表演讲”，根据 IOBES 标注 NER 结果</p>\n<p>输入改写：“[CLS] 爱 因 斯坦 在 柏林 发表 演讲”</p>\n<p>BERT Softmax 结果：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">BOBES</th>\n<th style=\"text-align:center\">爱</th>\n<th style=\"text-align:center\">因</th>\n<th style=\"text-align:center\">斯坦</th>\n<th style=\"text-align:center\">在</th>\n<th style=\"text-align:center\">柏林</th>\n<th style=\"text-align:center\">发表</th>\n<th style=\"text-align:center\">演讲</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">O</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.90</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.90</td>\n<td style=\"text-align:center\">0.90</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">B-PER</td>\n<td style=\"text-align:center\">0.90</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">I-PER</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.90</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">E-PER</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.90</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">S-LOC</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n<td style=\"text-align:center\">0.01</td>\n</tr>\n</tbody>\n</table>\n<p>对 Softmax 的结果取 arg max，得到最终地 NER 标注结果为：“爱因斯坦” 是人名；“柏林” 是地名</p>\n</blockquote>\n<h2 id=\"145-bert效果展示\"><a class=\"anchor\" href=\"#145-bert效果展示\">#</a> 14.5 BERT 效果展示</h2>\n<p>无论如何，从上述讲解可以看出，NLP 四大类任务都可以比较方便地改造成 Bert 能够接受的方式，总之不同类型的任务需要对模型做不同的修改，但是修改都是非常简单的，最多加一层神经网络即可。这其实是 Bert 的非常大的优点，这意味着它几乎可以做任何 NLP 的下游任务，具备普适性，这是很强的。</p>\n<p>但是讲了这么多，** 一个新模型好不好，效果才是王道。** 那么 Bert 采用这种两阶段方式解决各种 NLP 任务效果如何？</p>\n<p>在 11 个各种类型的 NLP 任务中达到目前最好的效果，某些任务性能有极大的提升。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2JlcnQtJUU2JTk1JTg4JUU2JTlFJTlDLmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/bert - 效果.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h1 id=\"十五-预训练语言模型总结\"><a class=\"anchor\" href=\"#十五-预训练语言模型总结\">#</a> 十五、预训练语言模型总结</h1>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNiU4MCVCQiVFNyVCQiU5My5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 总结.jpg</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>到这里我们可以再梳理下几个模型之间的演进关系。</p>\n<p>从上图可见，Bert 其实和 ELMO 及 GPT 存在千丝万缕的关系，比如如果我们把 GPT 预训练阶段换成双向语言模型，那么就得到了 Bert；而如果我们把 ELMO 的特征抽取器换成 Transformer，那么我们也会得到 Bert。</p>\n<p>所以你可以看出：Bert 最关键两点，一点是特征抽取器采用 Transformer；第二点是预训练的时候采用双向语言模型。</p>\n<p>那么新问题来了：对于 Transformer 来说，怎么才能在这个结构上做双向语言模型任务呢？乍一看上去好像不太好搞。我觉得吧，其实有一种很直观的思路，怎么办？看看 ELMO 的网络结构图，只需要把两个 LSTM 替换成两个 Transformer，一个负责正向，一个负责反向特征提取，其实应该就可以。</p>\n<p>当然这是我自己的改造，Bert 没这么做。那么 Bert 是怎么做的呢？我们前面不是提过 Word2Vec 吗？我前面肯定不是漫无目的地提到它，提它是为了在这里引出那个 CBOW 训练方法，所谓写作时候埋伏笔的 “草蛇灰线，伏脉千里”，大概就是这个意思吧？</p>\n<p>前面提到了 CBOW 方法，它的核心思想是：在做语言模型任务的时候，我把要预测的单词抠掉，然后根据它的上文 Context-Before 和下文 Context-afte r 去预测单词。</p>\n<p>其实 Bert 怎么做的？Bert 就是这么做的。从这里可以看到方法间的继承关系。当然 Bert 作者没提 Word2Vec 及 CBOW 方法，这是我的判断，Bert 作者说是受到完形填空任务的启发，这也很可能，但是我觉得他们要是没想到过 CBOW 估计是不太可能的。</p>\n<p>从这里可以看出，在文章开始我说过 Bert 在模型方面其实没有太大创新，更像一个最近几年 NLP 重要技术的集大成者，原因在于此，当然我不确定你怎么看，是否认同这种看法，而且我也不关心你怎么看。其实 Bert 本身的效果好和普适性强才是最大的亮点。</p>\n<p><strong>最后，我讲讲我对 Bert 的评价和看法</strong>，我觉得 Bert 是 NLP 里里程碑式的工作，对于后面 NLP 的研究和工业应用会产生长久的影响，这点毫无疑问。但是从上文介绍也可以看出，从模型或者方法角度看，Bert 借鉴了 ELMO，GPT 及 CBOW，主要提出了 Masked 语言模型及 Next Sentence Prediction，但是这里 Next Sentence Prediction 基本不影响大局，而 Masked LM 明显借鉴了 CBOW 的思想。所以说 Bert 的模型没什么大的创新，更像最近几年 NLP 重要进展的集大成者，这点如果你看懂了上文估计也没有太大异议，如果你有大的异议，杠精这个大帽子我随时准备戴给你。</p>\n<p>如果归纳一下这些进展就是：首先是两阶段模型，第一阶段双向语言模型预训练，这里注意要用双向而不是单向，第二阶段采用具体任务 Fine-tuning 或者做特征集成；第二是特征抽取要用 Transformer 作为特征提取器而不是 RNN 或者 CNN；第三，双向语言模型可以采取 CBOW 的方法去做（当然我觉得这个是个细节问题，不算太关键，前两个因素比较关键）。Bert 最大的亮点在于效果好及普适性强，几乎所有 NLP 任务都可以套用 Bert 这种两阶段解决思路，而且效果应该会有明显提升。可以预见的是，未来一段时间在 NLP 应用领域，Transformer 将占据主导地位，而且这种两阶段预训练方法也会主导各种应用。</p>\n<p>另外，我们应该弄清楚预训练这个过程本质上是在做什么事情，本质上预训练是通过设计好一个网络结构来做语言模型任务，然后把大量甚至是无穷尽的无标注的自然语言文本利用起来，预训练任务把大量语言学知识抽取出来编码到网络结构中，当手头任务带有标注信息的数据有限时，这些先验的语言学特征当然会对手头任务有极大的特征补充作用，因为当数据有限的时候，很多语言学现象是覆盖不到的，泛化能力就弱，集成尽量通用的语言学知识自然会加强模型的泛化能力。如何引入先验的语言学知识其实一直是 NLP 尤其是深度学习场景下的 NLP 的主要目标之一，不过一直没有太好的解决办法，而 ELMO/GPT/Bert 的这种两阶段模式看起来无疑是解决这个问题自然又简洁的方法，这也是这些方法的主要价值所在。</p>\n<p>对于当前 NLP 的发展方向，我个人觉得有两点非常重要：</p>\n<ol>\n<li>一个是需要更强的特征抽取器，目前看 Transformer 会逐渐担当大任，但是肯定还是不够强的，需要发展更强的特征抽取器；</li>\n<li>第二个就是如何优雅地引入大量无监督数据中包含的语言学知识，注意我这里强调地是优雅，而不是引入，此前相当多的工作试图做各种语言学知识的嫁接或者引入，但是很多方法看着让人牙疼，就是我说的不优雅。</li>\n</ol>\n<p>目前看预训练这种两阶段方法还是很有效的，也非常简洁，当然后面肯定还会有更好的模型出现。</p>\n<p>完了，这就是预训练语言模型的前世今生。</p>\n<p>由于个人刚入门 NLP 方向，就不妄自总结，上述总结全部来自知乎文章：&lt;a href='<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80OTI3MTY5OQ==\">https://zhuanlan.zhihu.com/p/49271699</span>' target='_blank'&gt; 从 Word Embedding 到 Bert 模型 — 自然语言处理中的预训练技术发展史 -<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3Blb3BsZS96aGFuZy1qdW4tbGluLTc2\"> 张俊林</span> &lt;/a&gt;</p>\n<h1 id=\"十六-参考资料\"><a class=\"anchor\" href=\"#十六-参考资料\">#</a> 十六、参考资料</h1>\n<p>我只是知识的搬运工，想详细了解各个知识点的读者可以自行选择参考下列资料。</p>\n<blockquote>\n<ul>\n<li>\n<p>参考书籍：</p>\n<ul>\n<li>\n<p>《预训练语言模型》- 卲浩、刘一烽</p>\n</li>\n<li>\n<p>《基于 BERT 模型的自然语言处理实战》- 李金洪</p>\n</li>\n</ul>\n</li>\n<li>\n<p>参考论文：</p>\n<ul>\n<li>&lt;a href='<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDYuMDM3NjI=\">https://arxiv.org/abs/1706.03762</span>' target='_blank'&gt;Attention Is All You Need&lt;/a&gt;</li>\n<li>&lt;a href='<span class=\"exturl\" data-url=\"aHR0cHM6Ly90b29vYi5jb20vYXBpL29ianMvcmVhZC9ub3RlaWQvMjg3MTc5OTUv\">https://tooob.com/api/objs/read/noteid/28717995/</span>' target='_blank'&gt;BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding&lt;/a&gt;</li>\n</ul>\n</li>\n<li>\n<p>参考博客：</p>\n<ul>\n<li>&lt;a href='<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNzYwMTE2MQ==\">https://zhuanlan.zhihu.com/p/37601161</span>' target='_blank'&gt; 深度学习中的注意力模型（2017 版）&lt;/a&gt;</li>\n<li>&lt;a href='<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvUkx4V2V2VldIWGdYLVVjb3hEUzcwdw==\">https://mp.weixin.qq.com/s/RLxWevVWHXgX-UcoxDS70w</span>' target='_blank'&gt; 细讲 | Attention Is All You Need&lt;/a&gt;</li>\n<li>&lt;a href='<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80OTI3MTY5OQ==\">https://zhuanlan.zhihu.com/p/49271699</span>' target='_blank'&gt; 从 Word Embedding 到 Bert 模型 — 自然语言处理中的预训练技术发展史 &lt;/a&gt;</li>\n<li>&lt;a href='<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbmlja2NoZW4xMjEvcC8xNTA3MTg0NC5odG1s\">https://www.cnblogs.com/nickchen121/p/15071844.html</span>' target='_blank'&gt;Attention 和 Transformer 详解 &lt;/a&gt;</li>\n<li>&lt;a href='<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NDEyMTM3OA==\">https://zhuanlan.zhihu.com/p/44121378</span>' target='_blank'&gt;【NLP】Transformer 模型原理详解 &lt;/a&gt;</li>\n<li>&lt;a href='<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMzYyMjM1NTA=\">https://zhuanlan.zhihu.com/p/136223550</span>' target='_blank'&gt;LSTM 如何解决 RNN 带来的梯度消失问题 &lt;/a&gt;</li>\n<li>&lt;a href='<span class=\"exturl\" data-url=\"aHR0cDovL2phbGFtbWFyLmdpdGh1Yi5pby9pbGx1c3RyYXRlZC10cmFuc2Zvcm1lci8=\">http://jalammar.github.io/illustrated-transformer/</span>' target='_blank'&gt;The Illustrated Transformer&lt;/a&gt;</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n","categories":["NER"],"tags":["NER"]},{"title":"预训练语言模型的下游任务改造简介（如何使用词向量）","url":"/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/07%20%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%8B%E6%B8%B8%E4%BB%BB%E5%8A%A1%E6%94%B9%E9%80%A0%E7%AE%80%E4%BB%8B%EF%BC%88%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%AF%8D%E5%90%91%E9%87%8F%EF%BC%89/","content":"<h1 id=\"word2vec-是一个神经网络语言模型其次他的主要任务是做生成词向量q\"><a class=\"anchor\" href=\"#word2vec-是一个神经网络语言模型其次他的主要任务是做生成词向量q\">#</a> Word2Vec --》 是一个神经网络语言模型，其次他的主要任务是做（生成词向量，Q）</h1>\n<p>![image-20220614194418918](../../Library/Application Support/typora-user-images/image-20220614194418918.png)</p>\n<p>Word2Vec 模型是不是预训练模型？（是）</p>\n<p>一定是</p>\n<p>什么是预训练？</p>\n<p>给出两个任务 A 和 B，任务 A 已经做出了模型 A，任务 B 无法解决（通过使用模型 A，加快任务的解决）</p>\n<p>给你一个 NLP 里面的任务，给一个问题 X（Ni+ck），给出一个回答 Y（handsome）</p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/we%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84%E9%A2%84%E8%AE%AD%E7%BB%83.jpg\" alt=\"img\" /></p>\n<p>预训练语言模型终于出来（给出一句话，我们先使用独热编码（一一对应的一种表查询），再使用 Word2Vec 预训练好的 Q 矩阵直接得到词向量，然后进行接下来的任务）</p>\n<ol>\n<li>冻结：可以不改变 Q 矩阵</li>\n<li>微调：随着任务的改变，改变 Q 矩阵</li>\n</ol>\n","categories":["NER"],"tags":["NER"]},{"title":"Transformer","url":"/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/Transformer/","content":"<h1 id=\"框架概述\"><a class=\"anchor\" href=\"#框架概述\">#</a> 框架概述</h1>\n<p>1000*0.04=40--&gt;10</p>\n<p>5000*0.04=200--&gt;20</p>\n<p>预训练 --》NNLM--》word2Vec--》ELMo--》Attention</p>\n<p>NLP 中预训练的目的，其实就是为了生成词向量</p>\n<p>顺水推舟，transformer 其实就是 attention 的一个堆叠</p>\n<p>从一个宏观的角度，去看 transformer 到底在干嘛，然后在细分，再作总结</p>\n<p>总分总</p>\n<p>seq2seq</p>\n<p>一句话，一个视频</p>\n<p>序列（编码器）到序列（解码器）</p>\n<p>分成两部分，编码器和解码器</p>\n<h2 id=\"整体框架\"><a class=\"anchor\" href=\"#整体框架\">#</a> 整体框架</h2>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLSVFNiU5NSVCNCVFNCVCRCU5MyVFNiVBMSU4NiVFNiU5RSVCNi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf - 整体框架.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<h2 id=\"机器翻译流程transformer\"><a class=\"anchor\" href=\"#机器翻译流程transformer\">#</a> 机器翻译流程（Transformer）</h2>\n<p>通过机器翻译来做解释</p>\n<p>给一个输入，给出一个输出（输出是输入的翻译的结果）</p>\n<p>“我是一个学生”  --》（通过 Transformer） I am a student</p>\n<p>流程 1</p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E6%A1%86%E6%9E%B6%E7%AE%80%E5%8C%96.jpg\" alt=\"img\" /></p>\n<p>编码器和解码器</p>\n<p>编码器：把输入变成一个词向量（Self-Attetion）</p>\n<p>解码器：得到编码器输出的词向量后，生成翻译的结果</p>\n<p>流程 2</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLWVkLSVFNiVBMSU4NiVFNiU5RSVCNi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-ed - 框架.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<p>Nx 的意思是，编码器里面又有 N 个小编码器（默认 N=6）</p>\n<p>通过 6 个编码器，对词向量一步又一步的强化（增强）</p>\n<p>流程 3</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLWVkLSVFNSVBNCU4RCVFNiU5RCU4Mi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-ed - 复杂.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<p>说了这么多，了解 Transformer 就是了解 Transformer 里的小的编码器（Encoder）和小的解码器（Decoder）</p>\n<p>FFN（Feed Forward）：w2(（w1x+b1）)+b2</p>\n<p>流程 4</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2VkLSVFNyVCQiU4NiVFNSU4OCU4Ni5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed - 细分.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<h1 id=\"transformer-的编码器encodes我在做更优秀的词向量\"><a class=\"anchor\" href=\"#transformer-的编码器encodes我在做更优秀的词向量\">#</a> Transformer 的编码器（Encodes）—— 我在做更优秀的词向量</h1>\n<h2 id=\"transformer-框架\"><a class=\"anchor\" href=\"#transformer-框架\">#</a> Transformer 框架</h2>\n<p>seq（编码器）2seq（解码器）</p>\n<ol>\n<li>通过编码器对序列进行向量化（词向量）</li>\n<li>把词向量输入到解码器，得到结果（生成单词）</li>\n</ol>\n<h2 id=\"编码器概略图\"><a class=\"anchor\" href=\"#编码器概略图\">#</a> 编码器概略图</h2>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2VkLSVFNyVCQiU4NiVFNSU4OCU4Ni5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed - 细分.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<p>编码器包括两个子层，Self-Attention、Feed Forward</p>\n<p>每一个子层的传输过程中都会有一个（残差网络 + 归一化）</p>\n<h2 id=\"编码器详细图\"><a class=\"anchor\" href=\"#编码器详细图\">#</a> 编码器详细图</h2>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2VuY29kZXItJUU4JUFGJUE2JUU3JUJCJTg2JUU1JTlCJUJFLnBuZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/encoder - 详细图.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<p>Thinking</p>\n<p>--》得到绿色的 x1（词向量，可以通过 one-hot、word2vec 得到）+ 叠加位置编码（给 x1 赋予位置属性）得到黄色的 x1</p>\n<p>--》输入到 Self-Attention 子层中，做注意力机制（x1、x2 拼接起来的一句话做），得到 z1（x1 与 x1，x2 拼接起来的句子做了自注意力机制的词向量，表征的仍然是 thinking），也就是说 z1 拥有了位置特征、句法特征、语义特征的词向量</p>\n<p>--》残差网络（避免梯度消失，w3 (w2 (w1x+b1)+b2)+b3，如果 w1，w2，w3 特别小，0.0000000000000000……1，x 就没了，【w3 (w2 (w1x+b1)+b2)+b3+x】），归一化（LayerNorm），做标准化（避免梯度爆炸），得到了深粉色的 z1</p>\n<p>--》Feed Forward，Relu（w2 (w1x+b1)+b2），（前面每一步都在做线性变换，wx+b，线性变化的叠加永远都是线性变化（线性变化就是空间中平移和扩大缩小），通过 Feed Forward 中的 Relu 做一次非线性变换，这样的空间变换可以无限拟合任何一种状态了），得到 r1（是 thinking 的新的表征）</p>\n<p>总结下（这是重点，上面听不懂都没关系）：做词向量，只不过这个词向量更加优秀，让这个词向量能够更加精准的表示这个单词、这句话。</p>\n<h1 id=\"transformer-的解码器decoders我要生成一个又一个单词\"><a class=\"anchor\" href=\"#transformer-的解码器decoders我要生成一个又一个单词\">#</a> Transformer 的解码器（Decoders）—— 我要生成一个又一个单词</h1>\n<h2 id=\"transformer-编码器\"><a class=\"anchor\" href=\"#transformer-编码器\">#</a> Transformer 编码器</h2>\n<p>编码器在干吗：词向量、图片向量，总而言之，编码器就是让计算机能够更合理地（不确定性的）认识人类世界客观存在的一些东西</p>\n<h2 id=\"transformer-解码器\"><a class=\"anchor\" href=\"#transformer-解码器\">#</a> Transformer 解码器</h2>\n<p>解码器会接收编码器生成的词向量，然后通过这个词向量去生成翻译的结果。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL2VkLSVFNyVCQiU4NiVFNSU4OCU4Ni5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ed - 细分.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<p>解码器的 Self-Attention 在编码已经生成的单词</p>\n<p>假如目标词 “我是一个学生”---》masked Self-Attention</p>\n<p>训练阶段：目标词 “我是一个学生” 是已知的，然后 Self-Attention 是对 “我是一个学生” 做计算</p>\n<p>如果不做 masked，每次训练阶段，都会获得全部的信息</p>\n<p>如果做 masked，Self-Attention 第一次对 “我” 做计算</p>\n<p>Self-Attention 第二次对 “我是” 做计算</p>\n<p>……</p>\n<p>测试阶段：</p>\n<ol>\n<li>目标词未知，假设目标词是 “我是一个学生”（未知），Self-Attention 第一次对 “我” 做计算</li>\n<li>第二次对 “我是” 做计算</li>\n<li>……</li>\n</ol>\n<p>而测试阶段，没生成一点，获得一点</p>\n<h2 id=\"生成词\"><a class=\"anchor\" href=\"#生成词\">#</a> 生成词</h2>\n<p>&lt;img src=&quot;../../ed - 交互.jpg&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<p>Linear 层转换成词表的维度</p>\n<p>softmax 得到最大词的概率</p>\n<p>softmax 细话</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLSVFNiU5QyU4MCVFNSU5MCU4RSVFOCVCRSU5MyVFNSU4NyVCQS5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf - 最后输出.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<p>单词表</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLSVFNiU5QyU4MCVFNyVCQiU4OCVFOCVCRSU5MyVFNSU4NyVCQSVFNyVCQiU5MyVFNiU5RSU5Qy5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf - 最终输出结果.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:80%;&quot; /&gt;</p>\n<h1 id=\"transformer-的动态流程\"><a class=\"anchor\" href=\"#transformer-的动态流程\">#</a> Transformer 的动态流程</h1>\n<p>机器翻译：德语（中文）翻译成英文</p>\n<h2 id=\"生成一个词\"><a class=\"anchor\" href=\"#生成一个词\">#</a> 生成一个词</h2>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90.gif\" alt=\"img\" /></p>\n<h2 id=\"生成所有词\"><a class=\"anchor\" href=\"#生成所有词\">#</a> 生成所有词</h2>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E5%8A%A8%E6%80%81%E7%BB%93%E6%9E%9C-2.gif\" alt=\"img\" /></p>\n<h2 id=\"transformer-框架-2\"><a class=\"anchor\" href=\"#transformer-框架-2\">#</a> Transformer 框架</h2>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf-%E6%95%B4%E4%BD%93%E6%A1%86%E6%9E%B6.jpg\" alt=\"img\" /></p>\n<h1 id=\"transformer-解码器的两个为什么为什么做掩码-为什么用编码器-解码器注意力\"><a class=\"anchor\" href=\"#transformer-解码器的两个为什么为什么做掩码-为什么用编码器-解码器注意力\">#</a> Transformer 解码器的两个为什么（为什么做掩码、为什么用编码器 - 解码器注意力）</h1>\n<h2 id=\"transformer-的编码器和解码器\"><a class=\"anchor\" href=\"#transformer-的编码器和解码器\">#</a> Transformer 的编码器和解码器</h2>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3RmLSVFNiU5NSVCNCVFNCVCRCU5MyVFNiVBMSU4NiVFNiU5RSVCNi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/tf - 整体框架.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h2 id=\"问题一为什么-decoder-需要做-mask\"><a class=\"anchor\" href=\"#问题一为什么-decoder-需要做-mask\">#</a> 问题一：为什么 Decoder 需要做 Mask</h2>\n<p>机器翻译：源语句（我爱中国），目标语句（I love China）</p>\n<p>为了解决训练阶段和测试阶段的 gap（不匹配）</p>\n<p>训练阶段：解码器会有输入，这个输入是目标语句，就是 I love China，通过已经生成的词，去让解码器更好的生成（每一次都会把所有信息告诉解码器）</p>\n<p>测试阶段：解码器也会有输入，但是此时，测试的时候是不知道目标语句是什么的，这个时候，你每生成一个词，就会有多一个词放入目标语句中，每次生成的时候，都是已经生成的词（测试阶段只会把已经生成的词告诉解码器）</p>\n<p>为了匹配，为了解决这个 gap，masked Self-Attention 就登场了，我在训练阶段，我就做一个 masked，当你生成第一个词，我啥也不告诉你，当你生成第二个词，我告诉第一个词</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL21hc2stYXR0ZW50aW9uLW1hcC5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/mask-attention-map.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h2 id=\"问题二为什么-encoder-给予-decoders-的是-k-v-矩阵\"><a class=\"anchor\" href=\"#问题二为什么-encoder-给予-decoders-的是-k-v-矩阵\">#</a> 问题二：为什么 Encoder 给予 Decoders 的是 K、V 矩阵</h2>\n<p>Q 来源解码器，K=V 来源于编码器</p>\n<p>Q 是查询变量，Q 是已经生成的词</p>\n<p>K=V 是源语句</p>\n<p>当我们生成这个词的时候，通过已经生成的词和源语句做自注意力，就是确定源语句中哪些词对接下来的词的生成更有作用，首先他就能找到当前生成词</p>\n<p>我爱中国</p>\n<p>通过部分（生成的词）去全部（源语句）的里面挑重点</p>\n<p>Q 是源语句，K，V 是已经生成的词，源语句去已经生成的词里找重点 ，找信息，已经生成的词里面压根就没有下一个词</p>\n<p>解决了以前的 seq2seq 框架的问题</p>\n<p>lstm 做编码器（得到词向量 C），再用 lstm 做解码器做生成</p>\n<p>用这种方法去生成词，每一次生成词，都是通过 C 的全部信息去生成</p>\n<p>很多信息对于当前生成词而言都是没有意义的</p>\n<p>用 Pytorch 去构建 Transformer 的源码（）</p>\n<h1 id=\"位置编码公式详细理解补充\"><a class=\"anchor\" href=\"#位置编码公式详细理解补充\">#</a> 位置编码公式详细理解补充</h1>\n<p>Self-Attention：对于每个词而言都是无位置关系，把每个词的顺序打乱，得到的注意力值依然不变</p>\n<p>通过 t1 告诉你，x1 是在前面，x2 在 x1 的后面</p>\n<ul>\n<li>位置编码</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNSU5MCU5MSVFOSU4NyU4Ri5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置向量.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<ul>\n<li>位置编码公式</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNyVCQyU5NiVFNyVBMCU4MSVFNSU4NSVBQyVFNSVCQyU4Ri5wbmc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置编码公式.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>位置编码怎么用</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNyVCQyU5NiVFNyVBMCU4MSVFNSU5MiU4QyVFOCVBRiU4RCVFNSU5MCU5MSVFOSU4NyU4RiVFNCVCOSU4QiVFNSU5MiU4Qy5wbmc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置编码和词向量之和.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<ul>\n<li>位置编码底层解释</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNSVCNSU4QyVFNSU4NSVBNSVFOCVBNyVBMyVFOSU4NyU4QS5wbmc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置嵌入解释.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sin (pos+k) &#x3D; sin (pos)*cos (k) + cos (pos)*sin (k)  # sin 表示的是偶数维度</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cos (pos+k) &#x3D; cos (pos) cos (k) - sin (pos)*sin (k)  # cos 表示的是奇数维度</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>他特别在 pos+k 是 pos 和 k 的线性组合</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>我爱你 ，现在我做第三个词 “你” 的位置编码</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>pos &#x3D; 3 &#x3D; 1+2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>pos + k &#x3D; 3 &#x3D;  1+2 &#x3D; 1*2+1*2</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>pos &#x3D; 10</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>1+9，2+8，3+7</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>这句话变成 “你爱我”，现在我们仍然做第三个词 “我” 的位置编码</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>pos &#x3D; 3 &#x3D; 1+2</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>pos + k &#x3D; 3 &#x3D;  1+2 &#x3D; 1*2+1*2</pre></td></tr></table></figure>","categories":["NER"],"tags":["NER"]},{"title":"注意力机制（Attention ）","url":"/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6%EF%BC%88Attention%20%EF%BC%89/","content":"<h1 id=\"attention注意力机制\"><a class=\"anchor\" href=\"#attention注意力机制\">#</a> Attention（注意力机制）</h1>\n<p>你会注意什么？</p>\n<p>大数据（什么数据都有，重要的，不重要的）</p>\n<p>对于重要的数据，我们要使用</p>\n<p>对于不重要的数据，我们不太想使用</p>\n<p>但是，对于一个模型而言（CNN、LSTM），很难决定什么重要，什么不重要</p>\n<p>由此，注意力机制诞生了（有人发现了如何去在深度学习的模型上做注意力）</p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E4%BA%BA%E7%B1%BB%E7%9A%84%E8%A7%86%E8%A7%89%E6%B3%A8%E6%84%8F%E5%8A%9B.jpg\" alt=\"img\" /></p>\n<p>红色的是科学家们发现，如果给你一张这个图，你眼睛的重点会聚焦在红色区域</p>\n<p>人 --》看脸</p>\n<p>文章看标题</p>\n<p>段落看开头</p>\n<p>后面的落款</p>\n<p>这些红色区域可能包含更多的信息，更重要的信息</p>\n<p>注意力机制：我们会把我们的焦点聚焦在比较重要的事物上</p>\n<h1 id=\"怎么做注意力\"><a class=\"anchor\" href=\"#怎么做注意力\">#</a> 怎么做注意力</h1>\n<p>我（查询对象 Q），这张图（被查询对象 V）</p>\n<p>我看这张图，第一眼，我就会去判断哪些东西对我而言更重要，哪些对我而言又更不重要（去计算 Q 和 V 里的事物的重要度）</p>\n<p>重要度计算，其实是不是就是相似度计算（更接近），点乘其实是求内积（不要关心为什么可以）</p>\n<p>Q，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo>=</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>k</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">K =k_1,k_2,\\cdots,k_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> ，我们一般使用点乘的方式</p>\n<p>通过点乘的方法计算 Q 和 K 里的每一个事物的相似度，就可以拿到 Q 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">k_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的相似值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">s_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，Q 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">k_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的相似值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">s_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，Q 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>k</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">k_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的相似值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">s_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>做一层 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>s</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>s</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">softmax(s_1,s_2,\\cdots,s_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 就可以得到概率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a_1,a_2,\\cdots,a_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p>进而就可以找出哪个对 Q 而言更重要了</p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/attention-%E8%AE%A1%E7%AE%97%E5%9B%BE.png\" alt=\"img\" /></p>\n<p>我们还得进行一个汇总，当你使用 Q 查询结束了后，Q 已经失去了它的使用价值了，我们最终还是要拿到这张图片的，只不过现在的这张图片，它多了一些信息（多了于我而言更重要，更不重要的信息在这里）</p>\n<p>V = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>v</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(v_1,v_2,\\cdots,v_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>∗</mo><mo>+</mo><mo stretchy=\"false\">(</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>v</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>v</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>v</mi><mn>2</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><mo>∗</mo><msub><mi>v</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a_1,a_2,\\cdots,a_n)*+(v_1,v_2,\\cdots,v_n)=(a_1*v_1+a_2*v_2+\\cdots+a_n*v_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">+</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61528em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61528em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> = V'</p>\n<p>这样的话，就得到了一个新的 V'，这个新的 V' 就包含了，哪些更重要，哪些不重要的信息在里面，然后用 V' 代替 V</p>\n<p>一般 K=V，在 Transformer 里，K!=V 可不可以，可以的，但是 K 和 V 之间一定具有某种联系，这样的 QK 点乘才能指导 V 哪些重要，哪些不重要</p>\n<p>51， 49---》 0.51，0.49</p>\n<p>80/8，20/8 --》 0.9999999999， 0.0000000001</p>\n<h3 id=\"10-3-09-01\"><a class=\"anchor\" href=\"#10-3-09-01\">#</a> 10 / 3 --&gt; 0.9, 0.1</h3>\n<p>a1 和 a2 之间的差额越大，这个概率就越离谱</p>\n<h1 id=\"self-attention自注意力机制\"><a class=\"anchor\" href=\"#self-attention自注意力机制\">#</a> Self-Attention（自注意力机制）</h1>\n<h2 id=\"注意力机制\"><a class=\"anchor\" href=\"#注意力机制\">#</a> 注意力机制</h2>\n<p>看一个物体的时候，我们倾向于一些重点，把我们的焦点放到更重要的信息上</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCQSVCQSVFNyVCMSVCQiVFNyU5QSU4NCVFOCVBNyU4NiVFOCVBNyU4OSVFNiVCMyVBOCVFNiU4NCU4RiVFNSU4QSU5Qi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 人类的视觉注意力.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>第一眼看到这个图，不会说把所有的信息全部看完</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3NlbGYtYXR0ZW50aW9uLmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>QK 相乘求相似度，做一个 scale（未来做 softmax 的时候避免出现极端情况）</p>\n<p>然后做 Softmax 得到概率</p>\n<p>新的向量表示了 K 和 V（K==V），然后这种表示还暗含了 Q 的信息（于 Q 而言，K 里面重要的信息），也就是说，挑出了 K 里面的关键点</p>\n<h2 id=\"自-注意力机制self-attention向量\"><a class=\"anchor\" href=\"#自-注意力机制self-attention向量\">#</a> 自 - 注意力机制（Self-Attention）（向量）</h2>\n<p>Self-Attention 的关键点再于，不仅仅是 K<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≈</mo></mrow><annotation encoding=\"application/x-tex\">\\approx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.48312em;vertical-align:0em;\"></span><span class=\"mrel\">≈</span></span></span></span>V<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≈</mo></mrow><annotation encoding=\"application/x-tex\">\\approx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.48312em;vertical-align:0em;\"></span><span class=\"mrel\">≈</span></span></span></span>Q 来源于同一个 X，这三者是同源的</p>\n<p>通过 X 找到 X 里面的关键点</p>\n<p>并不是 K=V=Q=X，而是通过三个参数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>Q</mi></msub><mo separator=\"true\">,</mo><msub><mi>W</mi><mi>K</mi></msub><mo separator=\"true\">,</mo><msub><mi>W</mi><mi>V</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_Q,W_K,W_V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>接下来的步骤和注意力机制一模一样</p>\n<ol>\n<li>\n<p>Q、K、V 的获取</p>\n<ol>\n<li>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3Frdi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qkv.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</li>\n</ol>\n</li>\n<li>\n<p>Matmul：</p>\n<ol>\n<li>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL1EtSyVFNCVCOSU5OCVFNyVBNyVBRi5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/Q-K 乘积.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</li>\n</ol>\n</li>\n<li>\n<p>Scale+Softmax：</p>\n<ol>\n<li>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3FrLXNjYWxlLmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qk-scale.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</li>\n</ol>\n</li>\n<li>\n<h3 id=\"matmul\"><a class=\"anchor\" href=\"#matmul\">#</a> Matmul：</h3>\n<ol>\n<li>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3FrLXNvZnRtYXguanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qk-softmax.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</li>\n</ol>\n</li>\n</ol>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">z_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示的就是 thinking 的新的向量表示</p>\n<p>对于 thinking，初始词向量为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>现在我通过 thinking  machines 这句话去查询这句话里的每一个单词和 thinking 之间的相似度</p>\n<p>新的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">z_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 依然是 thinking 的词向量表示，只不过这个词向量的表示蕴含了 thinking machines 这句话对于 thinking 而言哪个更重要的信息</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3NlbGYtYXR0ZW50aW9uLSVFNSVBNSVCRCVFNSVBNCU4NDIuanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention - 好处 2.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n<p>不做注意力，its 的词向量就是单纯的 its，没有任何附加信息</p>\n<blockquote>\n<p>也就是说 its 有 law 这层意思，而通过自注意力机制得到新的 its 的词向量，则会包含一定的 laws 和 application 的信息</p>\n</blockquote>\n<h2 id=\"自注意力机制矩阵\"><a class=\"anchor\" href=\"#自注意力机制矩阵\">#</a> 自注意力机制（矩阵）</h2>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL1FLVi0lRTclOUYlQTklRTklOTglQjUlRTglQTElQTglRTclQTQlQkEuanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/QKV - 矩阵表示.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL1FLVlotJUU3JUJCJTkzJUU2JTlFJTlDLmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/QKVZ - 结果.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNiVCMyVBOCVFNiU4NCU4RiVFNSU4QSU5QiVFNiU5QyVCQSVFNSU4OCVCNiVFNyU5RiVBOSVFOSU5OCVCNSVFNSU5QiVCRS5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 注意力机制矩阵图.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h1 id=\"self-attention相比较-rnn和lstm的优缺点\"><a class=\"anchor\" href=\"#self-attention相比较-rnn和lstm的优缺点\">#</a> Self-Attention 相比较 RNN 和 LSTM 的优缺点</h1>\n<h2 id=\"rnn\"><a class=\"anchor\" href=\"#rnn\">#</a> RNN</h2>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/RNN-unrolled.png\" alt=\"img\" /></p>\n<p>无法做长序列，当一段话达到 50 个字，效果很差了</p>\n<h2 id=\"lstm\"><a class=\"anchor\" href=\"#lstm\">#</a> LSTM</h2>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/LSTM%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84.jpg\" alt=\"img\" /></p>\n<p>LSTM 通过各种门，遗忘门，选择性的可以记忆之前的信息（200 词）</p>\n<h2 id=\"self-attention-和-rnns-的区别\"><a class=\"anchor\" href=\"#self-attention-和-rnns-的区别\">#</a> Self-Attention 和 RNNs 的区别</h2>\n<p>RNNs 长序列依赖问题，无法做并行</p>\n<p>Self-Attention 得到的新的词向量具有句法特征和语义特征（词向量的表征更完善）</p>\n<h3 id=\"句法特征\"><a class=\"anchor\" href=\"#句法特征\">#</a> 句法特征</h3>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3NlbGYtYXR0ZW50aW9uLSVFNSVBNSVCRCVFNSVBNCU4NDEuanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention - 好处 1.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n<h3 id=\"语义特征\"><a class=\"anchor\" href=\"#语义特征\">#</a> 语义特征</h3>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3NlbGYtYXR0ZW50aW9uLSVFNSVBNSVCRCVFNSVBNCU4NDIuanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/self-attention - 好处 2.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h2 id=\"并行计算\"><a class=\"anchor\" href=\"#并行计算\">#</a> 并行计算</h2>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL3FrLXNvZnRtYXguanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/qk-softmax.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h1 id=\"masked-self-attention掩码自注意力机制\"><a class=\"anchor\" href=\"#masked-self-attention掩码自注意力机制\">#</a> Masked Self-Attention（掩码自注意力机制）</h1>\n<h2 id=\"masked掩码-self-attention-在自注意力模型上面做了改进\"><a class=\"anchor\" href=\"#masked掩码-self-attention-在自注意力模型上面做了改进\">#</a> Masked（掩码） Self-Attention--》在自注意力模型上面做了改进</h2>\n<p>为什么要做这个改进：生成模型，生成单词，一个一个生成的</p>\n<p>当我们做生成任务的时候，我们也想对生成的这个单词做注意力计算，但是，生成的句子是一个一个单词生成的</p>\n<p>I have a dream</p>\n<ol>\n<li>\n<p>I  第一次注意力计算，只有 I</p>\n</li>\n<li>\n<p>I have 第二次，只有 I 和 have</p>\n</li>\n<li>\n<p>I have a</p>\n</li>\n<li>\n<p>I have a dream</p>\n</li>\n<li>\n<p>I have a dream &lt;eos&gt;</p>\n</li>\n</ol>\n<p>掩码自注意力机制应运而生</p>\n<p>掩码后 1</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL21hc2stYXR0ZW50aW9uLW1hcC5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/mask-attention-map.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>掩码后 2</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL21hc2stYXR0ZW50aW9uLW1hcC1zb2Z0bWF4LmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/mask-attention-map-softmax.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>未来我们讲 Transformer 的时候会详细讲！</p>\n<p>Multi-head Self-Attention。</p>\n<h1 id=\"multi-head-self-attention从空间角度解释为什么做多头\"><a class=\"anchor\" href=\"#multi-head-self-attention从空间角度解释为什么做多头\">#</a> Multi-Head Self-Attention（从空间角度解释为什么做多头）</h1>\n<h2 id=\"multi-head-self-attention多头自注意力\"><a class=\"anchor\" href=\"#multi-head-self-attention多头自注意力\">#</a> Multi-Head Self-Attention（多头自注意力）</h2>\n<p>Z 相比较 X 有了提升，通过 Multi-Head Self-Attention，得到的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi><msup><mrow></mrow><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">Z{&#x27;}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mord\"><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span> 相比较 Z 又有了进一步提升</p>\n<p>多头自注意力，问题来了，多头是什么，多头的个数用 h 表示，一般<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>=</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">h=8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">8</span></span></span></span>，我们通常使用的是 8 头自注意力</p>\n<p>什么是多头</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL211bHRpLWhlYWQtYXR0ZW50aW9uLnBuZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/multi-head-attention.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>如何多头 1</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLzgtaGVhZC1hdHRlbnRpb24uanBn\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/8-head-attention.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>对于 X，我们不是说，直接拿 X 去得到 Z，而是把 X 分成了 8 块（8 头），得到 Z0-Z7</p>\n<p>如何多头 2</p>\n<p>然后把 Z0-Z7 拼接起来，再做一次线性变换（改变维度）得到 Z</p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/8-z-%E6%8B%BC%E6%8E%A5.jpg\" alt=\"img\" /></p>\n<p>有什么作用？</p>\n<p>机器学习的本质是什么：y=<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span> (wx+b)，在做一件什么事情，非线性变换（把一个看起来不合理的东西，通过某个手段（训练模型），让这个东西变得合理）</p>\n<p>非线性变换的本质又是什么？改变空间上的位置坐标，任何一个点都可以在维度空间上找到，通过某个手段，让一个不合理的点（位置不合理），变得合理</p>\n<p>这就是词向量的本质</p>\n<p>one-hot 编码（0101010）</p>\n<p>word2vec（11，222，33）</p>\n<p>emlo（15，3，2）</p>\n<p>attention（124，2，32）</p>\n<p>multi-head attention（1231，23，3），把 X 切分成 8 块（8 个子空间），这样一个原先在一个位置上的 X，去了空间上 8 个位置，通过对 8 个点进行寻找，找到更合适的位置</p>\n<p>词向量的大小是 512</p>\n<p>假设你的任务，视频向量是 5120，80</p>\n<p>对计算机的性能提出了要求</p>\n<h2 id=\"多头流程图\"><a class=\"anchor\" href=\"#多头流程图\">#</a> 多头流程图</h2>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HL211bHRpLWhlYWQtJUU2JThCJUJDJUU2JThFJUE1LmpwZw==\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/multi-head - 拼接.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h1 id=\"positional-encoding-为什么-self-attention-需要位置编码\"><a class=\"anchor\" href=\"#positional-encoding-为什么-self-attention-需要位置编码\">#</a> Positional Encoding （为什么 Self-Attention 需要位置编码）</h1>\n<h2 id=\"attention\"><a class=\"anchor\" href=\"#attention\">#</a> Attention</h2>\n<p>优点：</p>\n<ol>\n<li>解决了长序列依赖问题</li>\n<li>可以并行</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>\n<p>开销变大了</p>\n</li>\n<li>\n<p>既然可以并行，也就是说，词与词之间不存在顺序关系（打乱一句话，这句话里的每个词的词向量依然不会变），即无位置关系（既然没有，我就加一个，通过位置编码的形式加）</p>\n</li>\n</ol>\n<p>位置编码的问题</p>\n<h2 id=\"为什么需要位置编码\"><a class=\"anchor\" href=\"#为什么需要位置编码\">#</a> 为什么需要位置编码</h2>\n<h2 id=\"位置编码怎么做的\"><a class=\"anchor\" href=\"#位置编码怎么做的\">#</a> 位置编码怎么做的</h2>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNSU5MCU5MSVFOSU4NyU4Ri5qcGc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置向量.jpg</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h2 id=\"具体做法\"><a class=\"anchor\" href=\"#具体做法\">#</a> 具体做法</h2>\n<ul>\n<li>做法 1</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNyVCQyU5NiVFNyVBMCU4MSVFNSU4NSVBQyVFNSVCQyU4Ri5wbmc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置编码公式.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<ul>\n<li>做法 2</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNyVCQyU5NiVFNyVBMCU4MSVFNSU5MiU4QyVFOCVBRiU4RCVFNSU5MCU5MSVFOSU4NyU4RiVFNCVCOSU4QiVFNSU5MiU4Qy5wbmc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置编码和词向量之和.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h2 id=\"为什么这么做有用\"><a class=\"anchor\" href=\"#为什么这么做有用\">#</a> 为什么这么做有用</h2>\n<p>pos+K=5，我在计算第 5 个单词的位置编码的时候</p>\n<p>pos=1，k=4</p>\n<p>pos=2，k=3</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdtZC5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL0JFUlRfSU1HLyVFNCVCRCU4RCVFNyVCRCVBRSVFNSVCNSU4QyVFNSU4NSVBNSVFOCVBNyVBMyVFOSU4NyU4QS5wbmc=\">https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/ 位置嵌入解释.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n","categories":["NER"],"tags":["NER"]},{"title":"ELMo模型（双向LSTM模型解决词向量多义问题）","url":"/2024/02/07/NER/Pre-training-language-model-main/%E7%AC%AC%E4%B8%80%E7%AF%87%20Transformer%E3%80%81GPT%E3%80%81BERT%EF%BC%8C%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F%EF%BC%88%E7%90%86%E8%AE%BA%EF%BC%89/08%20ELMo%E6%A8%A1%E5%9E%8B%EF%BC%88%E5%8F%8C%E5%90%91LSTM%E6%A8%A1%E5%9E%8B%E8%A7%A3%E5%86%B3%E8%AF%8D%E5%90%91%E9%87%8F%E5%A4%9A%E4%B9%89%E9%97%AE%E9%A2%98%EF%BC%89/","content":"<h1 id=\"word2vec-模型\"><a class=\"anchor\" href=\"#word2vec-模型\">#</a> Word2Vec 模型</h1>\n<p>NNLM 模型（是不是在预测下一个词，副产品是词向量）</p>\n<p>Word2Vec 模型：专门做词向量</p>\n<ol>\n<li>CBOW</li>\n<li>Skip-gram</li>\n</ol>\n<p>![image-20220614193540503](../../Library/Application Support/typora-user-images/image-20220614193540503.png)</p>\n<p>apple，苹果，</p>\n<h1 id=\"elmo\"><a class=\"anchor\" href=\"#elmo\">#</a> ELMo</h1>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/we%E5%A4%9A%E4%B9%89%E8%AF%8D%E9%97%AE%E9%A2%98.jpg\" alt=\"img\" /></p>\n<p>elmo 解决多义词问题</p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/word2vec.jpg\" alt=\"img\" /></p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/%E5%9F%BA%E4%BA%8E%E4%B8%8A%E4%B8%8B%E6%96%87%E7%9A%84emedding.jpg\" alt=\"img\" /></p>\n<p>ELMo（专门做词向量，通过预训练）</p>\n<p>不只是训练一个 Q 矩阵，我还可以把这个次的上下文信息融入到这个 Q 矩阵中</p>\n<p>左边的 LSTM 获取 E2 的上文信息，右边就是下文信息</p>\n<p>x1,x2, x4,x5 --&gt; Word2Vec x1+x2+x4+x5 ---&gt; 预测那一个词</p>\n<p>获取上下文信息后，把三层的信息进行一个叠加</p>\n<p>E1+E2+E3 = K1 一个新的词向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≈</mo></mrow><annotation encoding=\"application/x-tex\">\\approx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.48312em;vertical-align:0em;\"></span><span class=\"mrel\">≈</span></span></span></span> E1</p>\n<p>E2,E3 相当于两个上下文信息</p>\n<p>E1+E2+E3+E4</p>\n<p>K1 包含了第一个词的词向量包含单词特征、句法特征、语义特征</p>\n<p>怎么用</p>\n<p>E2，E3 不同，E1+E2+E3 不同</p>\n<p>apple --》 我吃了一个 苹果 -- 》 [1,20,10]</p>\n<p>apple --》我在用苹果手机 --》[1,10,20]</p>\n<p><img data-src=\"https://imgmd.oss-cn-shanghai.aliyuncs.com/BERT_IMG/elmo%E8%AE%AD%E7%BB%83%E5%90%8E%E7%9A%84%E4%BD%BF%E7%94%A8.jpg\" alt=\"img\" /></p>\n<p>LSTM 无法并行，长期依赖</p>\n<p>Attention</p>\n","categories":["NER"],"tags":["NER"]},{"title":"BERT & Transformer & CRF","url":"/2024/02/15/NER/BERT&Transformer/","content":"<h1 id=\"bert\"><a class=\"anchor\" href=\"#bert\">#</a> BERT</h1>\n<h2 id=\"什么是bert\"><a class=\"anchor\" href=\"#什么是bert\">#</a> 什么是 BERT</h2>\n<ul>\n<li>BERT 是 2018 年 10 月由 Google Al 研究院提出的一种预训练模型</li>\n<li>BERT 的全称是 Bidirectional Encoder Representation from Transformers</li>\n<li>BERT 在机器阅读理解顶级水平测试 SQuAD1.1 中表现出惊人的成绩：全部两个衡量指标上全面超越人类，并且在 11 种不同 NLP 测试中创出 S0TA 表现。包括将 GLUE 基准推高至 80.4%<br />\n(绝对改进 7.6%)，MultiNL 准确度达到 86.7%（绝对改进 5.6%）. 成为 NLP 发展史上的里程碑式的模型成就</li>\n</ul>\n<h2 id=\"bert的架构\"><a class=\"anchor\" href=\"#bert的架构\">#</a> BERT 的架构</h2>\n<p>总体架构：如下图所示，最左边的就是 BERT 的架构图，可以很清楚的看到 BERT 采用了<br />\n Transformer Encoder block 进行连接，因为是一个典型的双向编码模型。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/14/oHQFl.png\" alt=\"tu\" title=\"BERT的架构\" /></p>\n<ul>\n<li>从上面的架构图中可以看到，宏观上 BERT 分三个主要模块：\n<ul>\n<li>最底层黄色标记的 Embedding 模块</li>\n<li>中间层蓝色标记的 Transformer 模块</li>\n<li>最上层绿色标记的预微调模块</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"embedding模块\"><a class=\"anchor\" href=\"#embedding模块\">#</a> Embedding 模块</h3>\n<p>BERT 中的该模块是由三种 Embedding 共同组成而成，如下图:</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/14/oHRhd.png\" alt=\"tu\" title=\"Embedding模块\" /></p>\n<ul>\n<li>Token Embeddings 是词嵌入张量，第一个单词是 CLS 标志，可以用于之后的分类任务</li>\n<li>Segment Embeddings 是句子分段嵌入张量，是为了服务后续的两个句子为输入的预训练任务</li>\n<li>Position Embeddings 是位置编码张量，此处注意和传统的 Transformer 不同，不是三角函数计算的固定位置编码，而是通过学习得出来的</li>\n<li>整个 Embedding 模块的输出张量就是这 3 个张量的直接加和结果</li>\n</ul>\n<h3 id=\"双向transformer模块\"><a class=\"anchor\" href=\"#双向transformer模块\">#</a> 双向 Transformer 模块</h3>\n<p>BERT 中只使用了经典 Transformer 架构中的 Encoder 部分，完全舍弃了 Decoder 部分，而两大预训练任务也集中体现在训练 Transformer 模块中。</p>\n<h3 id=\"预微调模块\"><a class=\"anchor\" href=\"#预微调模块\">#</a> 预微调模块</h3>\n<p>经过中间层 Transformer 的处理后，BERT 的最后一层根据任务的不同需求而做不同的调整<br />\n即可，比如对于 sequence-levelf 的分类任务，BERT 直接取第一个 [CLS] token 的 final hidden state, 再加一层全连接层后进行 softmax 来预测最终的标签。</p>\n<blockquote>\n<p>对于不同的任务，微调都集中在预微调模块，几种重要的 NLP 微调任务架构图展示如下</p>\n</blockquote>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/14/oHt6j.png\" alt=\"tu\" /><br />\n<img data-src=\"https://i0.imgs.ovh/2024/02/14/oHgP2.png\" alt=\"tu\" title=\"预微调模块\" /></p>\n<p>从上图中可以发现，在面对特定任务时，只需要对预微调层进行微调，就可以利用 Transformer 强大的注意力机制来模拟很多下游任务，并得到 SOTA 的结果.（句子对关系判断，单文本主题分类，问答任务 —— 句子理解 (QA), 单句贴标签 (NER)。</p>\n<p>若干可选的超参数建议如下</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Batch size:16,32</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Learning rate (Adam):5e-5,3e-5,2e-5</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Epochs:3,4</pre></td></tr></table></figure><h2 id=\"bert的预训练任务\"><a class=\"anchor\" href=\"#bert的预训练任务\">#</a> BERT 的预训练任务</h2>\n<p>BERT 包含两个预训练任务</p>\n<ul>\n<li>任务一：Masked LM (带 mask 的语言模型训练)</li>\n<li>任务二：Next Sentence Prediction (下一句话预测任务)</li>\n</ul>\n<h3 id=\"任务一masked-lm带mask的语言模型训练\"><a class=\"anchor\" href=\"#任务一masked-lm带mask的语言模型训练\">#</a> 任务一：Masked LM (带 mask 的语言模型训练)</h3>\n<blockquote>\n<p>关于传统的语言模型训练，都是采用 left-to-right, 或者 left-to-right+right-to-left 结合的方式，但这种单向方式或者拼接的方式提取特征的能力有限。为此 BET 提出一个深度双向表达模型 (deep bidirectional representation). 即采用 MASK 任务来训练模型。</p>\n</blockquote>\n<ul>\n<li>在原始训练文本中，随机的抽取 15% 的 tokn 作为参与 MASK 任务的对象。</li>\n<li>在这些被选中的 tokn 中，数据生成器并不是把它们全部变成 [MASK], 而是有下列 3 种情<br />\n况。\n<ul>\n<li>在 80% 的概率下，用 MASK 标记替换该 token, 比如 my dog is hairy&gt;my dog is<br />\n[MASK]</li>\n<li>在 10% 的概率下，用一个随机的单词替换 token, 比如 my dog is hairy&gt;my dog is<br />\napple。</li>\n<li>在 10% 的概率下，保持该 token 不变，比如 my dog is hairy-&gt;my dog is hairy。</li>\n</ul>\n</li>\n<li>模型在训练的过程中，并不知道它将要预测哪些单词？哪些单词是原始的样子？哪些单词被遮掩成了 [MASK]? 哪些单词被替换成了其他单词？正是在这样一种高度不确定的情况下，反倒逼着模型快速学习该 tokn 的分布式上下文的语义，尽最大努力学习原始语言说话的样子。同时因为原始文本中只有 15% 的 tokn 参与了 MASK 操作，并不会破坏原语言的表达能力和语言规则。</li>\n</ul>\n<h3 id=\"任务二next-sentence-prediction下一句话预测任务\"><a class=\"anchor\" href=\"#任务二next-sentence-prediction下一句话预测任务\">#</a> 任务二：Next Sentence Prediction (下一句话预测任务)</h3>\n<blockquote>\n<p>在 NLP 中有一类重要的问题比如 QA (Quention-Answer),NLI (Natural Language Inference), 需要模型能够很好的理解两个句子之间的关系，从而需要在模型的训练中引入对应的任务，在 BERT 中引入的就是 Next Sentence Prediction 任务。采用的方式是输入句子对 (A,B), 模型来预测句子 B 是不是句子 A 的真实的下一句话。</p>\n</blockquote>\n<ul>\n<li>所有参与任务训练的语句都被选中作为句子 A。\n<ul>\n<li>其中 50% 的 B 是原始文本中真实跟随 A 的下一句话。（标记为 IsNext, 代表正样本）</li>\n<li>其中 50% 的 B 是原始文本中随机抽取的一句话。（标记为 NotNext, 代表负样本）</li>\n</ul>\n</li>\n<li>在任务二中，BERT 模型可以在测试集上取得 97%-98% 的准确率。</li>\n</ul>\n<h1 id=\"transformer\"><a class=\"anchor\" href=\"#transformer\">#</a> Transformer</h1>\n<h2 id=\"encoder模块\"><a class=\"anchor\" href=\"#encoder模块\">#</a> Encoder 模块</h2>\n<h3 id=\"encoder模块的结构和作用\"><a class=\"anchor\" href=\"#encoder模块的结构和作用\">#</a> Encoder 模块的结构和作用</h3>\n<ul>\n<li>经典的 Transformer 结构中的 Encoder 模块包含 6 个 Encoder Block</li>\n<li>每个 Encoder Block 包含一个多头自注意力层，和一个前馈全连接层，</li>\n</ul>\n<h3 id=\"关于encoder-block\"><a class=\"anchor\" href=\"#关于encoder-block\">#</a> 关于 Encoder Block</h3>\n<p>在 Transformer 架构中，6 个一模一样的 Encoder Block 层层堆叠在一起，共同组成完整的 Encoder, 因此剖析一个 Block 就可以对整个 Encoder 的内部结构有清晰的认识。</p>\n<h3 id=\"多头自注意力层self-attention\"><a class=\"anchor\" href=\"#多头自注意力层self-attention\">#</a> 多头自注意力层 (self-attention)</h3>\n<ul>\n<li>self-attention 的计算规则图：</li>\n</ul>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/14/oHUMJ.png\" alt=\"tu\" title=\"self-attention的计算规则图\" /></p>\n<blockquote>\n<p>上述 attention 可以被描述为将 quey 和 key-value 键值对的一组集合映射到输出，输出被计算为 values 的加权和，其中分配给每个 value 的权重由 quey 与对应 key 的相似性函数计算得来。这种 attention 的形式被称为 Scaled Dot-Product Attention, 对应的数学公式形式如下：</p>\n</blockquote>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>Attention</mtext><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><mi>K</mi><mo separator=\"true\">,</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mtext>softmax</mtext><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo stretchy=\"false\">)</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">\\text{Attention}(Q,K,V)=\\text{softmax}(\\frac{QK^T}{\\sqrt{d_k}})V\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Attention</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.448331em;vertical-align:-0.93em;\"></span><span class=\"mord text\"><span class=\"mord\">softmax</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5183309999999999em;\"><span style=\"top:-2.25278em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85722em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.81722em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.18278000000000005em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span></p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/14/oHjdv.png\" alt=\"tu\" title=\"self-attention的计算规则图\" /></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>MultiHead</mtext><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><mi>K</mi><mo separator=\"true\">,</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>C</mi><mi>o</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mi>h</mi></msub><mo stretchy=\"false\">)</mo><msup><mi>W</mi><mi>O</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\text{MultiHead}(Q,K,V)= Concat (head_1,...,head_h)W^O\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">MultiHead</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1413309999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">O</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>w</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>e</mi><mi>h</mi><mi>e</mi><mi>a</mi><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mrow><mo fence=\"true\">(</mo><mi>Q</mi><msubsup><mi>W</mi><mi>i</mi><mi>Q</mi></msubsup><mo separator=\"true\">,</mo><mi>K</mi><msubsup><mi>W</mi><mi>i</mi><mi>K</mi></msubsup><mo separator=\"true\">,</mo><mi>V</mi><msubsup><mi>W</mi><mi>i</mi><mi>V</mi></msubsup><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">where head_i = Attention \\left(QW_{i}^{Q},KW_{i}^{K},VW_{i}^{V}\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.80002em;vertical-align:-0.65002em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord mathnormal\">Q</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9592389999999998em;\"><span style=\"top:-2.4231360000000004em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.180908em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.276864em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>W</mi><mi>i</mi><mi>Q</mi></msubsup><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><msub><mi>d</mi><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">l</mi></mrow></msub><mo>×</mo><msub><mi>d</mi><mi>k</mi></msub></mrow></msup><mo separator=\"true\">,</mo><msubsup><mi>W</mi><mi>i</mi><mi>K</mi></msubsup><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><msub><mi>d</mi><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">l</mi></mrow></msub><mo>×</mo><msub><mi>d</mi><mi>k</mi></msub></mrow></msup><mo separator=\"true\">,</mo><msubsup><mi>W</mi><mi>i</mi><mi>V</mi></msubsup><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><msub><mi>d</mi><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">l</mi></mrow></msub><mo>×</mo><msub><mi>d</mi><mi>v</mi></msub></mrow></msup><mo separator=\"true\">,</mo><msup><mi>W</mi><mi>O</mi></msup><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi>h</mi><msub><mi>d</mi><mi>v</mi></msub><mo>×</mo><msub><mi>d</mi><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">l</mi></mrow></msub></mrow></msup></mrow><annotation encoding=\"application/x-tex\">W_i^Q\\in\\mathbb{R}^{d_{\\mathrm{model}}\\times d_k},W_i^K\\in\\mathbb{R}^{d_{\\mathrm{model}}\\times d_k},W_i^V\\in\\mathbb{R}^{d_{\\mathrm{model}}\\times d_v},W^O\\in\\mathbb{R}^{hd_v\\times d_{\\mathrm{model}}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.236103em;vertical-align:-0.276864em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9592389999999998em;\"><span style=\"top:-2.4231360000000004em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.180908em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">Q</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.276864em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.146108em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">d</span><span class=\"mord mathrm mtight\">e</span><span class=\"mord mathrm mtight\">l</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.146108em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">d</span><span class=\"mord mathrm mtight\">e</span><span class=\"mord mathrm mtight\">l</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0935479999999997em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">d</span><span class=\"mord mathrm mtight\">e</span><span class=\"mord mathrm mtight\">l</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913309999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">O</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8991079999999998em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999998em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span><span class=\"mord mathrm mtight\">o</span><span class=\"mord mathrm mtight\">d</span><span class=\"mord mathrm mtight\">e</span><span class=\"mord mathrm mtight\">l</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<blockquote>\n<p>多头 self-attention, 层的作用：实验结果表明，Multi--head 可以在更细致的层面上提取不同 head 的特征，总体计算量和单一 head 相同的情况下，提取特征的效果更佳。</p>\n</blockquote>\n<h3 id=\"前馈全连接层模块\"><a class=\"anchor\" href=\"#前馈全连接层模块\">#</a> 前馈全连接层模块</h3>\n<p>前馈全连接层模块，由两个线性变换组成，中间有一个 Relu 激活函数（max ()），对应的数学公式形式如下：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">F</mi><mi mathvariant=\"normal\">N</mi></mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>x</mi><msub><mi>W</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo fence=\"true\">)</mo></mrow><msub><mi>W</mi><mn>2</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{FFN}(x)=\\max\\left(0,xW_1+b_1\\right)W_2+b_2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">F</span><span class=\"mord mathrm\">N</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">max</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>注意：原版论文中的前馈全连接层，输入和输出的维度均为 d_model=512, 层内的连接维度 df 仟 = 2048，均采用 4 倍的大小关系。</li>\n</ul>\n<blockquote>\n<p>前馈全连接层的作用：单纯的多头注意力机制并不足以提取到理想的特征，因此增加全连接层来提升网络的能力。</p>\n</blockquote>\n<h2 id=\"剩下的视频看完了还在写\"><a class=\"anchor\" href=\"#剩下的视频看完了还在写\">#</a> 剩下的视频看完了还在写……</h2>\n<h1 id=\"crf\"><a class=\"anchor\" href=\"#crf\">#</a> CRF</h1>\n<h2 id=\"crf模型的输入和输出\"><a class=\"anchor\" href=\"#crf模型的输入和输出\">#</a> CRF 模型的输入和输出</h2>\n<p>CRF (Conditional Random Fields), 中文称作条件随机场，同 HMM 一样，它一般也以文本序列数据为输入，以该序列对应的隐含序列为输出。</p>\n<h2 id=\"crf模型的作用\"><a class=\"anchor\" href=\"#crf模型的作用\">#</a> CRF 模型的作用：</h2>\n<p>同 HMM 一样，在 NLP 领域，CRF 用来解决文本序列标注问题。如分词，词性标注，命名实体识别。</p>\n<h2 id=\"crf模型使用过程简述\"><a class=\"anchor\" href=\"#crf模型使用过程简述\">#</a> CRF 模型使用过程简述</h2>\n<ul>\n<li>首先，CRF 模型表示为：lambda=CRF (w1,w2,,wn), 其中 w1 到 wn 是模型参数</li>\n<li>接着，我们开始训练 CRF 模型，语料同样是事先准备好的一定数量的观测序列及其对应的隐含序列</li>\n<li>与此同时我们还需要做人工特征工程，然后通过不断训练求得一组参数，使由观测序列到对应隐含序列的概率最大</li>\n<li>训练后，我们就得到了具备预测能力的新模型：lambda=CRF (w1,w2,.,wn), 其中的模型参数已经改变</li>\n<li>之后给定输入序列 (x1,x2,,n), 经过模型计算 lambda (x1,x2,,n) 得到对应隐含序列的<br />\n条件概率分布</li>\n<li>最后，还是使用维特比算法从隐含序列的条件概率分布中找出概率最大的一条序列路径就是我们需要的隐含序列：(y1,y2,,yn)</li>\n</ul>\n<h2 id=\"hmm与crf模型之间差异\"><a class=\"anchor\" href=\"#hmm与crf模型之间差异\">#</a> HMM 与 CRF 模型之间差异</h2>\n<ul>\n<li>HMM 模型存在隐马假设，而 CRF 不存在，因此 HMM 的计算速度要比 CRF 模型快很多，适用于对预测性能要求较高的场合</li>\n<li>同样因为隐马假设，当预测问题中隐含序列单元并不是只与上一个单元有关时，HMM 的准确率会大大降低，而 CRF 不受这样限制，准确率明显高于 HMM</li>\n</ul>\n<h2 id=\"hmm和crf的发展现状\"><a class=\"anchor\" href=\"#hmm和crf的发展现状\">#</a> HMM 和 CRF 的发展现状</h2>\n<ul>\n<li>HMM 和 CRF 模型曾在多种序列任务中表现出色，伴随 NLP 工程师度过漫长的一段时期</li>\n<li>但由于近年来深度学习发展迅速，经典序列模型，如 HMM 和 CRE 已经开始慢慢淡出人们的<br />\n视野</li>\n<li>因此，我们这里也是对其做了简洁的总结知识，让大家对其有一定的基本认识</li>\n</ul>\n","categories":["NER"],"tags":["NER"]},{"title":"RNN模型","url":"/2024/02/15/NER/RNN%E6%A8%A1%E5%9E%8B/","content":"<h1 id=\"认识rnn模型\"><a class=\"anchor\" href=\"#认识rnn模型\">#</a> 认识 RNN 模型</h1>\n<blockquote>\n<p>RNN (Recurrent Neural Network), 中文称作循环神经网络，它一般以序列数据为输入，通过网络内部的结构设计有效捕捉序列之间的关系特征，一般也是以序列形式进行输出。</p>\n</blockquote>\n<ul>\n<li>一般单层神经网络结构：</li>\n</ul>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/onvz2.png\" alt=\"tu\" title=\"一般单层神经网络结构\" /></p>\n<ul>\n<li>RNN 单层结构：</li>\n</ul>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/onyyj.png\" alt=\"tu\" title=\"RNN单层结构\" /></p>\n<ul>\n<li>以时间步对 RNN 进行展开后的单层网络结构：</li>\n</ul>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oHPmI.png\" alt=\"tu\" title=\"以时间步对RNN进行展开后的单层网络结构\" /></p>\n<p>RNN 的循环机制使模型隐层上一时间步产生的结果能够作为当下时间步输入的一部分 (当下时间步的输入<strong>除了正常的输入外还包括上一步的隐层输出</strong>) 对当下时间步的输出产生影响。</p>\n<ul>\n<li>RNN 模型的作用</li>\n</ul>\n<p>因为 RNN 结构能够很好利用序列之间的关系，因此针对自然界具有连续性的输入序列，如人类的语言，语音等进行很好的处理，广泛应用于 NLP 领域的各项任务，如文本分类，情感分析，意图识别，机器翻译等。</p>\n<h2 id=\"分类\"><a class=\"anchor\" href=\"#分类\">#</a> 分类、</h2>\n<ul>\n<li>\n<p>按照输入和输出的结构进行分类：</p>\n<ul>\n<li>NvsN-RNN</li>\n<li>Nvs1-RNN</li>\n<li>1vsN-RNN</li>\n<li>NvsM-RNN</li>\n</ul>\n</li>\n<li>\n<p>按照 RNN 的内部构造进行分类：</p>\n<ul>\n<li>传统 RNN</li>\n<li>LSTM</li>\n<li>Bi-LSTM</li>\n<li>GRU</li>\n<li>Bi-GRU</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"nvsn-rnn\"><a class=\"anchor\" href=\"#nvsn-rnn\">#</a> NvsN-RNN</h3>\n<p>它是 RNN 最基础的结构形式，最大的特点就是：输入和输出序列是等长的。由于这个限制的存在，使其适用范围比较小，可用于生成等长度的合辙诗句。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oHLqJ.png\" alt=\"tu\" title=\"NvsN-RNN\" /></p>\n<h3 id=\"nvs1-rnn\"><a class=\"anchor\" href=\"#nvs1-rnn\">#</a> Nvs1-RNN</h3>\n<p>时候我们要处理的向题输入是一个序列，而要求输出是一个单独的值而不是序列，应该怎样建模呢？我们只要在最后一个隐层输出上进行线性变换就可以了，大部分情况下，为了更好的明确结果，还要使用 sigmoid 或者 softmaxi 进行处理。这种结构经常被应用在文本分类问题上。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oHVcV.png\" alt=\"tu\" title=\"Nvs1-RNN\" /></p>\n<h3 id=\"1vsn-rnn\"><a class=\"anchor\" href=\"#1vsn-rnn\">#</a> 1vsN-RNN</h3>\n<p>如果输入不是序列而输出为序列的情况怎么处理呢？我们最常采用的一种方式就是使该输入作用于每次的输出之上。这种结构可用于将图片生成文字任务等。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oHrHW.png\" alt=\"tu\" title=\"1vsN-RNN\" /></p>\n<h3 id=\"nvsm-rnn\"><a class=\"anchor\" href=\"#nvsm-rnn\">#</a> NvsM-RNN</h3>\n<p>这是一种不限输入输出长度的 RNN 结构，它由编码器和解码器两部分组成，两者的内部结构都是某类 RNN, 它也被称为 seq2seq 架构。输入数据首先通过编码器，最终输出一个隐含变量 C, 之后最常用的做法是使用这个隐含变量 c 作用在解码器进行解码的每一步上，以保证输入信息被有效利用。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oH2ov.png\" alt=\"tu\" title=\"NvsM-RNN\" /></p>\n<h1 id=\"传统rnn模型\"><a class=\"anchor\" href=\"#传统rnn模型\">#</a> 传统 RNN 模型</h1>\n<ul>\n<li>传统 RNN 的内部结构图：</li>\n</ul>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oHFYe.png\" alt=\"tu\" title=\"传统RNN的内部结构图\" /></p>\n<h2 id=\"内部结构分析\"><a class=\"anchor\" href=\"#内部结构分析\">#</a> 内部结构分析</h2>\n<p>我们把目光集中在中间的方块部分，它的输入有两部分，分别是 h (t-1) 以及 x (t), 代表上一时间步的隐层输出，以及此时间步的输入，它们进入 RNN 结构体后，会 &quot;融合&quot; 到一起，这种融合我们根据结构解释可知，是将二者进行拼接，形成新的张量 [x (t),h (t1)], <code>行不变，列变</code> 之后这个新的张量将通过一个全连接层（线性层），该层使用 <code>tanh</code>  作为激活函数，最终得到该时间步的输出 h (t), 它将作为下一个时间步的输入和 x (t+1) 一起进入结构体。以此类推。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oHlI9.png\" alt=\"tu\" title=\"内部结构图\" /></p>\n<ul>\n<li>内部计算公式：</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mi>t</mi></msub><mo stretchy=\"false\">[</mo><msub><mi>X</mi><mi>t</mi></msub><mo separator=\"true\">,</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">]</mo><mo>+</mo><msub><mi>b</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h_t=tanh(W_t[X_t,h_{t-1}]+b_t)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li>激活函数 tanh 的作用：</li>\n</ul>\n<p>用于帮助调节流经网络的值，tanh 函数将值压缩在 - 1 和 1 之间。</p>\n<ul>\n<li>Pytorch 中传统 RNN 工具的使用：</li>\n</ul>\n<p>位置：在 torch.nn 工具包之中，通过 torch.nn.RNN 可调用。</p>\n<p>实现过程略</p>\n<h2 id=\"传统rnn的优势\"><a class=\"anchor\" href=\"#传统rnn的优势\">#</a> 传统 RNN 的优势</h2>\n<p>由于内部结构简单，对计算资源要求低，相比之后我们要学习的 RNN 变体：LSTM 和 GRU 模型参数总量少了很多，在 <code>短序列任务</code> 上性能和效果都表现优异。</p>\n<h2 id=\"传统rnn的缺点\"><a class=\"anchor\" href=\"#传统rnn的缺点\">#</a> 传统 RNN 的缺点</h2>\n<p>传统 RNN 在解决长序列之间的关联时，通过实践，证明经典 RNN 表现很差，原因是在进行反向传播的时候，过长的序列导致梯度的计算异常，发生梯度消失或爆炸。</p>\n<blockquote>\n<p>什么是梯度消失或爆炸呢？</p>\n<p>根据反向传播算法和链式法则，梯度的计算可以简化为以下公式：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>D</mi><mi>n</mi></msub><mo>=</mo><msup><mi>σ</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><msub><mi>w</mi><mn>1</mn></msub><mo>⋅</mo><msup><mi>σ</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><msub><mi>w</mi><mn>2</mn></msub><mo>⋅</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>⋅</mo><msup><mi>σ</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">D_n=\\sigma&#x27;(z_1)w_1\\cdot\\sigma&#x27;(z_2)w_2\\cdot...\\cdot\\sigma&#x27;(z_n)w_n\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中 sigmoid 的导数值域是固定的，在 [0,0.25] 之间，而一旦公式中的 w 也小于 1，那么通过这样的公式连乘后，最终的梯度就会变得非常非常小，这种现象称作梯度消失。反之，如果我们人为的增大 w 的值，使其大于 1，那么连乘够就可能造成梯度过大，称作梯度爆炸。</p>\n</blockquote>\n<ul>\n<li>梯度消失或爆炸的危害：</li>\n</ul>\n<p>如果在训练过程中发生了梯度消失，权重无法被更新，最终导致训练失败：梯度爆炸所带来的梯度过大，大幅度更新网络参数，在极端情况下，结果会溢出 (NaN 值)。</p>\n<h1 id=\"lstm模型\"><a class=\"anchor\" href=\"#lstm模型\">#</a> LSTM 模型</h1>\n<p>LSTM (Long Short-Term Memory)，也称长短时记忆结构，它是传统 RNN 的变体，与经典 RNN 相比能够有效捕捉长序列之间的语义关联，缓解梯度消失或爆炸现象。同时 LSTM 的结构更复杂，它的核心结构可以分为四个都分去解析：</p>\n<ul>\n<li>遗忘门</li>\n<li>输入门</li>\n<li>细胞状态</li>\n<li>输出门</li>\n</ul>\n<h2 id=\"内部结构\"><a class=\"anchor\" href=\"#内部结构\">#</a> 内部结构</h2>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oHnzO.png\" alt=\"tu\" title=\"内部结构图\" /></p>\n<h3 id=\"遗忘门部分结构图与计算公式\"><a class=\"anchor\" href=\"#遗忘门部分结构图与计算公式\">#</a> 遗忘门部分结构图与计算公式</h3>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oHMCH.png\" alt=\"tu\" title=\"遗忘门部分结构图\" /></p>\n<p>公式：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mrow><mo fence=\"true\">(</mo><msub><mi>W</mi><mi>f</mi></msub><mo lspace=\"0em\" rspace=\"0em\">⋅</mo><mo stretchy=\"false\">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">]</mo><mo>+</mo><msub><mi>b</mi><mi>f</mi></msub><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">f_{t}=\\sigma\\left(W_{f}{\\cdot}[h_{t-1},x_{t}]+b_{f}\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">⋅</span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span></span></p>\n<ul>\n<li>遗忘门结构分析：</li>\n</ul>\n<p>与传统 RNN 的内部结构计算非常相似首先将当前时间步输入 x (t) 与上一个时间步隐含状态 h (t-1) 拼接，得到 [x (t),h (1)]，然后通过一个全连接层做变换，最后通过 sigmoidi 函数进行激活得到 f (t)，我们可以将 f (t) 看作是门值，好比一扇门开合的大小程度，门值都将作用在通过该扇门的张量，遗忘门门值将作用的上一层的细胞状态上，代表遗忘过去的多少信息，又因为遗忘门门值是由 f (t)，h (t1) 计算得来的，因此整个公式意味着<mark>根据当前时间步输入和上一个时间步隐含状态 h (t-1) 来决定遗忘多少上一层的细胞状态所携带的过往信息</mark></p>\n<ul>\n<li>激活函数 sigmiod 的作用：</li>\n</ul>\n<p>用于帮助调节流经网络的值，sigmoid 函数将债压缩在 0 和 1 之间。</p>\n<h3 id=\"输入门部分结构图与计算公式\"><a class=\"anchor\" href=\"#输入门部分结构图与计算公式\">#</a> 输入门部分结构图与计算公式</h3>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oHwco.png\" alt=\"tu\" title=\"输入门部分结构图\" /></p>\n<p>公式：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>it</mtext><mo>=</mo><mi>σ</mi><mrow><mo fence=\"true\">(</mo><msub><mi>W</mi><mi>i</mi></msub><mo separator=\"true\">⋅</mo><mo stretchy=\"false\">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">]</mo><mo>+</mo><msub><mi>b</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mover accent=\"true\"><mi>C</mi><mo>~</mo></mover><mi>t</mi></msub><mo>=</mo><mi>tanh</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mi>C</mi></msub><mo>⋅</mo><mo stretchy=\"false\">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">]</mo><mo>+</mo><msub><mi>b</mi><mi>C</mi></msub><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&amp;\\text{it} =\\sigma\\left(W_{i}\\cdotp[h_{t-1},x_{t}]+b_{i}\\right)  \\\\\n&amp;\\tilde{C}_{t} =\\tanh(W_C\\cdot[h_{t-1},x_t]+b_C) \n\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.08019em;vertical-align:-1.290095em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.790095em;\"><span style=\"top:-3.870285em;\"><span class=\"pstrut\" style=\"height:2.92019em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.290095em;\"><span class=\"pstrut\" style=\"height:2.92019em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.290095em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.790095em;\"><span style=\"top:-3.950095em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">it</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-2.369905em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span><span style=\"top:-3.6023300000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\"><span class=\"mord\">~</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop\">tanh</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.290095em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>输入门结构分析：</li>\n</ul>\n<p>我们看到输入门的计算公式有两个，第一个就是产生输入门门值的公式，它和遗忘门公式几乎相同，区别只是在于它们之后要作用的目标上。这个公式意味着输入信息有多少需要进行过滤。输入门的第二个公式是与传统 RNN 的内部结构计算相同。对于 LSTM 来讲，它得到的是当前的细胞状态，而不是像经典 RNN 一样得到的是隐含状态。</p>\n<h3 id=\"细胞状态更新\"><a class=\"anchor\" href=\"#细胞状态更新\">#</a> 细胞状态更新</h3>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oHpmD.png\" alt=\"tu\" title=\"细胞状态更新图\" /></p>\n<p>公式：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>C</mi><mi>t</mi></msub><mo>=</mo><msub><mi>f</mi><mi>t</mi></msub><mo>∗</mo><msub><mi>C</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>i</mi><mi>t</mi></msub><mo>∗</mo><msub><mover accent=\"true\"><mi>C</mi><mo>~</mo></mover><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_t=f_t*C_{t-1}+i_t*\\tilde{C}_t\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.891661em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0701899999999998em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9201899999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span><span style=\"top:-3.6023300000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\"><span class=\"mord\">~</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>细胞状态更新分析：</li>\n</ul>\n<p>细胞更新的结构与计算公式非常容易理解，这里没有全连接层，只是将刚刚得到的遗忘门门值与上一个时间步得到的 C (t-1) 相乘，再加上输入门门值与当前时间步得到的未更新 C (t) 相乘的结果，最终得到更新后的 C (t) 作为下一个时间步输入的一部分。整个细胞状态更新过程就是对遗忘门和输入门的应用。</p>\n<h3 id=\"输出门部分结构图与计算公式\"><a class=\"anchor\" href=\"#输出门部分结构图与计算公式\">#</a> 输出门部分结构图与计算公式</h3>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oH39A.png\" alt=\"tu\" title=\"输出门部分结构图\" /></p>\n<p>公式:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>o</mi><mi>t</mi></msub><mo>=</mo><mi>σ</mi><mrow><mo fence=\"true\">(</mo><msub><mi>W</mi><mi>o</mi></msub><mrow><mo fence=\"true\">[</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>t</mi></msub><mo fence=\"true\">]</mo></mrow><mo>+</mo><msub><mi>b</mi><mi>o</mi></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>h</mi><mi>t</mi></msub><mo>=</mo><msub><mi>o</mi><mi>t</mi></msub><mo>∗</mo><mi>tanh</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>C</mi><mi>t</mi></msub><mo fence=\"true\">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{array}{c}o_t=\\sigma\\left(W_o\\left[h_{t-1},x_t\\right]+b_o\\right)\\\\h_t=o_t*\\tanh\\left(C_t\\right)\\end{array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4000000000000004em;vertical-align:-0.9500000000000004em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">o</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop\">tanh</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<ul>\n<li>输出门结构分析：</li>\n</ul>\n<p>输出门部分的公式也是两个，第一个即是计算输出门的门值，它和遗忘门，输入门计算方式相同。第二个即是使用这个门值产生隐含状态 h (t)，他将作用在更新后的细胞状态 C (t) 上，并做 tanh 激活，最终得到 h (t) 作为下一时间步输入的一部分。整个输出门的过程，就是为了产生隐含状态 h (t)。</p>\n<h2 id=\"bi-lstm\"><a class=\"anchor\" href=\"#bi-lstm\">#</a> Bi-LSTM</h2>\n<p>Bi-LSTM 即双向 LSTM, 它没有改变 LSTM 本身任何的内部结构，只是将 LSTM 应用两次且方向不同，再将两次得到的 LSTM 结果进行拼接作为最终输出。</p>\n<p><img data-src=\"https://i0.imgs.ovh/2024/02/13/oHmH5.png\" alt=\"tu\" title=\"Bi-LSTM结构图\" /></p>\n<ul>\n<li>Bi-LSTM 结构分析：</li>\n</ul>\n<p>我们看到图中对我爱中雨这句话或者叫这个输入序列，进行了从左到右和从右到左两次 LSTM 处理，将得到的结果张量进行了拼接作为最终输出。这种结构能够捕捉语言语法中一些特定的前置或后置特征，增强语义关联但是模型参数和计算复杂度也随之增加了一倍，一般需要对语料和计算资源进行评估后决定是否使用该结构。</p>\n<ul>\n<li>Pytorch 中 LSTM 工具的使用：</li>\n</ul>\n<p>位置：在 torch.nn 工具包之中，通过 torch.nn.LSTM 可调用。</p>\n<h1 id=\"注意力机制\"><a class=\"anchor\" href=\"#注意力机制\">#</a> 注意力机制</h1>\n<h2 id=\"什么是注意力\"><a class=\"anchor\" href=\"#什么是注意力\">#</a> 什么是注意力</h2>\n<p>我们观察事物时，之所以能够快速判断一种事物（当然允许判断是错误的），是因为我们大脑能够很快把注意力放在事物最具有辨识度的部分从而作出判断，而并非是从头到尾的观察一遍事物后，才能有判断结果。正是基于这样的理论，就产生了注意力机制。</p>\n<blockquote>\n<p>NLP 领域中，当前的注意力机制大多数应用与 seq2seq 架构，即编码器和解码模型</p>\n</blockquote>\n<h2 id=\"注意力计算规则\"><a class=\"anchor\" href=\"#注意力计算规则\">#</a> 注意力计算规则</h2>\n<blockquote>\n<p>它需要三个指定的输入 Q (query),K (key),V (value), 然后通过计算公式得到注意力的结果，这个结果代表 query（查询）在 key 和 value 作用下的注意力表示。当输入的 Q=K=V 时，称作自注意力计算规则。</p>\n</blockquote>\n<ul>\n<li>常见的注意力计算规则：</li>\n</ul>\n<ol>\n<li>将 Q,K 进行纵轴拼接，做一次线性变化，再使用 softmax 处理获得结果最后与 V 做张量乘法。</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><mi>K</mi><mo separator=\"true\">,</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>L</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">[</mo><mi>Q</mi><mo separator=\"true\">,</mo><mi>K</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">Attention(Q,K,V)=Softmax(Linear([Q,K]))\\cdot V\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span></p>\n<ol start=\"2\">\n<li>将 Q,K 进行纵轴拼接，做一次线性变化后再使用 tanh 函数激活，然后再进行内部求和，最后使用 softmax 处理获得结果再与 V 做张量乘法。</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><mi>K</mi><mo separator=\"true\">,</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy=\"false\">(</mo><mi>L</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">[</mo><mi>Q</mi><mo separator=\"true\">,</mo><mi>K</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">Attention(Q,K,V)=Softmax(sum(tanh(Linear([Q,K]))))\\cdot V\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span></p>\n<ol start=\"3\">\n<li>将 Q 与 K 的转置做点积运算，然后除以一个缩放系数，再使用 softmax 处理获得结果最后与 V 做张量乘法。</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>Q</mi><mo separator=\"true\">,</mo><mi>K</mi><mo separator=\"true\">,</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>Q</mi><mo>⋅</mo><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">Attention(Q,K,V)=Softmax(\\frac{Q\\cdot K^{T}}{\\sqrt{d_{k}}})\\cdot V\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">Q</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.448331em;vertical-align:-0.93em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5183309999999999em;\"><span style=\"top:-2.25278em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85722em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.81722em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.18278000000000005em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span></p>\n<blockquote>\n<p>说明：<ins>当注意力权重矩阵和 V 都是三维张量且第一维代表为 batch 条数时</ins>，则做 bmm 运算.bmm 是一种特殊的张量乘法运算。</p>\n</blockquote>\n<ul>\n<li>bmm 运算演示：</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#如果参数 1 形状是 (b×n×m), 参数 2 形状是 (b×m×p)，则输出为 (b×n×p)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token builtin\">input</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span>mat2 torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span>res torch<span class=\"token punctuation\">.</span>bmm<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">,</span>mat2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>res<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>torch<span class=\"token punctuation\">.</span>Size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"注意力机制的作用\"><a class=\"anchor\" href=\"#注意力机制的作用\">#</a> 注意力机制的作用</h3>\n<ul>\n<li>在解码器端的注意力机制：</li>\n</ul>\n<p>能够根据模型目标有效的聚焦编码器的输出结果，当其作为解码器的输入时提升效果。改善以往编码器输出是单一定长张量，无法存储过多信息的情况<br />\n在编码器端的注意力机制：主要解决表征问题，相当于特征提取过程，得到输入的注意力表示。一般使用自注意力 (self-attention)。</p>\n<ul>\n<li>注意力机制实现步骤\n<ul>\n<li>根据注意力计算规则对 Q,K,V 进行相应的计算。</li>\n<li>根据第一步采用的计算方法，如果是拼接方法，则需要将 Q 与第二步的计算结果再<br />\n进行拼接，如果是转置点积一般是自注意力，Q 与 V 相同，则不需要进行与 Q 的拼接。</li>\n<li>最后为了使整个 attention 机制按照指定尺寸输出，使用线性层作用在第二步的结果上做一个线性变换，得到最终对 Q 的注意力表示。</li>\n</ul>\n</li>\n</ul>\n","categories":["NER"],"tags":["NER"]},{"title":"各项更新进度说明","url":"/2024/01/17/%E5%90%84%E9%A1%B9%E4%BA%8B%E5%AE%9C/","content":"<h1 id=\"ner\"><a class=\"anchor\" href=\"#ner\">#</a> NER</h1>\n<p>nlp 领域的 ner 命名实体识别方向，解决机器学习灾难性遗忘问题，最近全在学这玩意，要学的好多哇，参照（<s>有些直接搬了</s>，来学的小伙伴还是直接看原作者的好一点）写得很不好，不太全面，希望能够收到一些指点嘞，另外求路过的大佬给指个明路…… 孩子感觉要学废了。</p>\n<p>祝大家学这玩意一切顺利，不掉头发！🤯</p>\n<h1 id=\"奇闻异事\"><a class=\"anchor\" href=\"#奇闻异事\">#</a> 奇闻异事</h1>\n<p>其实想在假期写一些这块来着，这里会记录所有我觉得一记的人和事（预告，有真实版的恐怖故事哦），因为上面那个事给一直耽搁啊啊啊啊，真是忙起来连我自己都鸽（笑.jpg），只能下次一定喽～</p>\n<p>对了，还有寻人启事，要是有路过的 uu 有印象一定一定一定要联系我，谢谢谢谢谢谢！！！</p>\n<h1 id=\"学习板块\"><a class=\"anchor\" href=\"#学习板块\">#</a> 学习板块</h1>\n<p>啊，上学期的都学会了也就懒得写了，学长们的遗产也挺全乎的，可能这个模块后面更多是更一些我觉得有用的技巧或者是一些目前没人解决的报错问题（啊，这个真是头疼），已经有的我就不重复更了，觉得有用的就放个链接自取好了。</p>\n<h1 id=\"前端\"><a class=\"anchor\" href=\"#前端\">#</a> 前端</h1>\n<p>小废柴一枚，目前只打算入个门然后写项目用，收集了一些网上资料大多是尚硅谷和黑马（可能排版比较废，一般就我自己看看方便一点），自行参考哈。</p>\n<blockquote>\n<p>其他的一些账号啥都没有，博客更完才会考虑更那些，随缘了属于是…… 纯纯凑数</p>\n</blockquote>\n"},{"title":"大创项目合集","url":"/2023/11/23/jike/%E5%A4%A7%E5%88%9B%E9%A1%B9%E7%9B%AE%E5%90%88%E9%9B%86/","content":"<p>【腾讯文档】2024 年度西电大学生创新创业训练计划命题清单<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnFxLmNvbS9zaGVldC9EVldSVlJXRktVMEZ3WWxwUz90YWI9QkIwOEoy\"> https://docs.qq.com/sheet/DVWRVRWFKU0FwYlpS?tab=BB08J2</span></p>\n<blockquote>\n<p>这也是 <code>慧试</code> 唯一剩下的了哈哈。</p>\n</blockquote>\n","categories":["计科资料"],"tags":["大创"]},{"title":"别看别看","url":"/2023/11/23/qi/%E5%87%91%E6%95%B0/","content":"<p>好吧，你还是看了，真就没更，老拖延症患者了。💀</p>\n<h1 id=\"浅浅放个预告\"><a class=\"anchor\" href=\"#浅浅放个预告\">#</a> 浅浅放个预告</h1>\n<ul>\n<li>恐怖故事（真实版）</li>\n<li>有趣的人和事（哈哈，可以期待一下）</li>\n<li>寻人启事</li>\n<li>可能随缘来点奇奇怪怪的想法（虽然就目前这个拖延状态来说大概率没有……）</li>\n</ul>\n<blockquote>\n<p>祝你拥有神奇的一天！</p>\n</blockquote>\n","categories":["奇闻异事"]},{"title":"Learning_O代码复现","url":"/2024/03/18/NER/Learing_o/","content":"<h1 id=\"主函数\"><a class=\"anchor\" href=\"#主函数\">#</a> 主函数</h1>\n<h2 id=\"main\"><a class=\"anchor\" href=\"#main\">#</a> main()</h2>\n<h3 id=\"1-创建解释器添加命令行参数\"><a class=\"anchor\" href=\"#1-创建解释器添加命令行参数\">#</a> 1. 创建解释器，添加命令行参数。</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>parser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"2-设置随机数种子以及每个任务包含的的标签数量\"><a class=\"anchor\" href=\"#2-设置随机数种子以及每个任务包含的的标签数量\">#</a> 2. 设置随机数种子以及每个任务包含的的标签数量</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set_seed<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>per_types <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>per_types</pre></td></tr></table></figure><h3 id=\"3-持续学习\"><a class=\"anchor\" href=\"#3-持续学习\">#</a> 3. 持续学习</h3>\n<p>迭代每个任务</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> step_id <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>start_step<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">.</span>nb_tasks<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>获取当前任务的标签集，标签数量和 PAD ids。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>labels <span class=\"token operator\">=</span> get_labels_dy<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">,</span> per_types<span class=\"token punctuation\">,</span> step_id<span class=\"token operator\">=</span>step_id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    num_labels <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    pad_token_label_id <span class=\"token operator\">=</span> CrossEntropyLoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ignore_index</pre></td></tr></table></figure><p>设置 model_name_or_path</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 如果是第一轮，则加载 bert-base-uncased 模型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> step_id <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        model_name_or_path <span class=\"token operator\">=</span> <span class=\"token string\">\"bert-base-uncased\"</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 否则加载上一轮模型</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        model_name_or_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>output_dir<span class=\"token punctuation\">,</span> <span class=\"token string\">\"task_\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>step_id <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>训练和评价模型</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>train_and_eval<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> num_labels<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">,</span> model_name_or_path<span class=\"token punctuation\">,</span>output_dir<span class=\"token punctuation\">,</span> data_dir<span class=\"token punctuation\">,</span> step_id<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"准备数据集\"><a class=\"anchor\" href=\"#准备数据集\">#</a> 准备数据集</h1>\n<h2 id=\"read_examples_from_file\"><a class=\"anchor\" href=\"#read_examples_from_file\">#</a> read_examples_from_file()</h2>\n<h2 id=\"convert_examples_to_features\"><a class=\"anchor\" href=\"#convert_examples_to_features\">#</a> convert_examples_to_features()</h2>\n<h2 id=\"load_and_cache_examples\"><a class=\"anchor\" href=\"#load_and_cache_examples\">#</a> load_and_cache_examples()</h2>\n<h3 id=\"1-从文件中加载样本特征\"><a class=\"anchor\" href=\"#1-从文件中加载样本特征\">#</a> 1. 从文件中加载样本特征</h3>\n<p>如果 cached_features_file 存在，则直接从该文件中加载特征</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>features <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>cached_features_file<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>否则先处理原始数据，再加载特征</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>examples <span class=\"token operator\">=</span> read_examples_from_file<span class=\"token punctuation\">(</span>data_dir<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>features <span class=\"token operator\">=</span> convert_examples_to_features<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"2-提取features的属性并构建数据集\"><a class=\"anchor\" href=\"#2-提取features的属性并构建数据集\">#</a> 2. 提取 features 的属性并构建数据集</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>all_input_ids <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">.</span>input_ids <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> features<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">long</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>all_input_mask <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">.</span>input_mask <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> features<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">long</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>all_segment_ids <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">.</span>segment_ids <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> features<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">long</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>all_label_ids <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">.</span>label_ids <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> features<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">long</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>dataset <span class=\"token operator\">=</span> TensorDataset<span class=\"token punctuation\">(</span>all_input_ids<span class=\"token punctuation\">,</span> all_input_mask<span class=\"token punctuation\">,</span> all_segment_ids<span class=\"token punctuation\">,</span> all_label_ids<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"3-返回该数据集\"><a class=\"anchor\" href=\"#3-返回该数据集\">#</a> 3. 返回该数据集</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> dataset</pre></td></tr></table></figure><h1 id=\"工具函数\"><a class=\"anchor\" href=\"#工具函数\">#</a> 工具函数</h1>\n<h2 id=\"get_exemplar_means\"><a class=\"anchor\" href=\"#get_exemplar_means\">#</a> get_exemplar_means()</h2>\n<p><strong>计算每个类别的原型，即均值向量</strong></p>\n<h3 id=\"1-将每个样本按标签分类\"><a class=\"anchor\" href=\"#1-将每个样本按标签分类\">#</a> 1. 将每个样本按标签分类</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 创建了一个字典，包含了所有可能的类别索引，每个类别对应一个空列表</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cls_exemplar <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>cls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> cls <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_tags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>  。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>support_reps<span class=\"token punctuation\">,</span> support_labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># 将每个样本按照标签分类存储在 cls_exemplar 字典中</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    cls_exemplar<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"2-计算每个类别的原型\"><a class=\"anchor\" href=\"#2-计算每个类别的原型\">#</a> 2. 计算每个类别的原型</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> cls<span class=\"token punctuation\">,</span> exemplar <span class=\"token keyword\">in</span> cls_exemplar<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    features <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> feature <span class=\"token keyword\">in</span> exemplar<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        feature<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> feature<span class=\"token punctuation\">.</span>data <span class=\"token operator\">/</span> feature<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>norm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Normalize  </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        features<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># 如果当前类别下没有样本，则随机初始化一个与样本表示 reps 大小相同的张量作为该类别的原型</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>features<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            mu_y <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            mu_y <span class=\"token operator\">=</span> mu_y<span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\"># 如果有，则计算当前类别的所有样本的 reps 的均值作为原型</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            features <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span>features<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            mu_y <span class=\"token operator\">=</span> features<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        mu_y<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> mu_y<span class=\"token punctuation\">.</span>data <span class=\"token operator\">/</span> mu_y<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>norm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Normalize  </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        exemplar_means<span class=\"token punctuation\">[</span>cls<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> mu_y</pre></td></tr></table></figure><h3 id=\"3-返回包含每个类别原型的列表\"><a class=\"anchor\" href=\"#3-返回包含每个类别原型的列表\">#</a> 3. 返回包含每个类别原型的列表</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> exemplar_means</pre></td></tr></table></figure><h2 id=\"get_support_encodings_and_labels_total\"><a class=\"anchor\" href=\"#get_support_encodings_and_labels_total\">#</a> get_support_encodings_and_labels(_total)()</h2>\n<p><strong>获取支持集的 encodings 和 labels</strong></p>\n<h3 id=\"1-获取train_loadersupport_loadersupport_o_loader中的encodings和labels\"><a class=\"anchor\" href=\"#1-获取train_loadersupport_loadersupport_o_loader中的encodings和labels\">#</a> 1. 获取 train_loader，support_loader，support_o_loader 中的 encodings 和 labels</h3>\n<p>获取 train_loader 中每个批次的 encodings 和 labels (仅 get_support_encodings_and_labels_total)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>train_iterator <span class=\"token operator\">=</span> tqdm<span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">,</span> desc<span class=\"token operator\">=</span><span class=\"token string\">\"Support data representations\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> batch <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>train_iterator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    encodings<span class=\"token punctuation\">,</span> labels <span class=\"token operator\">=</span> get_token_encodings_and_labels<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> batch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    encodings <span class=\"token operator\">=</span> encodings<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> encodings<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    labels <span class=\"token operator\">=</span> labels<span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 过滤掉标签为填充标记的部分</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    idx <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>labels <span class=\"token operator\">-</span> pad_token_label_id<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    support_encodings<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>encodings<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    support_labels<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>同样的操作获取 support_loader 和 support_o_loader 中每个批次的 encodings 和 labels</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>support_iterator <span class=\"token operator\">=</span> tqdm<span class=\"token punctuation\">(</span>support_loader<span class=\"token punctuation\">,</span> desc<span class=\"token operator\">=</span><span class=\"token string\">\"Support data representations\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> batch <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>support_iterator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>support_o_iterator <span class=\"token operator\">=</span> tqdm<span class=\"token punctuation\">(</span>support_o_loader<span class=\"token punctuation\">,</span> desc<span class=\"token operator\">=</span><span class=\"token string\">\"Support data representations\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> _<span class=\"token punctuation\">,</span> batch <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>support_o_iterator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><h3 id=\"2-返回所有的encodings和labels\"><a class=\"anchor\" href=\"#2-返回所有的encodings和labels\">#</a> 2. 返回所有的 encodings 和 labels</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> torch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span>support_encodings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> torch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span>support_labels<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"get_token_logits_and_labels\"><a class=\"anchor\" href=\"#get_token_logits_and_labels\">#</a> get_token_logits_and_labels</h2>\n<p><strong>使用原有的预训练 BERT-NER 模型获取预测分数和输出标签</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    inputs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"input_ids\"</span><span class=\"token punctuation\">:</span> batch<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"attention_mask\"</span><span class=\"token punctuation\">:</span> batch<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token string\">\"output_hidden_states\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> model<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>model_type <span class=\"token operator\">!=</span> <span class=\"token string\">\"distilbert\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        inputs<span class=\"token punctuation\">[</span><span class=\"token string\">\"token_type_ids\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>batch<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> model<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>model_type <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"bert\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"xlnet\"</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                    <span class=\"token keyword\">else</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># XLM and RoBERTa don\"t use token_type_ids</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        outputs <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>inputs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        logits <span class=\"token operator\">=</span> outputs<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">return</span> logits<span class=\"token punctuation\">,</span> label_batch</pre></td></tr></table></figure><h2 id=\"get_rehearsal_prototype\"><a class=\"anchor\" href=\"#get_rehearsal_prototype\">#</a> get_rehearsal_prototype()</h2>\n<h3 id=\"1-加载支持集以及它们的encodings和labels\"><a class=\"anchor\" href=\"#1-加载支持集以及它们的encodings和labels\">#</a> 1. 加载支持集以及它们的 encodings 和 labels</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>support_dataset <span class=\"token operator\">=</span> load_and_cache_examples<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"memory\"</span><span class=\"token punctuation\">,</span> data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>support_o_dataset <span class=\"token operator\">=</span> load_and_cache_examples<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"memory_o\"</span><span class=\"token punctuation\">,</span> data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>support_sampler <span class=\"token operator\">=</span> SequentialSampler<span class=\"token punctuation\">(</span>support_dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>support_dataloader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>support_dataset<span class=\"token punctuation\">,</span> sampler<span class=\"token operator\">=</span>support_sampler<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>eval_batch_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>support_o_dataloader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>support_o_dataset<span class=\"token punctuation\">,</span> sampler<span class=\"token operator\">=</span>support_o_sampler<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>eval_batch_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>support_encodings<span class=\"token punctuation\">,</span> support_labels <span class=\"token operator\">=</span> get_support_features_and_labels<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> support_dataloader<span class=\"token punctuation\">,</span> support_o_dataloader<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 将 support_encodings 归一化</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>support_encodings <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>normalize<span class=\"token punctuation\">(</span>support_encodings<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"2-计算类别相似度\"><a class=\"anchor\" href=\"#2-计算类别相似度\">#</a> 2. 计算类别相似度</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 迭代每个非 \"O\" 标签的类别</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># 计算类别 i 的样本之间的余弦相似度</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    support_reps_dists <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>support_encodings<span class=\"token punctuation\">[</span>support_labels <span class=\"token operator\">==</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                                          support_encodings<span class=\"token punctuation\">[</span>support_labels <span class=\"token operator\">==</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 将对角线上的元素（样本与自身的相似度）设置为 0，以避免将自身视为原型。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    support_reps_dists <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>support_reps_dists<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> torch<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span>support_reps_dists<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 计算类别 i 的类别相似度</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    prototype_dists<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>support_reps_dists<span class=\"token punctuation\">[</span>support_reps_dists <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"3-返回类别相似度列表\"><a class=\"anchor\" href=\"#3-返回类别相似度列表\">#</a> 3. 返回类别相似度列表</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> prototype_dists</pre></td></tr></table></figure><h1 id=\"定义模型\"><a class=\"anchor\" href=\"#定义模型\">#</a> 定义模型</h1>\n<h2 id=\"mysftbertmodel\"><a class=\"anchor\" href=\"#mysftbertmodel\">#</a> MySftBertModel()</h2>\n<h3 id=\"1-初始化-init\"><a class=\"anchor\" href=\"#1-初始化-init\">#</a> 1. 初始化 init</h3>\n<p>接受 Bert 配置参数以及其他自定义参数</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>self<span class=\"token punctuation\">.</span>per_types <span class=\"token operator\">=</span> per_types  <span class=\"token comment\"># 设置每轮任务的类型数量。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>self<span class=\"token punctuation\">.</span>feat_dim <span class=\"token operator\">=</span> feat_dim  <span class=\"token comment\"># 设置特征维度。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>self<span class=\"token punctuation\">.</span>hidden_size <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>hidden_size  <span class=\"token comment\"># 设置隐藏状态的大小。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>self<span class=\"token punctuation\">.</span>num_labels <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>num_labels  <span class=\"token comment\"># 设置标签数量。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>self<span class=\"token punctuation\">.</span>bert <span class=\"token operator\">=</span> BertModel<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">,</span> add_pooling_layer<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>设置了分类器 (classifier) 和投影头 (head)，根据 mode 选择性地设置分类器的输出层。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>classifier_dropout <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>  <span class=\"token comment\"># 设置分类器的 dropout 概率</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            config<span class=\"token punctuation\">.</span>classifier_dropout <span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>classifier_dropout <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">else</span> config<span class=\"token punctuation\">.</span>hidden_dropout_prob</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token string\">\"train\"</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 根据不同模式设置线性分类器的不同输出维度</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>num_labels<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>per_types<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 对 “O” 样本重新标记过</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>classifier <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>num_labels <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>per_types<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>classifier <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>num_labels<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    self<span class=\"token punctuation\">.</span>classifier <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>num_labels<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>设置不同的 head（线性层或多层感知机）</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> head <span class=\"token operator\">==</span> <span class=\"token string\">'linear'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   self<span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">elif</span> head <span class=\"token operator\">==</span> <span class=\"token string\">'mlp'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    self<span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>feat_dim<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">raise</span> NotImplementedError<span class=\"token punctuation\">(</span><span class=\"token string\">'head not supported: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"2-前向传播-forward\"><a class=\"anchor\" href=\"#2-前向传播-forward\">#</a> 2. 前向传播 forward</h3>\n<p><strong>提取特征</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 调用原有的 Bert 模型初步提取出样本的特征</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>outputs <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>bert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>features_enc <span class=\"token operator\">=</span> outputs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 通过 self.head 对进一步提取出样本的特征并归一化。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>features <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>normalize<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span>features_enc<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>hidden_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 使用初步特征进行预测</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sequence_output <span class=\"token operator\">=</span> outputs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sequence_output <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>dropout<span class=\"token punctuation\">(</span>sequence_output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>logits <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>classifier<span class=\"token punctuation\">(</span>sequence_output<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>如果不是训练模式，直接返回 features_enc，features，logits</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>loss <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> mode <span class=\"token operator\">!=</span> <span class=\"token string\">\"train\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> loss<span class=\"token punctuation\">,</span> features_enc<span class=\"token punctuation\">,</span> features<span class=\"token punctuation\">,</span> logits</pre></td></tr></table></figure><p><strong>计算损失函数</strong><br />\n如果是第一轮训练</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>num_labels<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>per_types<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon\"</span><span class=\"token punctuation\">:</span>         loss <span class=\"token operator\">=</span> supcon_loss</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon_o\"</span><span class=\"token punctuation\">:</span>     loss <span class=\"token operator\">=</span> supcon_o_loss</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon_o_ce\"</span><span class=\"token punctuation\">:</span>  loss <span class=\"token operator\">=</span> supcon_o_loss<span class=\"token operator\">+</span>ce_loss</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon_o_bce\"</span><span class=\"token punctuation\">:</span> loss <span class=\"token operator\">=</span> supcon_o_loss <span class=\"token operator\">+</span> bce_loss</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"ce\"</span><span class=\"token punctuation\">:</span>           loss <span class=\"token operator\">=</span> ce_loss</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"bce_o\"</span><span class=\"token punctuation\">:</span>        loss <span class=\"token operator\">=</span> bce_loss</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon_ce\"</span><span class=\"token punctuation\">:</span>    loss <span class=\"token operator\">=</span> supcon_loss <span class=\"token operator\">+</span> ce_loss</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon_bce\"</span><span class=\"token punctuation\">:</span>   loss <span class=\"token operator\">=</span> supcon_loss <span class=\"token operator\">+</span> bce_loss</pre></td></tr></table></figure><p>如果不是第一轮训练</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">elif</span> self<span class=\"token punctuation\">.</span>num_labels <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>per_types<span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># 整理新类别标签 labels_new，新类别样本的 logits：student_new 以及</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 旧类别样本的 logits：s_logits，teacher 模型的 logits：old_logits</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    labels_new<span class=\"token punctuation\">,</span> student_new<span class=\"token punctuation\">,</span> s_logits<span class=\"token punctuation\">,</span> old_logits <span class=\"token operator\">=</span> gather_rh_ce<span class=\"token punctuation\">(</span> labels<span class=\"token punctuation\">,</span> t_logits<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                                            logits<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>num_labels <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>per_types<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon\"</span><span class=\"token punctuation\">:</span>        loss <span class=\"token operator\">=</span> supcon_loss<span class=\"token operator\">+</span>kd_loss</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon_nokd\"</span><span class=\"token punctuation\">:</span> loss <span class=\"token operator\">=</span> supcon_loss</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon_o\"</span><span class=\"token punctuation\">:</span>    loss <span class=\"token operator\">=</span> supcon_o_loss<span class=\"token operator\">+</span>kd_loss</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon_o_ce\"</span><span class=\"token punctuation\">:</span> loss <span class=\"token operator\">=</span> supcon_o_loss<span class=\"token operator\">+</span>ce_loss<span class=\"token operator\">+</span>kd_loss</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon_o_bce\"</span><span class=\"token punctuation\">:</span>loss <span class=\"token operator\">=</span> supcon_o_loss <span class=\"token operator\">+</span> bce_loss</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"ce\"</span><span class=\"token punctuation\">:</span>          loss <span class=\"token operator\">=</span> ce_loss<span class=\"token operator\">+</span>kd_loss</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"bce_o\"</span><span class=\"token punctuation\">:</span>       loss <span class=\"token operator\">=</span> bce_loss</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon_ce\"</span><span class=\"token punctuation\">:</span>   loss <span class=\"token operator\">=</span> supcon_loss<span class=\"token operator\">+</span>ce_loss<span class=\"token operator\">+</span>kd_loss</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">elif</span> loss_name <span class=\"token operator\">==</span> <span class=\"token string\">\"supcon_bce\"</span><span class=\"token punctuation\">:</span>  loss <span class=\"token operator\">=</span> supcon_loss<span class=\"token operator\">+</span>bce_loss</pre></td></tr></table></figure><h3 id=\"3-返回-loss-features_enc-features-logits\"><a class=\"anchor\" href=\"#3-返回-loss-features_enc-features-logits\">#</a> 3. 返回 loss, features_enc, features, logits</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> loss<span class=\"token punctuation\">,</span> features_enc<span class=\"token punctuation\">,</span> features<span class=\"token punctuation\">,</span> logits</pre></td></tr></table></figure><h1 id=\"训练和评估模型\"><a class=\"anchor\" href=\"#训练和评估模型\">#</a> 训练和评估模型</h1>\n<h2 id=\"train_and_eval\"><a class=\"anchor\" href=\"#train_and_eval\">#</a> train_and_eval( )</h2>\n<h3 id=\"1-加载上一轮预训练的参数配置-模型和分词器\"><a class=\"anchor\" href=\"#1-加载上一轮预训练的参数配置-模型和分词器\">#</a> 1. 加载上一轮预训练的参数配置、模型和分词器</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 创建模型配置、模型类别和分词器类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>config_class<span class=\"token punctuation\">,</span> model_class<span class=\"token punctuation\">,</span> tokenizer_class <span class=\"token operator\">=</span> MODEL_CLASSES<span class=\"token punctuation\">[</span>args<span class=\"token punctuation\">.</span>model_type<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 如果是第一轮，则直接加载 bert-base-uncased 模型</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>config <span class=\"token operator\">=</span> config_class<span class=\"token punctuation\">.</span>from_pretrained<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>config_name <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>config_name <span class=\"token keyword\">else</span> model_name_or_path，num_labels<span class=\"token operator\">=</span>num_labels<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>tokenizer <span class=\"token operator\">=</span> tokenizer_class<span class=\"token punctuation\">.</span>from_pretrained<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>tokenizer_name <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>tokenizer_name <span class=\"token keyword\">else</span> model_name_or_path<span class=\"token punctuation\">,</span>do_lower_case<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>do_lower_case<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>model <span class=\"token operator\">=</span> model_class<span class=\"token punctuation\">.</span>from_pretrained<span class=\"token punctuation\">(</span>model_name_or_path<span class=\"token punctuation\">,</span> from_tf<span class=\"token operator\">=</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".ckpt\"</span> <span class=\"token keyword\">in</span> model_name_or_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>config<span class=\"token operator\">=</span>config<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"2-获取训练集\"><a class=\"anchor\" href=\"#2-获取训练集\">#</a> 2. 获取训练集</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># train_dataset=TensorDataset(all_input_ids, all_input_mask, all_segment_ids, all_label_ids)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>train_dataset<span class=\"token operator\">=</span>load_and_cache_examples<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span>tokenizer<span class=\"token punctuation\">,</span>labels<span class=\"token punctuation\">,</span>pad_token_label_id<span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"rehearsal\"</span><span class=\"token punctuation\">,</span>data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 顺序采样</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>train_sampler <span class=\"token operator\">=</span> SequentialSampler<span class=\"token punctuation\">(</span>train_dataset<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>local_rank <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> DistributedSampler<span class=\"token punctuation\">(</span>train_dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 创建训练数据加载器</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>train_dataloader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>train_dataset<span class=\"token punctuation\">,</span> sampler<span class=\"token operator\">=</span>train_sampler<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>train_batch_size<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"3-获取旧模型的特征\"><a class=\"anchor\" href=\"#3-获取旧模型的特征\">#</a> 3. 获取旧模型的特征</h3>\n<p><strong>teacher_evaluate()</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 如果当前不是第一个任务，则需要对老师模型进行评估。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> step_id <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    t_logits<span class=\"token punctuation\">,</span> out_new_labels <span class=\"token operator\">=</span> teacher_evaluate<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> train_dataloader<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span>labels<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                                                pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"train\"</span><span class=\"token punctuation\">,</span> data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    model<span class=\"token punctuation\">.</span>new_classifier<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建一个新的分类器</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    t_logits <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    out_new_labels <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><h3 id=\"4-训练模型\"><a class=\"anchor\" href=\"#4-训练模型\">#</a> 4. 训练模型</h3>\n<p><strong>train()</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>global_step<span class=\"token punctuation\">,</span> tr_loss <span class=\"token operator\">=</span> train<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> train_dataset<span class=\"token punctuation\">,</span> train_dataloader<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                                pad_token_label_id<span class=\"token punctuation\">,</span> data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">,</span> output_dir<span class=\"token operator\">=</span>output_dir<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                                t_logits<span class=\"token operator\">=</span>t_logits<span class=\"token punctuation\">,</span> out_new_labels<span class=\"token operator\">=</span>out_new_labels<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 保存训练过程中得到的模型参数、配置和分词器    </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>model_to_save<span class=\"token punctuation\">.</span>save_pretrained<span class=\"token punctuation\">(</span>output_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>tokenizer<span class=\"token punctuation\">.</span>save_pretrained<span class=\"token punctuation\">(</span>output_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>torch<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>output_dir<span class=\"token punctuation\">,</span> <span class=\"token string\">\"training_args.bin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"5在开发集上评估模型\"><a class=\"anchor\" href=\"#5在开发集上评估模型\">#</a> 5. 在开发集上评估模型</h3>\n<p><strong>evaluate()</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 对于每个检查点，加载模型并进行评估</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> checkpoint <span class=\"token keyword\">in</span> checkpoints<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    model <span class=\"token operator\">=</span> model_class<span class=\"token punctuation\">.</span>from_pretrained<span class=\"token punctuation\">(</span>checkpoint<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    train_dataloader<span class=\"token operator\">=</span><span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     _<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">,</span>  _ <span class=\"token operator\">=</span> evaluate<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                            data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">,</span> prefix<span class=\"token operator\">=</span>global_step<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"6在测试集上进行预测\"><a class=\"anchor\" href=\"#6在测试集上进行预测\">#</a> 6. 在测试集上进行预测</h3>\n<p><strong>evaluate()</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 加载模型和分词器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>tokenizer <span class=\"token operator\">=</span> tokenizer_class<span class=\"token punctuation\">.</span>from_pretrained<span class=\"token punctuation\">(</span>output_dir<span class=\"token punctuation\">,</span> do_lower_case<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>do_lower_case<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>model <span class=\"token operator\">=</span> model_class<span class=\"token punctuation\">.</span>from_pretrained<span class=\"token punctuation\">(</span>output_dir<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 调用 evaluate 函数对测试集进行预测，获取 macro-F1 和 micro-F1 结果以及预测的标签。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>macro_results<span class=\"token punctuation\">,</span> micro_results<span class=\"token punctuation\">,</span> predictions <span class=\"token operator\">=</span> evaluate<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                                    pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"teacher_evaluate\"><a class=\"anchor\" href=\"#teacher_evaluate\">#</a> teacher_evaluate()</h2>\n<h3 id=\"1-根据不同模式设置数据集加载器\"><a class=\"anchor\" href=\"#1-根据不同模式设置数据集加载器\">#</a> 1. 根据不同模式设置数据集加载器</h3>\n<p>如果模式是 &quot;train&quot;，，则使用训练数集</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token string\">\"train\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    eval_dataloader <span class=\"token operator\">=</span> train_dataloader</pre></td></tr></table></figure><p>如果模式是 &quot;dev&quot;，则使用开发集</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">elif</span> mode <span class=\"token operator\">==</span> <span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    eval_dataset <span class=\"token operator\">=</span> load_and_cache_examples<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span>mode<span class=\"token punctuation\">,</span>data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    eval_sampler <span class=\"token operator\">=</span> SequentialSampler<span class=\"token punctuation\">(</span>eval_dataset<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>local_rank <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> DistributedSampler<span class=\"token punctuation\">(</span>eval_dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    eval_dataloader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>eval_dataset<span class=\"token punctuation\">,</span> sampler<span class=\"token operator\">=</span>eval_sampler<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>eval_batch_size<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"2-评估模型\"><a class=\"anchor\" href=\"#2-评估模型\">#</a> 2. 评估模型</h3>\n<p>将模型设置为评估模式</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>model<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>使用 get_token_logits_and_labels 函数获取每个 batch 的预测分数 logits 和输出标签 out_labels</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> batch <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span>eval_dataloader<span class=\"token punctuation\">,</span> desc<span class=\"token operator\">=</span><span class=\"token string\">\"Evaluating\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    logits<span class=\"token punctuation\">,</span> out_labels <span class=\"token operator\">=</span> get_token_logits_and_labels<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> batch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 对评估步骤计数，以便跟踪已评估的批次数量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    nb_eval_steps <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 将每个批次的 logits 分数添加到 logits_list 列表中</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    logits_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cpu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"3-用原型重新标记阈值重新标记旧实体类\"><a class=\"anchor\" href=\"#3-用原型重新标记阈值重新标记旧实体类\">#</a> 3. 用原型重新标记阈值重新标记旧实体类</h3>\n<p>计算原型重新标记阈值和与每个样本的原型相似度最高的实体类别<br />\n<strong> evaluate ()</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 计算每个批次样本中原型相似度最大值所在的类别索引 preds</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 每个批次样本与每个类别的原型相似度的最大值 emissions</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 根据原有模型预测的标签索引序列 out_label_ids</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 每个旧类别的原型重新标记阈值列表（还未乘 βi）prototype_dists</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>preds<span class=\"token punctuation\">,</span> emissions<span class=\"token punctuation\">,</span> out_label_ids<span class=\"token punctuation\">,</span> prototype_dists <span class=\"token operator\">=</span> evaluate<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                                        mode<span class=\"token operator\">=</span><span class=\"token string\">\"rehearsal\"</span><span class=\"token punctuation\">,</span> data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 计算原型重新标记阈值 (根据不同的任务步骤 i 来调整超参数 βi)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>current_task_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>change_th<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        task_para <span class=\"token operator\">=</span> th_para <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>current_task_id <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>th_reduction  <span class=\"token comment\"># βi</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        task_para <span class=\"token operator\">=</span> th_para</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        prototype_dists<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span>args<span class=\"token punctuation\">.</span>per_types<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">.</span>per_types<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*=</span> task_para</pre></td></tr></table></figure><p>重新标记旧实体类</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>out_label_ids<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 迭代每个 batch  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>out_label_ids<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 迭代每个样本  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        idx <span class=\"token operator\">=</span> preds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>   <span class=\"token comment\"># 根据原型相似度预测的类别索引</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># 如果原型的相似度大于重新标记阈值并且预测的标签是旧实体类的标签</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> emissions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> prototype_dists<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> out_label_ids<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> args<span class=\"token punctuation\">.</span>per_types<span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                out_label_new_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 则将该 “O” 预测为这个旧实体类  </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 否则，保持原始的标签不变</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            out_label_new_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>out_label_ids<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"4-返回-logits_list-out_label_new_list\"><a class=\"anchor\" href=\"#4-返回-logits_list-out_label_new_list\">#</a> 4. 返回 logits_list, out_label_new_list</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> logits_list<span class=\"token punctuation\">,</span> out_label_new_list</pre></td></tr></table></figure><h2 id=\"evaluate\"><a class=\"anchor\" href=\"#evaluate\">#</a> evaluate ()</h2>\n<h3 id=\"1-读取数据集\"><a class=\"anchor\" href=\"#1-读取数据集\">#</a> 1. 读取数据集</h3>\n<p>读取 eval_dataset，support_dataset，support_o_dataset，train_dataset。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eval_dataset <span class=\"token operator\">=</span> load_and_cache_examples<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span>mode<span class=\"token punctuation\">,</span> data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>support_dataset <span class=\"token operator\">=</span> load_and_cache_examples<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"memory\"</span><span class=\"token punctuation\">,</span> data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>support_o_dataset <span class=\"token operator\">=</span> load_and_cache_examples<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"memory_o\"</span><span class=\"token punctuation\">,</span> data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>train_dataset <span class=\"token operator\">=</span> load_and_cache_examples<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"train\"</span><span class=\"token punctuation\">,</span> data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 顺序采样</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>eval_sampler <span class=\"token operator\">=</span> SequentialSampler<span class=\"token punctuation\">(</span>eval_dataset<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>local_rank <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> DistributedSampler<span class=\"token punctuation\">(</span>eval_dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>eval_dataloader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>eval_dataset<span class=\"token punctuation\">,</span> sampler<span class=\"token operator\">=</span>eval_sampler<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>eval_batch_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>support_sampler <span class=\"token operator\">=</span> SequentialSampler<span class=\"token punctuation\">(</span>support_dataset<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>local_rank <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> DistributedSampler<span class=\"token punctuation\">(</span>support_dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>support_o_sampler <span class=\"token operator\">=</span> SequentialSampler<span class=\"token punctuation\">(</span>support_o_dataset<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>local_rank <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> DistributedSampler<span class=\"token punctuation\">(</span>support_o_dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>train_sampler <span class=\"token operator\">=</span> SequentialSampler<span class=\"token punctuation\">(</span>train_dataset<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>local_rank <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> DistributedSampler<span class=\"token punctuation\">(</span>train_dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 数据集加载器</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>support_dataloader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>support_dataset<span class=\"token punctuation\">,</span> sampler<span class=\"token operator\">=</span>support_sampler<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>eval_batch_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>support_o_dataloader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>support_o_dataset<span class=\"token punctuation\">,</span> sampler<span class=\"token operator\">=</span>support_o_sampler<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>eval_batch_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>train_dataloader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>train_dataset<span class=\"token punctuation\">,</span> sampler<span class=\"token operator\">=</span>train_sampler<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>eval_batch_size<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"2-获取支持数据集的embbedings和labels\"><a class=\"anchor\" href=\"#2-获取支持数据集的embbedings和labels\">#</a> 2. 获取支持数据集的 embbedings 和 labels</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>support_encodings<span class=\"token punctuation\">,</span> support_labels <span class=\"token operator\">=</span> get_support_encodings_and_labels_total<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> support_dataloader<span class=\"token punctuation\">,</span> support_o_dataloader<span class=\"token punctuation\">,</span> train_dataloader<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"3-三种重新标记来自旧类别的o的策略\"><a class=\"anchor\" href=\"#3-三种重新标记来自旧类别的o的策略\">#</a> 3. 三种重新标记来自旧类别的 “O” 的策略</h3>\n<h4 id=\"1使用原型重新标记\"><a class=\"anchor\" href=\"#1使用原型重新标记\">#</a> 1）使用原型重新标记</h4>\n<p>基于 “O” 样本与原型之间的距离<br />\n<strong>计算每个类别的原型</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>exemplar_means <span class=\"token operator\">=</span> get_exemplar_means<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> support_encodings<span class=\"token punctuation\">,</span> support_labels<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>计算原型重新标记阈值以及 “O” 与原型的最高相似度</strong></p>\n<p>利用 NNClassification () 计算 nn_preds，nn_emissions，prototype_dists</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> _<span class=\"token punctuation\">,</span> batch <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>eval_iterator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    batch <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> batch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 循环迭代 eval_iterator，使用原有的模型获取每个批次的 encodings 和 labels</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    encodings<span class=\"token punctuation\">,</span> encoding_labels <span class=\"token operator\">=</span> get_token_encodings_and_labels<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> batch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 如果是 rehearsal 模式，则去除掉当前 task 样本的 support_encodings 和 support_labels 再进行预测。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token string\">\"rehearsal\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        cls <span class=\"token operator\">=</span> NNClassification<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        support_encodings <span class=\"token operator\">=</span> support_encodings<span class=\"token punctuation\">[</span>support_labels <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> args<span class=\"token punctuation\">.</span>per_types<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        support_labels <span class=\"token operator\">=</span> support_labels<span class=\"token punctuation\">[</span>support_labels <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> args<span class=\"token punctuation\">.</span>per_types<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        nn_preds<span class=\"token punctuation\">(</span>batch_size<span class=\"token punctuation\">,</span> sent_len<span class=\"token punctuation\">)</span> 包含每个样本中原型相似度最大值所在的类别索引</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        nn_preds(batch_size, sent_len) 包含每个样本中原型相似度最大值所在的类别索引</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        nn_emissions(batch_size, sent_len, ndim) 包含每个样本与每个类别的原型相似度的最大值</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        prototype_dists 每个旧类别的原型重新标记阈值列表（还未乘βi）</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        nn_preds<span class=\"token punctuation\">,</span> nn_emissions<span class=\"token punctuation\">,</span> prototype_dists <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span>nn_classifier_dot_prototype<span class=\"token punctuation\">(</span>encodings<span class=\"token punctuation\">,</span> support_encodings<span class=\"token punctuation\">,</span> support_labels<span class=\"token punctuation\">,</span> exemplar_means<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"2使用最近邻重新标记\"><a class=\"anchor\" href=\"#2使用最近邻重新标记\">#</a> 2）使用最近邻重新标记</h4>\n<p>基于 “O” 样本与每个类别示例之间的距离</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>cls_name <span class=\"token operator\">==</span> <span class=\"token string\">\"ncm_dot\"</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        cls <span class=\"token operator\">=</span> NcmClassification<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        nn_preds <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span>ncm_classifier_dot<span class=\"token punctuation\">(</span>encodings<span class=\"token punctuation\">,</span> support_encodings<span class=\"token punctuation\">,</span> support_labels<span class=\"token punctuation\">,</span> exemplar_means<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"3使用原有模型重新标记\"><a class=\"anchor\" href=\"#3使用原有模型重新标记\">#</a> 3）使用原有模型重新标记</h4>\n<p>作为前两种方法的参考标注</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">elif</span> args<span class=\"token punctuation\">.</span>cls_name <span class=\"token operator\">==</span> <span class=\"token string\">\"linear\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        nn_preds<span class=\"token punctuation\">,</span> encoding_labels <span class=\"token operator\">=</span> get_token_logits_and_labels<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> batch<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"4-保存预测结果\"><a class=\"anchor\" href=\"#4-保存预测结果\">#</a> 4. 保存预测结果</h3>\n<p>将每个批次的预测结果追加到 preds 中，并将作为参考标准的预测标签保存到 out_label_ids 中。如果当前模式是 rehearsal 模式，还会保存 emissions。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> preds <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 第一次预测</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        preds <span class=\"token operator\">=</span> nn_preds<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cpu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        out_label_ids <span class=\"token operator\">=</span> encoding_labels<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cpu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token string\">\"rehearsal\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            emissions <span class=\"token operator\">=</span> nn_emissions<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cpu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        preds <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">,</span> nn_preds<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cpu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        out_label_ids <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>out_label_ids<span class=\"token punctuation\">,</span> encoding_labels<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cpu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token string\">\"rehearsal\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            emissions <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>emissions<span class=\"token punctuation\">,</span> nn_emissions<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cpu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"5-预测结果\"><a class=\"anchor\" href=\"#5-预测结果\">#</a> 5. 预测结果</h3>\n<p>如果当前模式是 rehearsal 模式，那么函数直接将返回 preds、 emissions、out_label_ids 和 prototype_dists。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token string\">\"rehearsal\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> preds<span class=\"token punctuation\">,</span> emissions<span class=\"token punctuation\">,</span> out_label_ids<span class=\"token punctuation\">,</span> prototype_dists</pre></td></tr></table></figure><p>如果使用的是线性分类器，根据 preds 得出预测的最大 logits？</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>cls_name <span class=\"token operator\">==</span> <span class=\"token string\">\"linear\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    preds <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>out_label_list 和 preds_list 存储使用原有模型和使用自定义方法预测的标签字符串序列</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 创建 label_map 字典，将标签的索引映射到相应标签的字符串名称。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>label_map <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">:</span> <span class=\"token string\">\"I-\"</span><span class=\"token operator\">+</span>label <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> label <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>label_map<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"O\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>out_label_ids<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>out_label_ids<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> out_label_ids<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> pad_token_label_id<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            out_label_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>label_map<span class=\"token punctuation\">[</span>out_label_ids<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            preds_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>label_map<span class=\"token punctuation\">[</span>preds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>输出评价指标结果。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 使用 seqeval 库计算 F1-score。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>metric <span class=\"token operator\">=</span> load_metric<span class=\"token punctuation\">(</span><span class=\"token string\">\"seqeval\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>metric<span class=\"token punctuation\">.</span>add_batch<span class=\"token punctuation\">(</span>predictions<span class=\"token operator\">=</span>preds_list<span class=\"token punctuation\">,</span> references<span class=\"token operator\">=</span>out_label_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>macro_results<span class=\"token punctuation\">,</span> micro_results<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> compute_metrics<span class=\"token punctuation\">(</span>metric<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>返回评价指标结果以及预测的标签序列。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> macro_results<span class=\"token punctuation\">,</span> micro_results<span class=\"token punctuation\">,</span> preds_list</pre></td></tr></table></figure><h2 id=\"train\"><a class=\"anchor\" href=\"#train\">#</a> train()</h2>\n<h3 id=\"1-计算训练总步数t_total和训练轮数num_train_epochs\"><a class=\"anchor\" href=\"#1-计算训练总步数t_total和训练轮数num_train_epochs\">#</a> 1. 计算训练总步数 t_total 和训练轮数 num_train_epochs</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 如果设置了训练最大步数 max_steps，则 t_total = args.max_steps，并计算 num_train_epochs，否则根据 num_train_epochs 计算 t_total。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>max_steps <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    t_total <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>max_steps</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    args<span class=\"token punctuation\">.</span>num_train_epochs <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>max_steps <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_dataloader<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> args<span class=\"token punctuation\">.</span>gradient_accumulation_steps<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    t_total <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_dataloader<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> args<span class=\"token punctuation\">.</span>gradient_accumulation_steps <span class=\"token operator\">*</span> args<span class=\"token punctuation\">.</span>num_train_epochs</pre></td></tr></table></figure><h3 id=\"2-配置优化器\"><a class=\"anchor\" href=\"#2-配置优化器\">#</a> 2. 配置优化器</h3>\n<p>使用 AdamW 优化器，使用了。权重衰减和学习率调节器。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>no_decay <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"bias\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"LayerNorm.weight\"</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 不需要衰减的参数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>optimizer_grouped_parameters <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"params\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>p <span class=\"token keyword\">for</span> n<span class=\"token punctuation\">,</span> p <span class=\"token keyword\">in</span> model<span class=\"token punctuation\">.</span>named_parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span>nd <span class=\"token keyword\">in</span> n <span class=\"token keyword\">for</span> nd <span class=\"token keyword\">in</span> no_decay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"weight_decay\"</span><span class=\"token punctuation\">:</span> args<span class=\"token punctuation\">.</span>weight_decay<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"params\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>p <span class=\"token keyword\">for</span> n<span class=\"token punctuation\">,</span> p <span class=\"token keyword\">in</span> model<span class=\"token punctuation\">.</span>named_parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span>nd <span class=\"token keyword\">in</span> n <span class=\"token keyword\">for</span> nd <span class=\"token keyword\">in</span> no_decay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"weight_decay\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>optimizer <span class=\"token operator\">=</span> AdamW<span class=\"token punctuation\">(</span>optimizer_grouped_parameters<span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>learning_rate<span class=\"token punctuation\">,</span> eps<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>adam_epsilon<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>scheduler <span class=\"token operator\">=</span> get_linear_schedule_with_warmup<span class=\"token punctuation\">(</span>optimizer<span class=\"token punctuation\">,</span> num_warmup_steps<span class=\"token operator\">=</span>args<span class=\"token punctuation\">.</span>warmup_steps<span class=\"token punctuation\">,</span> num_training_steps<span class=\"token operator\">=</span>t_total<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"3-训练\"><a class=\"anchor\" href=\"#3-训练\">#</a> 3. 训练</h3>\n<p>迭代每一轮</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> train_iterator<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> epoch <span class=\"token operator\">>=</span> args<span class=\"token punctuation\">.</span>start_train_o_epoch<span class=\"token punctuation\">:</span></pre></td></tr></table></figure><p>获取每个类别的类别相似度</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>prototype_dists <span class=\"token operator\">=</span> get_rehearsal_prototype<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                                       pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"rehearsal\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                                       data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>获取样本的 logits 和标签</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 按批次遍历训练集中的数据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> step<span class=\"token punctuation\">,</span> batch <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>epoch_iterator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        model<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将模型切换到训练模式</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> num_labels<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">></span> args<span class=\"token punctuation\">.</span>per_types<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 如果不是第一轮训练</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            t_logits_step <span class=\"token operator\">=</span> t_logits<span class=\"token punctuation\">[</span>step<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            new_labels <span class=\"token operator\">=</span> out_new_labels<span class=\"token punctuation\">[</span>step <span class=\"token operator\">*</span> args<span class=\"token punctuation\">.</span>train_batch_size<span class=\"token punctuation\">:</span>step <span class=\"token operator\">*</span> args<span class=\"token punctuation\">.</span>train_batch_size <span class=\"token operator\">+</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>batch<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 如果是第一轮训练，使用训练集的原始标签</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            t_logits_step <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            new_labels <span class=\"token operator\">=</span> batch<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> epoch <span class=\"token operator\">>=</span> args<span class=\"token punctuation\">.</span>start_train_o_epoch<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            loss_name <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>loss_name2  <span class=\"token comment\"># 实体和 “O” 的联合损失函数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            cls <span class=\"token operator\">=</span> NNClassification<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            encodings<span class=\"token punctuation\">,</span> encoding_labels <span class=\"token operator\">=</span> get_token_features_and_labels<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> batch<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>计算样本之间的余弦相似度分数</p>\n<pre><code>            # top_emissions_step(batch_size*set_len, batch_size*set_len):存储样本之间大于实体阈值的余弦相似度分数\n            # 选择类别相似度的中位数作为实体阈值 th_dists\n            top_emissions_step, _ = cls.get_top_emissions_with_th(encodings, encoding_labels, \n                                                                th_dists=torch.median(prototype_dists).item())\n        else:\n            top_emissions_step = top_emissions\n</code></pre>\n<p>用自定义的模型进行训练，获取损失值</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>inputs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"input_ids\"</span><span class=\"token punctuation\">:</span> batch<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                <span class=\"token string\">\"attention_mask\"</span><span class=\"token punctuation\">:</span> batch<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token string\">\"token_type_ids\"</span><span class=\"token punctuation\">:</span> batch<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>model_type <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"bert\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"xlnet\"</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token comment\"># XLM and RoBERTa don\"t use segment_ids</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token string\">\"labels\"</span><span class=\"token punctuation\">:</span> new_labels<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token string\">\"t_logits\"</span><span class=\"token punctuation\">:</span> t_logits_step<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"train\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token string\">\"loss_name\"</span><span class=\"token punctuation\">:</span> loss_name<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token string\">\"top_emissions\"</span><span class=\"token punctuation\">:</span> top_emissions_step<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token string\">\"topk_th\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        outputs <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>inputs<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        loss <span class=\"token operator\">=</span> outputs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 如果设置了梯度累积步数，则需要对损失值进行除以梯度累积步数，以得到平均损失值</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>gradient_accumulation_steps <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            loss <span class=\"token operator\">=</span> loss <span class=\"token operator\">/</span> args<span class=\"token punctuation\">.</span>gradient_accumulation_steps</pre></td></tr></table></figure><p>更新参数</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 后向传播</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        tr_loss <span class=\"token operator\">+=</span> loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\"># 如果达到梯度累计步数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>step <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> args<span class=\"token punctuation\">.</span>gradient_accumulation_steps <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>clip_grad_norm_<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">.</span>max_grad_norm<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            scheduler<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 清除优化器中所有参数的梯度</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            global_step <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># 更新全局步数</span></pre></td></tr></table></figure><h3 id=\"4-评估\"><a class=\"anchor\" href=\"#4-评估\">#</a> 4. 评估</h3>\n<p>在开发集上评估模型性能</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>_<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> evaluate<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> tokenizer<span class=\"token punctuation\">,</span> labels<span class=\"token punctuation\">,</span> pad_token_label_id<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                                                 data_dir<span class=\"token operator\">=</span>data_dir<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>保存模型及参数</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>model_to_save<span class=\"token punctuation\">.</span>save_pretrained<span class=\"token punctuation\">(</span>output_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            torch<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>output_dir<span class=\"token punctuation\">,</span> <span class=\"token string\">\"training_args.bin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>达到最大步数时停止训练</p>\n<pre><code>        if args.max_steps &gt; 0 and global_step &gt; args.max_steps:  \n            epoch_iterator.close()  # 关闭当前的 epoch 迭代器\n            break\n</code></pre>\n<h3 id=\"5-返回全局步数和平均损失\"><a class=\"anchor\" href=\"#5-返回全局步数和平均损失\">#</a> 5. 返回全局步数和平均损失</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> global_step<span class=\"token punctuation\">,</span> tr_loss <span class=\"token operator\">/</span> global_step</pre></td></tr></table></figure><h1 id=\"分类器\"><a class=\"anchor\" href=\"#分类器\">#</a> 分类器</h1>\n<h2 id=\"nnclassification\"><a class=\"anchor\" href=\"#nnclassification\">#</a> NNClassification()</h2>\n<h3 id=\"nn_classifier_dot_prototype\"><a class=\"anchor\" href=\"#nn_classifier_dot_prototype\">#</a> nn_classifier_dot_prototype()</h3>\n<p><strong>根据原型进行重新标记来自旧实体类别的 “O”</strong><br />\n 计算 “O” 与每个类别原型的最大相似度</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 将输入的表示 reps 重塑为二维张量，并对其进行归一化处理。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>feature <span class=\"token operator\">=</span> reps<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> reps<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># (batch_size, ndim)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Normalize</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    feature<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> feature<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> feature<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>norm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    means <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>exemplar_means<span class=\"token punctuation\">[</span>cls<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> cls <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_tags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># (n_classes, ndim)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    dists <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>feature<span class=\"token punctuation\">,</span> means<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># (batch_size, n_classes)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    dists<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>reps<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将第一列真正的 “O” 类别的相似度设为 0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># emissions 包含每个样本中原型相似度的最大值，tags 包含每个样本中原型相似度最大值所在的类别索引。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    emissions<span class=\"token punctuation\">,</span> tags <span class=\"token operator\">=</span> dists<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>计算每个类别的原型重新标记阈值</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 将 support_reps 重塑为二维张量，并对其进行归一化处理。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>support_reps <span class=\"token operator\">=</span> support_reps<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> support_reps<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>support_reps<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Normalize</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    support_reps<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> support_reps<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> support_reps<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>norm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>support_reps <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>normalize<span class=\"token punctuation\">(</span>support_reps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_tags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\"># 计算每个类别原型与支持集中对应类别的样本的相似度</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    support_reps_dists <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>support_reps<span class=\"token punctuation\">[</span>support_tags<span class=\"token operator\">==</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> means<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># 沿着最后一个维度（即特征维度）寻找最小值，并返回这些最小值以及对应的索引</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    prototype_dists<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>support_reps_dists<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"get_top_emissions_with_th\"><a class=\"anchor\" href=\"#get_top_emissions_with_th\">#</a> get_top_emissions_with_th()</h3>\n<p>计算样本之间的余弦相似度</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scores <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_euclidean_metric_dot_2<span class=\"token punctuation\">(</span>reps<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ndim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> reps<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ndim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token comment\"># 排除 “O” 样本的分数（第二维）</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        scores <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>reps_labels <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> scores<span class=\"token punctuation\">.</span>double<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">100.</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># 排除样本与自身的分数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        scores <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                               torch<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">100.</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>筛选出大于实体阈值的分数</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>top_emissions <span class=\"token operator\">=</span> scores <span class=\"token operator\">></span> th_dists</pre></td></tr></table></figure><p>返回 top_emissions, scores</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> top_emissions<span class=\"token punctuation\">,</span> scores</pre></td></tr></table></figure>","categories":["NER"],"tags":["NER"]}]