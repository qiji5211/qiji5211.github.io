{
    "version": "https://jsonfeed.org/version/1",
    "title": "白骨生花",
    "description": "同行者，拿起火把！",
    "home_page_url": "http://qiji5211.com",
    "items": [
        {
            "id": "http://qiji5211.com/2023/11/23/%E6%85%A7%E8%AF%95%E4%BB%98%E8%B4%B9%E4%B9%A6%E7%B1%8D%E7%AD%B9%E6%AC%BE%E8%AF%B4%E6%98%8E%EF%BC%81/",
            "url": "http://qiji5211.com/2023/11/23/%E6%85%A7%E8%AF%95%E4%BB%98%E8%B4%B9%E4%B9%A6%E7%B1%8D%E7%AD%B9%E6%AC%BE%E8%AF%B4%E6%98%8E%EF%BC%81/",
            "title": "慧试付费书籍筹款说明！",
            "date_published": "2023-11-23T09:30:58.000Z",
            "content_html": "<h1 id=\"慧试付费书籍筹款说明\"><a class=\"anchor\" href=\"#慧试付费书籍筹款说明\">#</a> 慧试付费书籍筹款说明！</h1>\n<p>为解决部分书籍收费的问题，秉承开源共享、互帮互助的原则，发起本次筹款。</p>\n<p>该项目的捐款将全部用于本站【电子书库】付费书籍的购买与分享。<br />\n电子书库的书籍列表见下：（引用自西电科大书籍资料群）</p>\n<p>【腾讯文档】书籍目录<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnFxLmNvbS9zaGVldC9EWVdSM1lYaDRibmhOU1doaT90YWI9QkIwOEoy\"> https://docs.qq.com/sheet/DYWR3YXh4bnhNSWhi?tab=BB08J2</span></p>\n<h4 id=\"筹款采用完全自愿的原则捐款数额建议在04-5元之间量力而行为自己喜欢的书尽一份绵薄之力即可多余的捐款讲不会被接受蟹蟹\"><a class=\"anchor\" href=\"#筹款采用完全自愿的原则捐款数额建议在04-5元之间量力而行为自己喜欢的书尽一份绵薄之力即可多余的捐款讲不会被接受蟹蟹\">#</a> 筹款采用完全自愿的原则，捐款数额建议在<strong> 0.4-5</strong> 元之间，量力而行，为自己喜欢的书尽一份绵薄之力即可，多余的捐款讲不会被接受，蟹蟹。</h4>\n<p>为方便同学们查找书籍，书籍目录会发布在腾讯文档中，该目录<strong>每周均会进行更新</strong>。</p>\n",
            "tags": []
        },
        {
            "id": "http://qiji5211.com/2023/11/23/zhan/Hexo%20%E4%B8%BB%E9%A2%98%20Shoka%20&%20multi-markdown-it%20%E6%B8%B2%E6%9F%93%E5%99%A8%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/",
            "url": "http://qiji5211.com/2023/11/23/zhan/Hexo%20%E4%B8%BB%E9%A2%98%20Shoka%20&%20multi-markdown-it%20%E6%B8%B2%E6%9F%93%E5%99%A8%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/",
            "title": "Hexo 主题 Shoka & multi-markdown-it 渲染器使用说明",
            "date_published": "2023-11-23T09:30:58.000Z",
            "content_html": "<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==\">hexo-theme-shoka</span> ：本博客自用的主题</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-markdown-it</span>：配套的 markdown 渲染器</li>\n</ul>\n<p>已经支持 hexo 5。</p>\n<p>本项目是完全开源的，也有做一些 example 示例，大家可以随便拿随便改。<br />\n但是很抱歉，博主我暂时不能提供更多的支持，这个写的乱七八糟的文档，暂时也没有时间把它写得更专业一些。<br />\n非常对不住大家！</p>\n<p>当前版本更新至 0.2.5，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8jJUU2JTlCJUI0JUU2JTk2JUIwJUU4JUFFJUIwJUU1JUJEJTk1\">更新记录点此</span></p>\n<p><a href=\"https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/\"><strong>🚀快速开始</strong></a> - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kZXBlbmRlbnRzLw==\">💌依赖插件</span> - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcv\">📌基本配置</span> - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5Lw==\">🌈界面显示</span> - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9zcGVjaWFsLw==\">🦄特殊功能</span></p>\n<h1 id=\"设计缘由\"><a class=\"anchor\" href=\"#设计缘由\">#</a> 设计缘由</h1>\n<p>前几年在 Bear 和 Evernote 上整理了大量笔记，非常喜欢 Bear 默认的 markdown 渲染样式。<br />\n后来因为换了安卓手机，用不了 Bear，四处搜寻替代品，没有满意的。<br />\n然后阴差阳错知道了 Hexo，又得知 Github 也可以免费建私有仓库了，故再次转移阵地到了自建博客，并部署在 Github Pages。</p>\n<p>因为这个博客是用来记笔记的，故起名  <code>书架</code>  。<br />\n对应的主题即  <code>Theme.Shoka</code>  ，可以说是为了笔记阅读而生的主题。<br />\n样式严重参考 Bear，部分代码严重参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQv\">NexT</span>。</p>\n<p>Hexo 的默认及常用渲染器均使用  <code>highlight.js</code>  进行代码高亮，而我喜欢  <code>Prism.js</code>  ，故重写了一个渲染器配合主题食用。<br />\n渲染器取名  <code>multi</code>  ，因为集成了很多很多很多  <code>markdown-it</code>  插件，以及压缩静态文件的功能。<br />\n（最新版的默认渲染器也支持  <code>Prism.js</code>  了，可喜可贺，但不想用，哈哈哈哈哈哈哈</p>\n<p>墙内 Github Pages 访问速度时而感人，所以用了 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qc2RlbGl2ci5jb20v\">jsDelivr</span> 加速，主要是因为它可以按需合并依赖文件。</p>\n<h1 id=\"快速安装\"><a class=\"anchor\" href=\"#快速安装\">#</a> 快速安装</h1>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td># cd your-blog</td>\n</tr>\n<tr>\n<td>git clone <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYS5naXQ=\">https://github.com/amehime/hexo-theme-shoka.git</span> ./themes/shoka</td>\n</tr>\n</tbody>\n</table>\n<p>打开主题目录，内有  <code>example</code>  文件夹，提供了配置文件的 demo 供参考。</p>\n<h1 id=\"安装依赖插件\"><a class=\"anchor\" href=\"#安装依赖插件\">#</a> 安装依赖插件</h1>\n<p>在应用主题之前，必须至少安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-markdown-it</span> 渲染插件 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvcHJlZml4ZXI=\">hexo-autoprefixer</span>。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kZXBlbmRlbnRzLw==\">插件安装与配置教程戳此</span></p>\n<h1 id=\"应用主题\"><a class=\"anchor\" href=\"#应用主题\">#</a> 应用主题</h1>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8jJUU0JUJGJUFFJUU2JTk0JUI5JUU3JUFCJTk5JUU3JTgyJUI5JUU5JTg1JThEJUU3JUJEJUFF\">#</span>修改站点配置</h2>\n<p>修改站点配置文件  <code>&lt;root&gt;/_config.yml</code>  ，把主题改为  <code>shoka</code></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>theme: shoka</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"修改主题配置\"><a class=\"anchor\" href=\"#修改主题配置\">#</a> 修改主题配置</h2>\n<p>主题配置的所有参数在  <code>&lt;root&gt;/themes/shoka/_config.yml</code>  文件中。</p>\n<p>为了方便主题升级，请在根目录新建一个 yml 文件，命名为  <code>_config.shoka.yml</code>  。<br />\n也就是说，所有主题的自定义配置均保存于  <code>&lt;root&gt;/_config.shoka.yml</code>  文件。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcv\">主题的基础配置可以参考这里</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5Lw==\">界面显示相关的配置参考这里</span></p>\n<h1 id=\"更新记录\"><a class=\"anchor\" href=\"#更新记录\">#</a> 更新记录</h1>\n<p>标签含义：<br />\n❗ 需要手动操作的更新信息<br />\n⚠️ 需要注意的更新信息<br />\n🔧 已修复的问题<br />\n⌛ TODO</p>\n<h2 id=\"024-025\"><a class=\"anchor\" href=\"#024-025\">#</a> 0.2.4 👉 0.2.5</h2>\n<p>💡 避免直接修改主题文件，添加各种自定义：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5LyMlRTglODclQUElRTUlQUUlOUElRTQlQjklODklRTklQTElQjUlRTklOUQlQTIlRTklODUlOEQlRTglODklQjI=\">样式</span>：包括配色、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvI2ljb25mb250JUU1JTlCJUJFJUU2JUEwJTg3\">icon</span>、其他自定义样式</li>\n<li>图片：包括<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5LyMlRTglODclQUElRTUlQUUlOUElRTQlQjklODklRTQlQjglQkIlRTklQTIlOTglRTUlOUIlQkUlRTclODklODc=\">主题图片</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFOSU5QSU4RiVFNiU5QyVCQSVFNSU5QiVCRSVFNSVCQSU5Mw==\">随机图库</span></li>\n</ul>\n<p>🔧 修复一些 BUG</p>\n<h2 id=\"023-024\"><a class=\"anchor\" href=\"#023-024\">#</a> 0.2.3 👉 0.2.4</h2>\n<p>⚠️ <strong>评论功能更新</strong></p>\n<ul>\n<li>MiniValine 魔改版更新至 beta10，修改过主题默认  <code>_config.yml</code>  的同学，记得更新末尾的  <code>vendors</code>  到最新哦</li>\n<li>❗ 评论相关的配置有更新，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFNiU5NiU4NyVFNyVBQiVBMCVFOCVBRiU4NCVFOCVBRSVCQQ==\">配置戳此</span>\n<ul>\n<li>主要增加的 Tag 配置，现在可以各种自定义啦</li>\n</ul>\n</li>\n</ul>\n<p>⚠️ 配置新增</p>\n<ul>\n<li>夜间模式  <code>darkmode</code>  ，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFNSVBNCU5QyVFOSU5NyVCNCVFNiVBOCVBMSVFNSVCQyU4Rg==\">配置戳此</span></li>\n<li>自动定位  <code>auto_scroll</code>  ，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFOCU4NyVBQSVFNSU4QSVBOCVFNSVBRSU5QSVFNCVCRCU4RA==\">配置戳此</span></li>\n<li>图床 API 设置  <code>image_server</code>  ，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFOSU5QSU4RiVFNiU5QyVCQSVFNSU5QiVCRSVFNSVCQSU5Mw==\">配置戳此</span></li>\n</ul>\n<p>⚠️ 背景音乐功能增强，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFOCU4MyU4QyVFNiU5OSVBRiVFOSU5RiVCMyVFNCVCOSU5MA==\">配置戳此</span></p>\n<ul>\n<li>可以添加多个播放列表</li>\n<li>加了一些控制按钮</li>\n</ul>\n<p>⚠️ 增加  <code>media</code>  标签，在文章中插入音频和视频播放列表，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9zcGVjaWFsLyNtZWRpYSVFNSVBNCU5QSVFNSVBQSU5MiVFNCVCRCU5Mw==\">方法戳此</span><br />\n⌛ 视频播放器有待增强（显示分段标签，字幕）</p>\n<p>🔧 随机图库支持非渣浪图床的任意图片<br />\n🔧 还有许多小 BUG</p>\n<h2 id=\"022-023\"><a class=\"anchor\" href=\"#022-023\">#</a> 0.2.2 👉 0.2.3</h2>\n<p>❗ 增加主题文件外自定义语言包的功能，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5LyMlRTglODclQUElRTUlQUUlOUElRTQlQjklODklRTglQUYlQUQlRTglQTglODAlRTUlOEMlODU=\">配置戳此</span><br />\n🔧 提高低版本浏览器兼容性</p>\n<h2 id=\"021-022\"><a class=\"anchor\" href=\"#021-022\">#</a> 0.2.1 👉 0.2.2</h2>\n<p>⚠️ 弃用  <code>mediumzoom</code>  ，改成  <code>fancybox</code>  ，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5LyMlRTUlOUIlQkUlRTclODklODclRTUlQjElOTUlRTclQTQlQkElRTQlQjglOEUlRTclOUIlQjglRTUlODYlOEM=\">配置戳此</span><br />\n💡 增加语言包：  <code>繁体中文</code>  和  <code>日语</code> <br />\n💡 quiz 功能优化，根据语言显示题型标签<br />\n🔧 修复评论功能中反复初始化 leancloud-storage<br />\n🔧 修复  <code>audio: false</code>  时不能隐藏播放按钮、停止播放</p>\n<h2 id=\"021\"><a class=\"anchor\" href=\"#021\">#</a> 👉 0.2.1</h2>\n<p>⚠️ 配置文件添加  <code>loader</code>  参数，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFNSU4QSVBMCVFOCVCRCVCRCVFNSU4QSVBOCVFNyU5NCVCQg==\">配置戳此</span><br />\n💡 二级 list 区别显示<br />\n🔧 修复浏览位置定位 BUG<br />\n🔧 修复 firework 动画延迟<br />\n🔧 优化评论功能</p>\n<h2 id=\"019-02\"><a class=\"anchor\" href=\"#019-02\">#</a> 0.1.9 👉 0.2</h2>\n<p>⚠️ <strong>评论功能大改</strong></p>\n<ul>\n<li>弃用不开源的 Valine，改用 MiniValine，并且进行了魔改，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvTWluaVZhbGluZQ==\">项目戳此</span><br />\n主要是大量压缩了代码，弃用一些花里胡哨的功能，又加了一些别的花里胡哨的功能。</li>\n<li>为防止泄露用户邮箱、IP 等隐私信息，弃用 QQ 号获取昵称及头像。<br />\n❗ 同时需要手动进行一些迁移，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ltYWVnb28vVmFsaW5l\">具体步骤戳此</span></li>\n<li>❗ 评论相关的配置亦有更新，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFNiU5NiU4NyVFNyVBQiVBMCVFOCVBRiU4NCVFOCVBRSVCQQ==\">配置戳此</span></li>\n</ul>\n<p>⚠️ 增加单击页面烟花效果，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvIyVFOSVBMSVCNSVFOSU5RCVBMiVFNyU4OSVCOSVFNiU5NSU4OA==\">配置戳此</span><br />\n💡 弃用 Velocity，改用 anime.js，方便未来添加更多花里胡哨的功能严重拖慢页面滑行速度<br />\n🔧 新增多枚 icon，包括豆瓣  <code>i-douban</code>  等<br />\n🔧 一些显示问题</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvdGFncy9IZXhvLw==\">Hexo</span>  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvdGFncy8lRTYlOTUlOTklRTclQTglOEIv\">教程</span></p>\n<ul>\n<li><strong>本文作者：</strong> Ruri Shimotsuki __@__優萌初華</li>\n<li><strong>本文链接：</strong> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\">https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/</span></li>\n</ul>\n",
            "tags": [
                "慧试"
            ]
        },
        {
            "id": "http://qiji5211.com/2023/11/23/zhan/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E7%9A%84%E6%90%AD%E5%BB%BA/",
            "url": "http://qiji5211.com/2023/11/23/zhan/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E7%9A%84%E6%90%AD%E5%BB%BA/",
            "title": "关于本站的搭建",
            "date_published": "2023-11-23T09:30:58.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>本博客是基于 node.js 中的 hexo 快速搭建的资源信息共享站，旨在帮助同学们快速有效地查找资料，免于信息差的焦虑和在各大群聊的奔波。评本站所有资料都可采用直链形式下载，因此可跨设备随想随看。</p>\n<p>评论系统和搜索功能是用一些免费的企业服务对接完成的，后续会加上自己的后端，后续诸多功能会继续完善和更新。 目前部署在了 github 和 gitee 的服务器上，可以通过网址直接进行访问 ​ 所有文章均采用 Markdown 语法编写 md 文件，再由渲染器渲染成 html 文件，即可以说每一遍文章其实都是一个 html 文件。</p>\n<h2 id=\"hexo-的基本介绍\"><a class=\"anchor\" href=\"#hexo-的基本介绍\">#</a> hexo 的基本介绍</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">hexo</span> 是一个快速、简洁且高效的博客框架，它支持几条简短的命令发布博客，因此是对于初学者比较友好的博客框架。</p>\n<p>在 Gitee/GitHub 上有很多这样的框架，我们深入学习编程，就要拥有阅读文档并使用它们的能力，在这个过程中我们会接触很多配置，不必去深究其中的原理，重在应用就可以啦，就像会开车，并不一定需要知道如何造汽车。</p>\n<h2 id=\"hexo-的基本文件结构\"><a class=\"anchor\" href=\"#hexo-的基本文件结构\">#</a> hexo 的基本文件结构</h2>\n<ol>\n<li>\n<p>_config.yml 文件：站点配置文件，很多功能、插件需要修改该配置文件应用生效。</p>\n</li>\n<li>\n<p>node_modules 文件夹：包含依赖的模块。</p>\n</li>\n<li>\n<p>package.json 文件：依赖的模块列表。说明见：package.json:Specifics of npm’s package.json handling</p>\n</li>\n<li>\n<p>package-lock.json 文件：依赖的模块安装记录。说明见：npm-package-locks:An explanation of npm lockfiles</p>\n</li>\n<li>\n<p>public 文件夹：包含生成的网页静态文件。(可以直接部署在服务器上)</p>\n</li>\n<li>\n<p>scaffolds 文件夹：包含创建的文章、分类、标签界面的模板。博客的定制修改会对模板进行修改。</p>\n</li>\n<li>\n<p>source 文件夹：包含生成网页所需要的源文件，包括包含我们心血的 Markdown 文稿，这也是最重要的内容。</p>\n</li>\n<li>\n<p>themes 文件夹：其中 landscape 是默认的主题，其他文件夹是克隆下来时的主题 (本博客使用的主题是 shoka)。</p>\n</li>\n</ol>\n<h2 id=\"hexo-的优势\"><a class=\"anchor\" href=\"#hexo-的优势\">#</a> hexo 的优势</h2>\n<p>hexo 是静态博客生成器 (SSG), 这意味着它不需要服务端来进行渲染，只需要将文件发送给客户端即可<br />\n因此，hexo 脱离了服务器的限制，可以在 github pages 等静态页面托管平台上部署 hexo 基于 NODEJS, 具有较强的扩展性，性能也相对较高</p>\n<h2 id=\"依赖的插件\"><a class=\"anchor\" href=\"#依赖的插件\">#</a> 依赖的插件</h2>\n<ol>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-it</span></p>\n<p>(md 文件渲染器，压缩 css/js/html)</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvcHJlZml4ZXI=\">hexo-autoprefixer</span></p>\n<p>(给生成的 css 文件们添加浏览器前缀)</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hbGdvbGlhc2VhcmNo\">hexo-algoliasearch</span></p>\n<p>(站内搜索功能)</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1zeW1ib2xzLWNvdW50LXRpbWU=\">hexo-symbols-count-time</span></p>\n<p>(文章或站点字数及阅读时间统计)</p>\n</li>\n</ol>\n<h2 id=\"评论系统和搜索功能\"><a class=\"anchor\" href=\"#评论系统和搜索功能\">#</a> 评论系统和搜索功能</h2>\n<p>评论系统:</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmxlYW5jbG91ZC5jbi8=\">LeanCloud</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly92YWxpbmUuanMub3JnL3F1aWNrc3RhcnQuaHRtbA==\">教程</span></p>\n</li>\n</ul>\n<p>搜索功能:</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxnb2xpYS5jb20v\">algolia</span></p>\n</li>\n<li>\n<p>教程 (自行百度)</p>\n</li>\n</ul>\n<h2 id=\"本博客使用到的-api\"><a class=\"anchor\" href=\"#本博客使用到的-api\">#</a> 本博客使用到的 api</h2>\n<p>随机图片: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGkucjEwMDg2LmNvbS9pbWctYXBpLnBocD90eXBlPSVFNSU4QSVBOCVFNiVCQyVBQiVFNyVCQiVCQyVFNSU5MCU4ODE=\">https://api.r10086.com/img-api.php?type = 动漫综合 1</span><br />\n 音乐: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGkuaW5qYWhvdy5jbi9tZXRpbmc=\">https://api.injahow.cn/meting</span> (然后加上自己的随机歌单)</p>\n<h2 id=\"本博客的特色功能\"><a class=\"anchor\" href=\"#本博客的特色功能\">#</a> 本博客的特色功能</h2>\n<ul>\n<li>好看</li>\n<li>搜索功能</li>\n<li>音乐系统</li>\n<li>点击产生粒子效果</li>\n<li>自动定位上次查看的文章位置</li>\n<li>可以切换夜间主题</li>\n<li>响应式</li>\n</ul>\n",
            "tags": [
                "慧试"
            ]
        },
        {
            "id": "http://qiji5211.com/2023/11/23/xin/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/",
            "url": "http://qiji5211.com/2023/11/23/xin/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/",
            "title": "提问的智慧",
            "date_published": "2023-11-23T09:30:58.000Z",
            "content_html": "<p>文件：提问的智慧<br />\n云链接: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXRjdXQuY24vcC8yNjg1ZTkxZGI1YmI1M2I4\">https://netcut.cn/p/2685e91db5bb53b8</span></p>\n<p>简要介绍：本文为新生必看系列第一篇，正确的提问方式是优秀学习者的必备技能～快快学起来吧！</p>\n",
            "tags": [
                "新生"
            ]
        },
        {
            "id": "http://qiji5211.com/2023/11/23/jike/C%E8%AF%AD%E8%A8%80%E6%9C%9F%E6%9C%AB%E8%AF%95%E9%A2%98/",
            "url": "http://qiji5211.com/2023/11/23/jike/C%E8%AF%AD%E8%A8%80%E6%9C%9F%E6%9C%AB%E8%AF%95%E9%A2%98/",
            "title": "C语言期末试题",
            "date_published": "2023-11-23T09:30:58.000Z",
            "content_html": "<p>文件名：C 语言期末.zip<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9vcHc3Mm8=\">https://easylink.cc/opw72o</span></p>\n<p>衷心感谢每一次的慷慨分享！使用愉快～</p>\n",
            "tags": [
                "C语言"
            ]
        },
        {
            "id": "http://qiji5211.com/2023/11/23/NER/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3%E4%B9%A6%E7%B1%8D/",
            "url": "http://qiji5211.com/2023/11/23/NER/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3%E4%B9%A6%E7%B1%8D/",
            "title": "高等数学相关书籍",
            "date_published": "2023-11-23T09:30:58.000Z",
            "content_html": "<p>收集自 ——【西电科大书籍资料群】</p>\n<p>文件名：微积分快餐 (林群).pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9oa25xMmI=\">https://easylink.cc/hknq2b</span></p>\n<p>文件名：现代数学手册：经典数学卷.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy90MDk3dTg=\">https://easylink.cc/t097u8</span></p>\n<p>文件名：现代数学手册：随机数学卷.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9rNG4zaDY=\">https://easylink.cc/k4n3h6</span></p>\n<p>文件名：微积分 上、下册（迈克尔・斯皮瓦） .pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy8zd3duOGs=\">https://easylink.cc/3wwn8k</span></p>\n<p>文件名：两相微积分学.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9vYzZuZHo=\">https://easylink.cc/oc6ndz</span></p>\n<p>文件名：微积分之屠龙宝刀 .pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9yZWE2cm4=\">https://easylink.cc/rea6rn</span></p>\n<p>文件名：一元函数微积分典型题型及解题技巧 - 许军编.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9jYTF4MDc=\">https://easylink.cc/ca1x07</span></p>\n<p>文件名：傅里叶分析及其应用 (潘文杰) .pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9oODR0Z2M=\">https://easylink.cc/h84tgc</span></p>\n<p>文件名：傅里叶变换及其应用 [美] 罗纳德.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9zNmF2ZXU=\">https://easylink.cc/s6aveu</span></p>\n<p>文件名：微积分 [美] M.R. 施皮格尔.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy90bW1hczY=\">https://easylink.cc/tmmas6</span></p>\n<p>文件名：算子逼近论 (陈文忠).pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9ucjZoczI=\">https://easylink.cc/nr6hs2</span></p>\n<p>文件名：δ- 函数及其应用 (赵为礼).pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9vcmVsNWU=\">https://easylink.cc/orel5e</span></p>\n<p>文件名：特殊函数概论，. 王竹溪，. 郭敦仁.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9pZWt6MWE=\">https://easylink.cc/iekz1a</span></p>\n<p>文件名：无穷分析引论中文版 (欧拉).pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9kaHdlamU=\">https://easylink.cc/dhweje</span></p>\n<p>文件名：推广欧拉常数.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9sMWZ3Zmg=\">https://easylink.cc/l1fwfh</span></p>\n<p>文件名：数学百科全书  卷 1 .pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9hbTZueTk=\">https://easylink.cc/am6ny9</span></p>\n<p>文件名：数学百科全书  卷 2 .pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9sNXN3ZWs=\">https://easylink.cc/l5swek</span></p>\n<p>文件名：数学百科全书  卷 4 .pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9qczdtaXU=\">https://easylink.cc/js7miu</span></p>\n<p>文件名：现代应用数学手册：分析与方程卷.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9yajN4M20=\">https://easylink.cc/rj3x3m</span></p>\n<p>文件名：数学百科全书  卷 3 .pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9wdWcxOTI=\">https://easylink.cc/pug192</span></p>\n<p>文件名：现代应用数学手册：离散数学卷.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy83bnJpY2Q=\">https://easylink.cc/7nricd</span></p>\n<p>文件名：现代应用数学手册：概率统计与随机过程卷.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9wenFxZzE=\">https://easylink.cc/pzqqg1</span></p>\n<p>文件名：实用高等数学 (勾丽杰).pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9rbXA4ZzU=\">https://easylink.cc/kmp8g5</span></p>\n<p>文件名：现代应用数学手册：现代应用分析卷.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy8zcjYzdGg=\">https://easylink.cc/3r63th</span></p>\n<p>文件名：那些年你没学明白的数学：攻读研究生必知必会的数学.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9saW5kYzg=\">https://easylink.cc/lindc8</span></p>\n<p>文件名：现代应用数学手册：计算与数值分析卷.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy8yc3RqYTk=\">https://easylink.cc/2stja9</span></p>\n<p>文件名：现代应用数学手册：计算方法卷.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9tYmYwenI=\">https://easylink.cc/mbf0zr</span></p>\n<p>文件名：现代应用数学手册：运筹学与最优化理论卷.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9leW14cHo=\">https://easylink.cc/eymxpz</span></p>\n<p>文件名：高等数学应用 205 例.pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy82YWxlc2U=\">https://easylink.cc/6alese</span></p>\n<p>文件名：高等数学讲义 (樊映川) .pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9qN3o3dWU=\">https://easylink.cc/j7z7ue</span></p>\n<p>文件名：高等数学 (同济大学) .pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy90ZG81YmY=\">https://easylink.cc/tdo5bf</span></p>\n<p>文件名：微积分之屠龙宝刀  (1).pdf<br />\n 云链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYXN5bGluay5jYy9zZTg2NHE=\">https://easylink.cc/se864q</span></p>\n<p>简要介绍：收录了数学类工具书，以 PDF 形式上传，使用愉快～</p>\n<p>衷心感谢每一次的慷慨分享！</p>\n",
            "tags": [
                "高等数学相关书籍"
            ]
        },
        {
            "id": "http://qiji5211.com/2023/11/23/qi/%E5%A4%A7%E5%88%9B%E9%A1%B9%E7%9B%AE%E5%90%88%E9%9B%86/",
            "url": "http://qiji5211.com/2023/11/23/qi/%E5%A4%A7%E5%88%9B%E9%A1%B9%E7%9B%AE%E5%90%88%E9%9B%86/",
            "title": "大创项目合集",
            "date_published": "2023-11-23T09:30:58.000Z",
            "content_html": "<p>【腾讯文档】2024 年度西电大学生创新创业训练计划命题清单<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnFxLmNvbS9zaGVldC9EVldSVlJXRktVMEZ3WWxwUz90YWI9QkIwOEoy\"> https://docs.qq.com/sheet/DVWRVRWFKU0FwYlpS?tab=BB08J2</span></p>\n",
            "tags": [
                "大创"
            ]
        },
        {
            "id": "http://qiji5211.com/2023/11/23/qianduan/VUE/Vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/",
            "url": "http://qiji5211.com/2023/11/23/qianduan/VUE/Vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/",
            "title": "Vue3快速上手",
            "date_published": "2023-11-23T09:30:58.000Z",
            "content_html": "<h1 id=\"1-vue3简介\"><a class=\"anchor\" href=\"#1-vue3简介\">#</a> 1. Vue3 简介</h1>\n<ul>\n<li>\n<p>2020 年 9 月 18 日， <code>Vue.js</code>  发布版 <code>3.0</code>  版本，代号： <code>One Piece</code></p>\n</li>\n<li>\n<p>经历了：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL2NvcmUvY29tbWl0cy9tYWlu\">4800 + 次提交</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3JmY3MvdHJlZS9tYXN0ZXIvYWN0aXZlLXJmY3M=\">40 + 个 RFC</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS1uZXh0L3B1bGxzP3E9aXMlM0FwcitpcyUzQW1lcmdlZCstYXV0aG9yJTNBYXBwJTJGZGVwZW5kYWJvdC1wcmV2aWV3Kw==\">600 + 次 PR</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL2NvcmUvZ3JhcGhzL2NvbnRyaWJ1dG9ycw==\">300 + 贡献者</span></p>\n</li>\n<li>\n<p>官方发版地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL2NvcmUvcmVsZWFzZXMvdGFnL3YzLjAuMA==\">Release v3.0.0 One Piece · vuejs/core</span></p>\n</li>\n<li>\n<p>截止 2023 年 10 月，最新的公开版本为： <code>3.3.4</code></p>\n<p>&lt;img src=&quot;images/1695089947298-161c1b47-eb86-42fb-b1f8-d6a4fcab8ee2.png&quot; alt=&quot;image.png&quot; style=&quot;zoom:30%;&quot; /&gt;</p>\n</li>\n</ul>\n<h2 id=\"11-性能的提升\"><a class=\"anchor\" href=\"#11-性能的提升\">#</a> 1.1. 【性能的提升】</h2>\n<ul>\n<li>\n<p>打包大小减少 <code>41%</code> 。</p>\n</li>\n<li>\n<p>初次渲染快 <code>55%</code> , 更新渲染快 <code>133%</code> 。</p>\n</li>\n<li>\n<p>内存减少 <code>54%</code> 。</p>\n</li>\n</ul>\n<h2 id=\"12-源码的升级\"><a class=\"anchor\" href=\"#12-源码的升级\">#</a> 1.2.【 源码的升级】</h2>\n<ul>\n<li>\n<p>使用 <code>Proxy</code>  代替 <code>defineProperty</code>  实现响应式。</p>\n</li>\n<li>\n<p>重写虚拟 <code>DOM</code>  的实现和 <code>Tree-Shaking</code> 。</p>\n</li>\n</ul>\n<h2 id=\"13-拥抱typescript\"><a class=\"anchor\" href=\"#13-拥抱typescript\">#</a> 1.3. 【拥抱 TypeScript】</h2>\n<ul>\n<li><code>Vue3</code>  可以更好的支持 <code>TypeScript</code> 。</li>\n</ul>\n<h2 id=\"14-新的特性\"><a class=\"anchor\" href=\"#14-新的特性\">#</a> 1.4. 【新的特性】</h2>\n<ol>\n<li>\n<p><code>Composition API</code> （组合 <code>API</code> ）：</p>\n<ul>\n<li>\n<p><code>setup</code></p>\n</li>\n<li>\n<p><code>ref</code>  与 <code>reactive</code></p>\n</li>\n<li>\n<p><code>computed</code>  与 <code>watch</code></p>\n<p>......</p>\n</li>\n</ul>\n</li>\n<li>\n<p>新的内置组件：</p>\n<ul>\n<li>\n<p><code>Fragment</code></p>\n</li>\n<li>\n<p><code>Teleport</code></p>\n</li>\n<li>\n<p><code>Suspense</code></p>\n<p>......</p>\n</li>\n</ul>\n</li>\n<li>\n<p>其他改变：</p>\n<ul>\n<li>\n<p>新的生命周期钩子</p>\n</li>\n<li>\n<p><code>data</code>  选项应始终被声明为一个函数</p>\n</li>\n<li>\n<p>移除 <code>keyCode</code>  支持作为 <code> v-on</code>  的修饰符</p>\n<p>......</p>\n</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"2-创建vue3工程\"><a class=\"anchor\" href=\"#2-创建vue3工程\">#</a> 2. 创建 Vue3 工程</h1>\n<h2 id=\"21-基于-vue-cli-创建\"><a class=\"anchor\" href=\"#21-基于-vue-cli-创建\">#</a> 2.1. 【基于 vue-cli 创建】</h2>\n<p>点击查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2d1aWRlL2NyZWF0aW5nLWEtcHJvamVjdC5odG1sI3Z1ZS1jcmVhdGU=\">官方文档</span></p>\n<blockquote>\n<p>备注：目前 <code>vue-cli</code>  已处于维护模式，官方推荐基于  <code>Vite</code>  创建项目。</p>\n</blockquote>\n<p><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 查看@vue/cli版本，确保@vue/cli版本在4.5.0以上</span></span><br><span class=\"line\">vue <span class=\"literal\">--version</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 安装或者升级你的@vue/cli </span></span><br><span class=\"line\">npm install <span class=\"literal\">-g</span> @vue/<span class=\"built_in\">cli</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 执行创建命令</span></span><br><span class=\"line\">vue create vue_test</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##  随后选择3.x</span></span><br><span class=\"line\"><span class=\"comment\">##  Choose a version of Vue.js that you want to start the project with (Use arrow keys)</span></span><br><span class=\"line\"><span class=\"comment\">##  &gt; 3.x</span></span><br><span class=\"line\"><span class=\"comment\">##    2.x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 启动</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> vue_test</span><br><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure></p>\n<hr />\n<h2 id=\"22-基于-vite-创建推荐\"><a class=\"anchor\" href=\"#22-基于-vite-创建推荐\">#</a> 2.2. 【基于 vite 创建】(推荐)</h2>\n<p><code>vite</code>  是新一代前端构建工具，官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly92aXRlanMuY24v\">https://vitejs.cn</span>， <code>vite</code>  的优势如下：</p>\n<ul>\n<li>轻量快速的热重载（ <code>HMR</code> ），能实现极速的服务启动。</li>\n<li>对  <code>TypeScript</code> 、 <code>JSX</code> 、 <code>CSS</code>  等支持开箱即用。</li>\n<li>真正的按需编译，不再等待整个应用编译完成。</li>\n<li><code>webpack</code>  构建 与  <code>vite</code>  构建对比图如下：<br />\n&lt;img src=&quot;images/1683167182037-71c78210-8217-4e7d-9a83-e463035efbbe.png&quot; alt=&quot;webpack 构建&quot; title=&quot;webpack 构建&quot; style=&quot;zoom:20%;box-shadow:0 0 10px black&quot; /&gt;\t&lt;img src=&quot;images/1683167204081-582dc237-72bc-499e-9589-2cdfd452e62f.png&quot; alt=&quot;vite 构建&quot; title=&quot;vite 构建&quot; style=&quot;zoom: 20%;box-shadow:0 0 10px black&quot; /&gt;</li>\n</ul>\n<ul>\n<li>具体操作如下（点击查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbi52dWVqcy5vcmcvZ3VpZGUvcXVpY2stc3RhcnQuaHRtbCNjcmVhdGluZy1hLXZ1ZS1hcHBsaWNhdGlvbg==\">官方文档</span>）</li>\n</ul>\n<p><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 1.创建命令</span></span><br><span class=\"line\">npm create vue@latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 2.具体配置</span></span><br><span class=\"line\"><span class=\"comment\">## 配置项目名称</span></span><br><span class=\"line\">√ Project name: vue3_test</span><br><span class=\"line\"><span class=\"comment\">## 是否添加TypeScript支持</span></span><br><span class=\"line\">√ Add TypeScript?  Yes</span><br><span class=\"line\"><span class=\"comment\">## 是否添加JSX支持</span></span><br><span class=\"line\">√ Add JSX Support?  No</span><br><span class=\"line\"><span class=\"comment\">## 是否添加路由环境</span></span><br><span class=\"line\">√ Add Vue Router <span class=\"keyword\">for</span> Single Page Application development?  No</span><br><span class=\"line\"><span class=\"comment\">## 是否添加pinia环境</span></span><br><span class=\"line\">√ Add Pinia <span class=\"keyword\">for</span> state management?  No</span><br><span class=\"line\"><span class=\"comment\">## 是否添加单元测试</span></span><br><span class=\"line\">√ Add Vitest <span class=\"keyword\">for</span> Unit Testing?  No</span><br><span class=\"line\"><span class=\"comment\">## 是否添加端到端测试方案</span></span><br><span class=\"line\">√ Add an <span class=\"keyword\">End</span><span class=\"literal\">-to-End</span> Testing Solution? » No</span><br><span class=\"line\"><span class=\"comment\">## 是否添加ESLint语法检查</span></span><br><span class=\"line\">√ Add ESLint <span class=\"keyword\">for</span> code quality?  Yes</span><br><span class=\"line\"><span class=\"comment\">## 是否添加Prettiert代码格式化</span></span><br><span class=\"line\">√ Add Prettier <span class=\"keyword\">for</span> code formatting?  No</span><br></pre></td></tr></table></figure><br />\n 自己动手编写一个 App 组件</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;app&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;你好啊！&lt;/h1&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    name:&#x27;App&#x27; //组件名</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  .app &#123;</span><br><span class=\"line\">    background-color: #ddd;</span><br><span class=\"line\">    box-shadow: 0 0 10px;</span><br><span class=\"line\">    border-radius: 10px;</span><br><span class=\"line\">    padding: 20px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<p>安装官方推荐的 <code>vscode</code>  插件：</p>\n<p>&lt;img src=&quot;images/volar.png&quot; alt=&quot;Snipaste_2023-10-08_20-46-34&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;images/image-20231218085906380.png&quot; alt=&quot;image-20231218085906380&quot; style=&quot;zoom:42%;&quot; /&gt;</p>\n<p>总结：</p>\n<ul>\n<li><code>Vite</code>  项目中， <code>index.html</code>  是项目的入口文件，在项目最外层。</li>\n<li>加载 <code>index.html</code>  后， <code>Vite</code>  解析  <code>&lt;script type=&quot;module&quot; src=&quot;xxx&quot;&gt;</code>  指向的 <code>JavaScript</code> 。</li>\n<li><code>Vue3</code> ** 中是通过 ** <code>createApp</code>  函数创建一个应用实例。</li>\n</ul>\n<h2 id=\"23-一个简单的效果\"><a class=\"anchor\" href=\"#23-一个简单的效果\">#</a> 2.3. 【一个简单的效果】</h2>\n<p><code>Vue3</code>  向下兼容 <code>Vue2</code>  语法，且 <code>Vue3</code>  中的模板中可以没有根标签</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    name:&#x27;App&#x27;,</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      return &#123;</span><br><span class=\"line\">        name:&#x27;张三&#x27;,</span><br><span class=\"line\">        age:18,</span><br><span class=\"line\">        tel:&#x27;13888888888&#x27;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">      changeName()&#123;</span><br><span class=\"line\">        this.name = &#x27;zhang-san&#x27;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      changeAge()&#123;</span><br><span class=\"line\">        this.age += 1</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      showTel()&#123;</span><br><span class=\"line\">        alert(this.tel)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"3-vue3核心语法\"><a class=\"anchor\" href=\"#3-vue3核心语法\">#</a> 3. Vue3 核心语法</h1>\n<h2 id=\"31-optionsapi-与-compositionapi\"><a class=\"anchor\" href=\"#31-optionsapi-与-compositionapi\">#</a> 3.1.  【OptionsAPI 与 CompositionAPI】</h2>\n<ul>\n<li><code>Vue2</code>  的 <code>API</code>  设计是 <code>Options</code> （配置）风格的。</li>\n<li><code>Vue3</code>  的 <code>API</code>  设计是 <code>Composition</code> （组合）风格的。</li>\n</ul>\n<h3 id=\"options-api-的弊端\"><a class=\"anchor\" href=\"#options-api-的弊端\">#</a> Options API 的弊端</h3>\n<p><code>Options</code>  类型的  <code>API</code> ，数据、方法、计算属性等，是分散在： <code>data</code> 、 <code>methods</code> 、 <code>computed</code>  中的，若想新增或者修改一个需求，就需要分别修改： <code>data</code> 、 <code>methods</code> 、 <code>computed</code> ，不便于维护和复用。</p>\n<p>&lt;img src=&quot;images/1696662197101-55d2b251-f6e5-47f4-b3f1-d8531bbf9279.gif&quot; alt=&quot;1.gif&quot; style=&quot;zoom:70%;border-radius:20px&quot; /&gt;&lt;img src=&quot;images/1696662200734-1bad8249-d7a2-423e-a3c3-ab4c110628be.gif&quot; alt=&quot;2.gif&quot; style=&quot;zoom:70%;border-radius:20px&quot; /&gt;</p>\n<h3 id=\"composition-api-的优势\"><a class=\"anchor\" href=\"#composition-api-的优势\">#</a> Composition API 的优势</h3>\n<p>可以用函数的方式，更加优雅的组织代码，让相关功能的代码更加有序的组织在一起。</p>\n<p>&lt;img src=&quot;images/1696662249851-db6403a1-acb5-481a-88e0-e1e34d2ef53a.gif&quot; alt=&quot;3.gif&quot; style=&quot;height:300px;border-radius:10px&quot;  /&gt;&lt;img src=&quot;images/1696662256560-7239b9f9-a770-43c1-9386-6cc12ef1e9c0.gif&quot; alt=&quot;4.gif&quot; style=&quot;height:300px;border-radius:10px&quot;  /&gt;</p>\n<blockquote>\n<p>说明：以上四张动图原创作者：大帅老猿</p>\n</blockquote>\n<h2 id=\"32-拉开序幕的-setup\"><a class=\"anchor\" href=\"#32-拉开序幕的-setup\">#</a> 3.2. 【拉开序幕的 setup】</h2>\n<h3 id=\"setup-概述\"><a class=\"anchor\" href=\"#setup-概述\">#</a> setup 概述</h3>\n<p><code>setup</code>  是 <code>Vue3</code>  中一个新的配置项，值是一个函数，它是  <code>Composition API</code>  <strong>“表演的舞台</strong><em><strong>”</strong></em>，组件中所用到的：数据、方法、计算属性、监视...... 等等，均配置在 <code>setup</code>  中。</p>\n<p>特点如下：</p>\n<ul>\n<li><code>setup</code>  函数返回的对象中的内容，可直接在模板中使用。</li>\n<li><code>setup</code>  中访问 <code>this</code>  是 <code>undefined</code> 。</li>\n<li><code>setup</code>  函数会在 <code>beforeCreate</code>  之前调用，它是 “领先” 所有钩子执行的。<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    name:&#x27;Person&#x27;,</span><br><span class=\"line\">    setup()&#123;</span><br><span class=\"line\">      // 数据，原来写在data中（注意：此时的name、age、tel数据都不是响应式数据）</span><br><span class=\"line\">      let name = &#x27;张三&#x27;</span><br><span class=\"line\">      let age = 18</span><br><span class=\"line\">      let tel = &#x27;13888888888&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">      // 方法，原来写在methods中</span><br><span class=\"line\">      function changeName()&#123;</span><br><span class=\"line\">        name = &#x27;zhang-san&#x27; //注意：此时这么修改name页面是不变化的</span><br><span class=\"line\">        console.log(name)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      function changeAge()&#123;</span><br><span class=\"line\">        age += 1 //注意：此时这么修改age页面是不变化的</span><br><span class=\"line\">        console.log(age)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      function showTel()&#123;</span><br><span class=\"line\">        alert(tel)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      // 返回一个对象，对象中的内容，模板中可以直接使用</span><br><span class=\"line\">      return &#123;name,age,tel,changeName,changeAge,showTel&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"setup-的返回值\"><a class=\"anchor\" href=\"#setup-的返回值\">#</a> setup 的返回值</h3>\n<ul>\n<li>若返回一个<strong>对象</strong>：则对象中的：属性、方法等，在模板中均可以直接使用 **（重点关注）。**</li>\n<li>若返回一个<strong>函数</strong>：则可以自定义渲染内容，代码如下：<br />\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">setup</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\">()=&gt;</span> <span class=\"string\">&#x27;你好啊！&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"setup-与-options-api-的关系\"><a class=\"anchor\" href=\"#setup-与-options-api-的关系\">#</a> setup 与 Options API 的关系</h3>\n<ul>\n<li><code>Vue2</code>  的配置（ <code>data</code> 、 <code>methos</code> ......）中<strong>可以访问到</strong>  <code>setup</code>  中的属性、方法。</li>\n<li>但在 <code>setup</code>  中<strong>不能访问到</strong> <code>Vue2</code>  的配置（ <code>data</code> 、 <code>methos</code> ......）。</li>\n<li>如果与 <code>Vue2</code>  冲突，则 <code>setup</code>  优先。</li>\n</ul>\n<h3 id=\"setup-语法糖\"><a class=\"anchor\" href=\"#setup-语法糖\">#</a> setup 语法糖</h3>\n<p><code>setup</code>  函数有一个语法糖，这个语法糖，可以让我们把 <code>setup</code>  独立出去，代码如下：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    name:&#x27;Person&#x27;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 下面的写法是setup语法糖 --&gt;</span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class=\"line\">  console.log(this) //undefined</span><br><span class=\"line\">  </span><br><span class=\"line\">  // 数据（注意：此时的name、age、tel都不是响应式数据）</span><br><span class=\"line\">  let name = &#x27;张三&#x27;</span><br><span class=\"line\">  let age = 18</span><br><span class=\"line\">  let tel = &#x27;13888888888&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changName()&#123;</span><br><span class=\"line\">    name = &#x27;李四&#x27;//注意：此时这么修改name页面是不变化的</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changAge()&#123;</span><br><span class=\"line\">    console.log(age)</span><br><span class=\"line\">    age += 1 //注意：此时这么修改age页面是不变化的</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function showTel()&#123;</span><br><span class=\"line\">    alert(tel)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure><br />\n 扩展：上述代码，还需要编写一个不写 <code>setup</code>  的 <code>script</code>  标签，去指定组件名字，比较麻烦，我们可以借助 <code>vite</code>  中的插件简化</p>\n<ol>\n<li>\n<p>第一步： <code>npm i vite-plugin-vue-setup-extend -D</code></p>\n</li>\n<li>\n<p>第二步： <code>vite.config.ts</code> <br />\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineConfig &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vite&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">VueSetupExtend</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vite-plugin-vue-setup-extend&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">defineConfig</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [ <span class=\"title class_\">VueSetupExtend</span>() ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>第三步： <code>&lt;script setup lang=&quot;ts&quot; name=&quot;Person&quot;&gt;</code></p>\n</li>\n</ol>\n<h2 id=\"33-ref-创建基本类型的响应式数据\"><a class=\"anchor\" href=\"#33-ref-创建基本类型的响应式数据\">#</a> 3.3. 【ref 创建：基本类型的响应式数据】</h2>\n<ul>\n<li>** 作用：** 定义响应式变量。</li>\n<li><strong>语法：</strong> <code>let xxx = ref(初始值)</code> 。</li>\n<li>** 返回值：** 一个 <code>RefImpl</code>  的实例对象，简称 <code>ref对象</code> 或 <code>ref</code> ， <code>ref</code>  对象的 <code>value</code> <strong> 属性是响应式的</strong>。</li>\n<li><strong>注意点：</strong>\n<ul>\n<li><code>JS</code>  中操作数据需要： <code>xxx.value</code> ，但模板中不需要 <code>.value</code> ，直接使用即可。</li>\n<li>对于 <code>let name = ref('张三')</code>  来说， <code>name</code>  不是响应式的， <code>name.value</code>  是响应式的。<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">  // name和age是一个RefImpl的实例对象，简称ref对象，它们的value属性是响应式的。</span><br><span class=\"line\">  let name = ref(&#x27;张三&#x27;)</span><br><span class=\"line\">  let age = ref(18)</span><br><span class=\"line\">  // tel就是一个普通的字符串，不是响应式的</span><br><span class=\"line\">  let tel = &#x27;13888888888&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  function changeName()&#123;</span><br><span class=\"line\">    // JS中操作ref对象时候需要.value</span><br><span class=\"line\">    name.value = &#x27;李四&#x27;</span><br><span class=\"line\">    console.log(name.value)</span><br><span class=\"line\"></span><br><span class=\"line\">    // 注意：name不是响应式的，name.value是响应式的，所以如下代码并不会引起页面的更新。</span><br><span class=\"line\">    // name = ref(&#x27;zhang-san&#x27;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeAge()&#123;</span><br><span class=\"line\">    // JS中操作ref对象时候需要.value</span><br><span class=\"line\">    age.value += 1 </span><br><span class=\"line\">    console.log(age.value)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function showTel()&#123;</span><br><span class=\"line\">    alert(tel)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"34-reactive-创建对象类型的响应式数据\"><a class=\"anchor\" href=\"#34-reactive-创建对象类型的响应式数据\">#</a> 3.4. 【reactive 创建：对象类型的响应式数据】</h2>\n<ul>\n<li><strong>作用：<strong>定义一个</strong>响应式对象</strong>（基本类型不要用它，要用 <code>ref</code> ，否则报错）</li>\n<li><strong>语法：</strong> <code>let 响应式对象= reactive(源对象)</code> 。</li>\n<li>** 返回值：** 一个 <code>Proxy</code>  的实例对象，简称：响应式对象。</li>\n<li><strong>注意点：</strong> <code>reactive</code>  定义的响应式数据是 “深层次” 的。<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;汽车信息：一台&#123;&#123; car.brand &#125;&#125;汽车，价值&#123;&#123; car.price &#125;&#125;万&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;游戏列表：&lt;/h2&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">      &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c.d&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeCarPrice&quot;&gt;修改汽车价格&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeFirstGame&quot;&gt;修改第一游戏&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;test&quot;&gt;测试&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">import &#123; reactive &#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">// 数据</span><br><span class=\"line\">let car = reactive(&#123; brand: &#x27;奔驰&#x27;, price: 100 &#125;)</span><br><span class=\"line\">let games = reactive([</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa01&#x27;, name: &#x27;英雄联盟&#x27; &#125;,</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa02&#x27;, name: &#x27;王者荣耀&#x27; &#125;,</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa03&#x27;, name: &#x27;原神&#x27; &#125;</span><br><span class=\"line\">])</span><br><span class=\"line\">let obj = reactive(&#123;</span><br><span class=\"line\">  a:&#123;</span><br><span class=\"line\">    b:&#123;</span><br><span class=\"line\">      c:&#123;</span><br><span class=\"line\">        d:666</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">function changeCarPrice() &#123;</span><br><span class=\"line\">  car.price += 10</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function changeFirstGame() &#123;</span><br><span class=\"line\">  games[0].name = &#x27;流星蝴蝶剑&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function test()&#123;</span><br><span class=\"line\">  obj.a.b.c.d = 999</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"35-ref-创建对象类型的响应式数据\"><a class=\"anchor\" href=\"#35-ref-创建对象类型的响应式数据\">#</a> 3.5. 【ref 创建：对象类型的响应式数据】</h2>\n<ul>\n<li>其实 <code>ref</code>  接收的数据可以是：<strong>基本类型</strong>、<strong>对象类型</strong>。</li>\n<li>若 <code>ref</code>  接收的是对象类型，内部其实也是调用了 <code>reactive</code>  函数。<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;汽车信息：一台&#123;&#123; car.brand &#125;&#125;汽车，价值&#123;&#123; car.price &#125;&#125;万&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;游戏列表：&lt;/h2&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">      &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c.d&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeCarPrice&quot;&gt;修改汽车价格&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeFirstGame&quot;&gt;修改第一游戏&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;test&quot;&gt;测试&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">// 数据</span><br><span class=\"line\">let car = ref(&#123; brand: &#x27;奔驰&#x27;, price: 100 &#125;)</span><br><span class=\"line\">let games = ref([</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa01&#x27;, name: &#x27;英雄联盟&#x27; &#125;,</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa02&#x27;, name: &#x27;王者荣耀&#x27; &#125;,</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa03&#x27;, name: &#x27;原神&#x27; &#125;</span><br><span class=\"line\">])</span><br><span class=\"line\">let obj = ref(&#123;</span><br><span class=\"line\">  a:&#123;</span><br><span class=\"line\">    b:&#123;</span><br><span class=\"line\">      c:&#123;</span><br><span class=\"line\">        d:666</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(car)</span><br><span class=\"line\"></span><br><span class=\"line\">function changeCarPrice() &#123;</span><br><span class=\"line\">  car.value.price += 10</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function changeFirstGame() &#123;</span><br><span class=\"line\">  games.value[0].name = &#x27;流星蝴蝶剑&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function test()&#123;</span><br><span class=\"line\">  obj.value.a.b.c.d = 999</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"36-ref-对比-reactive\"><a class=\"anchor\" href=\"#36-ref-对比-reactive\">#</a> 3.6. 【ref 对比 reactive】</h2>\n<p>宏观角度看：</p>\n<blockquote>\n<ol>\n<li>\n<p><code>ref</code>  用来定义：<strong>基本类型数据</strong>、<strong>对象类型数据</strong>；</p>\n</li>\n<li>\n<p><code>reactive</code>  用来定义：<strong>对象类型数据</strong>。</p>\n</li>\n</ol>\n</blockquote>\n<ul>\n<li>区别：</li>\n</ul>\n<blockquote>\n<ol>\n<li>\n<p><code>ref</code>  创建的变量必须使用 <code>.value</code> （可以使用 <code>volar</code>  插件自动添加 <code>.value</code> ）。</p>\n<p>&lt;img src=&quot;images / 自动补充 value.png&quot; alt=&quot;自动补充 value&quot; style=&quot;zoom:50%;border-radius:20px&quot; /&gt;</p>\n</li>\n<li>\n<p><code>reactive</code>  重新分配一个新对象，会<strong>失去</strong>响应式（可以使用 <code>Object.assign</code>  去整体替换）。</p>\n</li>\n</ol>\n</blockquote>\n<ul>\n<li>使用原则：</li>\n</ul>\n<blockquote>\n<ol>\n<li>若需要一个基本类型的响应式数据，必须使用 <code>ref</code> 。</li>\n<li>若需要一个响应式对象，层级不深， <code>ref</code> 、 <code>reactive</code>  都可以。</li>\n<li>若需要一个响应式对象，且层级较深，推荐使用 <code>reactive</code> 。</li>\n</ol>\n</blockquote>\n<h2 id=\"37-torefs-与-toref\"><a class=\"anchor\" href=\"#37-torefs-与-toref\">#</a> 3.7. 【toRefs 与 toRef】</h2>\n<ul>\n<li>作用：将一个响应式对象中的每一个属性，转换为 <code>ref</code>  对象。</li>\n<li>备注： <code>toRefs</code>  与 <code>toRef</code>  功能一致，但 <code>toRefs</code>  可以批量转换。</li>\n<li>语法如下：<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123;person.name&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123;person.age&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;性别：&#123;&#123;person.gender&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeGender&quot;&gt;修改性别&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;ref,reactive,toRefs,toRef&#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let person = reactive(&#123;name:&#x27;张三&#x27;, age:18, gender:&#x27;男&#x27;&#125;)</span><br><span class=\"line\">\t</span><br><span class=\"line\">  // 通过toRefs将person对象中的n个属性批量取出，且依然保持响应式的能力</span><br><span class=\"line\">  let &#123;name,gender&#125; =  toRefs(person)</span><br><span class=\"line\">\t</span><br><span class=\"line\">  // 通过toRef将person对象中的gender属性取出，且依然保持响应式的能力</span><br><span class=\"line\">  let age = toRef(person,&#x27;age&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeName()&#123;</span><br><span class=\"line\">    name.value += &#x27;~&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeAge()&#123;</span><br><span class=\"line\">    age.value += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeGender()&#123;</span><br><span class=\"line\">    gender.value = &#x27;女&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"38-computed\"><a class=\"anchor\" href=\"#38-computed\">#</a> 3.8. 【computed】</h2>\n<p>作用：根据已有数据计算出新数据（和 <code>Vue2</code>  中的 <code>computed</code>  作用一致）。</p>\n<p>&lt;img src=&quot;images/computed.gif&quot; style=&quot;zoom:20%;&quot; /&gt;</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    姓：&lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt; &lt;br&gt;</span><br><span class=\"line\">    名：&lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt; &lt;br&gt;</span><br><span class=\"line\">    全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; &lt;br&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeFullName&quot;&gt;全名改为：li-si&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;App&quot;&gt;</span><br><span class=\"line\">  import &#123;ref,computed&#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  let firstName = ref(&#x27;zhang&#x27;)</span><br><span class=\"line\">  let lastName = ref(&#x27;san&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">  // 计算属性——只读取，不修改</span><br><span class=\"line\">  /* let fullName = computed(()=&gt;&#123;</span><br><span class=\"line\">    return firstName.value + &#x27;-&#x27; + lastName.value</span><br><span class=\"line\">  &#125;) */</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  // 计算属性——既读取又修改</span><br><span class=\"line\">  let fullName = computed(&#123;</span><br><span class=\"line\">    // 读取</span><br><span class=\"line\">    get()&#123;</span><br><span class=\"line\">      return firstName.value + &#x27;-&#x27; + lastName.value</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 修改</span><br><span class=\"line\">    set(val)&#123;</span><br><span class=\"line\">      console.log(&#x27;有人修改了fullName&#x27;,val)</span><br><span class=\"line\">      firstName.value = val.split(&#x27;-&#x27;)[0]</span><br><span class=\"line\">      lastName.value = val.split(&#x27;-&#x27;)[1]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  function changeFullName()&#123;</span><br><span class=\"line\">    fullName.value = &#x27;li-si&#x27;</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"39watch\"><a class=\"anchor\" href=\"#39watch\">#</a> 3.9.【watch】</h2>\n<ul>\n<li>作用：监视数据的变化（和 <code>Vue2</code>  中的 <code>watch</code>  作用一致）</li>\n<li>特点： <code>Vue3</code>  中的 <code>watch</code>  只能监视以下<strong>四种数据</strong>：</li>\n</ul>\n<blockquote>\n<ol>\n<li><code>ref</code>  定义的数据。</li>\n<li><code>reactive</code>  定义的数据。</li>\n<li>函数返回一个值（ <code>getter</code>  函数）。</li>\n<li>一个包含上述内容的数组。</li>\n</ol>\n</blockquote>\n<p>我们在 <code>Vue3</code>  中使用 <code>watch</code>  的时候，通常会遇到以下几种情况：</p>\n<h3 id=\"情况一\"><a class=\"anchor\" href=\"#情况一\">#</a> * 情况一</h3>\n<p>监视 <code>ref</code>  定义的【基本类型】数据：直接写数据名即可，监视的是其 <code>value</code>  值的改变。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;情况一：监视【ref】定义的【基本类型】数据&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2&gt;当前求和为：&#123;&#123;sum&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeSum&quot;&gt;点我sum+1&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;ref,watch&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let sum = ref(0)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeSum()&#123;</span><br><span class=\"line\">    sum.value += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // 监视，情况一：监视【ref】定义的【基本类型】数据</span><br><span class=\"line\">  const stopWatch = watch(sum,(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;sum变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">    if(newValue &gt;= 10)&#123;</span><br><span class=\"line\">      stopWatch()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"情况二\"><a class=\"anchor\" href=\"#情况二\">#</a> * 情况二</h3>\n<p>监视 <code>ref</code>  定义的【对象类型】数据：直接写数据名，监视的是对象的【地址值】，若想监视对象内部的数据，要手动开启深度监视。</p>\n<blockquote>\n<p>注意：</p>\n<ul>\n<li>\n<p>若修改的是 <code>ref</code>  定义的对象中的属性， <code>newValue</code>  和  <code>oldValue</code>  都是新值，因为它们是同一个对象。</p>\n</li>\n<li>\n<p>若修改整个 <code>ref</code>  定义的对象， <code>newValue</code>  是新值，  <code>oldValue</code>  是旧值，因为不是同一个对象了。</p>\n</li>\n</ul>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;情况二：监视【ref】定义的【对象类型】数据&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changePerson&quot;&gt;修改整个人&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;ref,watch&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let person = ref(&#123;</span><br><span class=\"line\">    name:&#x27;张三&#x27;,</span><br><span class=\"line\">    age:18</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeName()&#123;</span><br><span class=\"line\">    person.value.name += &#x27;~&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeAge()&#123;</span><br><span class=\"line\">    person.value.age += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changePerson()&#123;</span><br><span class=\"line\">    person.value = &#123;name:&#x27;李四&#x27;,age:90&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  /* </span><br><span class=\"line\">    监视，情况一：监视【ref】定义的【对象类型】数据，监视的是对象的地址值，若想监视对象内部属性的变化，需要手动开启深度监视</span><br><span class=\"line\">    watch的第一个参数是：被监视的数据</span><br><span class=\"line\">    watch的第二个参数是：监视的回调</span><br><span class=\"line\">    watch的第三个参数是：配置对象（deep、immediate等等.....） </span><br><span class=\"line\">  */</span><br><span class=\"line\">  watch(person,(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;person变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;,&#123;deep:true&#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"情况三\"><a class=\"anchor\" href=\"#情况三\">#</a> *  情况三</h3>\n<p>监视 <code>reactive</code>  定义的【对象类型】数据，且默认开启了深度监视。<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;情况三：监视【reactive】定义的【对象类型】数据&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changePerson&quot;&gt;修改整个人&lt;/button&gt;</span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;test&quot;&gt;修改obj.a.b.c&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let person = reactive(&#123;</span><br><span class=\"line\">    name:&#x27;张三&#x27;,</span><br><span class=\"line\">    age:18</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  let obj = reactive(&#123;</span><br><span class=\"line\">    a:&#123;</span><br><span class=\"line\">      b:&#123;</span><br><span class=\"line\">        c:666</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeName()&#123;</span><br><span class=\"line\">    person.name += &#x27;~&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeAge()&#123;</span><br><span class=\"line\">    person.age += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changePerson()&#123;</span><br><span class=\"line\">    Object.assign(person,&#123;name:&#x27;李四&#x27;,age:80&#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function test()&#123;</span><br><span class=\"line\">    obj.a.b.c = 888</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 监视，情况三：监视【reactive】定义的【对象类型】数据，且默认是开启深度监视的</span><br><span class=\"line\">  watch(person,(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;person变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  watch(obj,(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;Obj变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"情况四\"><a class=\"anchor\" href=\"#情况四\">#</a> * 情况四</h3>\n<p>监视 <code>ref</code>  或 <code>reactive</code>  定义的【对象类型】数据中的<strong>某个属性</strong>，注意点如下：</p>\n<ol>\n<li>若该属性值<strong>不是</strong>【对象类型】，需要写成函数形式。</li>\n<li>若该属性值是<strong>依然</strong>是【对象类型】，可直接编，也可写成函数，建议写成函数。</li>\n</ol>\n<p>结论：监视的要是对象里的属性，那么最好写函数式，注意点：若是对象监视的是地址值，需要关注对象内部，需要手动开启深度监视。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;情况四：监视【ref】或【reactive】定义的【对象类型】数据中的某个属性&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;汽车：&#123;&#123; person.car.c1 &#125;&#125;、&#123;&#123; person.car.c2 &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeC1&quot;&gt;修改第一台车&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeC2&quot;&gt;修改第二台车&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeCar&quot;&gt;修改整个车&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let person = reactive(&#123;</span><br><span class=\"line\">    name:&#x27;张三&#x27;,</span><br><span class=\"line\">    age:18,</span><br><span class=\"line\">    car:&#123;</span><br><span class=\"line\">      c1:&#x27;奔驰&#x27;,</span><br><span class=\"line\">      c2:&#x27;宝马&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeName()&#123;</span><br><span class=\"line\">    person.name += &#x27;~&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeAge()&#123;</span><br><span class=\"line\">    person.age += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeC1()&#123;</span><br><span class=\"line\">    person.car.c1 = &#x27;奥迪&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeC2()&#123;</span><br><span class=\"line\">    person.car.c2 = &#x27;大众&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeCar()&#123;</span><br><span class=\"line\">    person.car = &#123;c1:&#x27;雅迪&#x27;,c2:&#x27;爱玛&#x27;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 监视，情况四：监视响应式对象中的某个属性，且该属性是基本类型的，要写成函数式</span><br><span class=\"line\">  /* watch(()=&gt; person.name,(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;person.name变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;) */</span><br><span class=\"line\"></span><br><span class=\"line\">  // 监视，情况四：监视响应式对象中的某个属性，且该属性是对象类型的，可以直接写，也能写函数，更推荐写函数</span><br><span class=\"line\">  watch(()=&gt;person.car,(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;person.car变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;,&#123;deep:true&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"情况五\"><a class=\"anchor\" href=\"#情况五\">#</a> * 情况五</h3>\n<p>监视上述的多个数据<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;情况五：监视上述的多个数据&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;汽车：&#123;&#123; person.car.c1 &#125;&#125;、&#123;&#123; person.car.c2 &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeC1&quot;&gt;修改第一台车&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeC2&quot;&gt;修改第二台车&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeCar&quot;&gt;修改整个车&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let person = reactive(&#123;</span><br><span class=\"line\">    name:&#x27;张三&#x27;,</span><br><span class=\"line\">    age:18,</span><br><span class=\"line\">    car:&#123;</span><br><span class=\"line\">      c1:&#x27;奔驰&#x27;,</span><br><span class=\"line\">      c2:&#x27;宝马&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeName()&#123;</span><br><span class=\"line\">    person.name += &#x27;~&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeAge()&#123;</span><br><span class=\"line\">    person.age += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeC1()&#123;</span><br><span class=\"line\">    person.car.c1 = &#x27;奥迪&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeC2()&#123;</span><br><span class=\"line\">    person.car.c2 = &#x27;大众&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeCar()&#123;</span><br><span class=\"line\">    person.car = &#123;c1:&#x27;雅迪&#x27;,c2:&#x27;爱玛&#x27;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 监视，情况五：监视上述的多个数据</span><br><span class=\"line\">  watch([()=&gt;person.name,person.car],(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;person.car变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;,&#123;deep:true&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"310-watcheffect\"><a class=\"anchor\" href=\"#310-watcheffect\">#</a> 3.10. 【watchEffect】</h2>\n<ul>\n<li>\n<p>官网：立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行该函数。</p>\n</li>\n<li>\n<p><code>watch</code>  对比 <code>watchEffect</code></p>\n<blockquote>\n<ol>\n<li>\n<p>都能监听响应式数据的变化，不同的是监听数据变化的方式不同</p>\n</li>\n<li>\n<p><code>watch</code> ：要明确指出监视的数据</p>\n</li>\n<li>\n<p><code>watchEffect</code> ：不用明确指出监视的数据（函数中用到哪些属性，那就监视哪些属性）。</p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li>\n<p>示例代码：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;需求：水温达到50℃，或水位达到20cm，则联系服务器&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2 id=&quot;demo&quot;&gt;水温：&#123;&#123;temp&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;水位：&#123;&#123;height&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changePrice&quot;&gt;水温+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeSum&quot;&gt;水位+10&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;ref,watch,watchEffect&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let temp = ref(0)</span><br><span class=\"line\">  let height = ref(0)</span><br><span class=\"line\"></span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changePrice()&#123;</span><br><span class=\"line\">    temp.value += 10</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeSum()&#123;</span><br><span class=\"line\">    height.value += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 用watch实现，需要明确的指出要监视：temp、height</span><br><span class=\"line\">  watch([temp,height],(value)=&gt;&#123;</span><br><span class=\"line\">    // 从value中获取最新的temp值、height值</span><br><span class=\"line\">    const [newTemp,newHeight] = value</span><br><span class=\"line\">    // 室温达到50℃，或水位达到20cm，立刻联系服务器</span><br><span class=\"line\">    if(newTemp &gt;= 50 || newHeight &gt;= 20)&#123;</span><br><span class=\"line\">      console.log(&#x27;联系服务器&#x27;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  // 用watchEffect实现，不用</span><br><span class=\"line\">  const stopWtach = watchEffect(()=&gt;&#123;</span><br><span class=\"line\">    // 室温达到50℃，或水位达到20cm，立刻联系服务器</span><br><span class=\"line\">    if(temp.value &gt;= 50 || height.value &gt;= 20)&#123;</span><br><span class=\"line\">      console.log(document.getElementById(&#x27;demo&#x27;)?.innerText)</span><br><span class=\"line\">      console.log(&#x27;联系服务器&#x27;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 水温达到100，或水位达到50，取消监视</span><br><span class=\"line\">    if(temp.value === 100 || height.value === 50)&#123;</span><br><span class=\"line\">      console.log(&#x27;清理了&#x27;)</span><br><span class=\"line\">      stopWtach()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h2 id=\"311-标签的-ref-属性\"><a class=\"anchor\" href=\"#311-标签的-ref-属性\">#</a> 3.11. 【标签的 ref 属性】</h2>\n<p>作用：用于注册模板引用。</p>\n<blockquote>\n<ul>\n<li>\n<p>用在普通 <code>DOM</code>  标签上，获取的是 <code>DOM</code>  节点。</p>\n</li>\n<li>\n<p>用在组件标签上，获取的是组件实例对象。</p>\n</li>\n</ul>\n</blockquote>\n<p>用在普通 <code>DOM</code>  标签上：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1 ref=&quot;title1&quot;&gt;尚硅谷&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2 ref=&quot;title2&quot;&gt;前端&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h3 ref=&quot;title3&quot;&gt;Vue&lt;/h3&gt;</span><br><span class=\"line\">    &lt;input type=&quot;text&quot; ref=&quot;inpt&quot;&gt; &lt;br&gt;&lt;br&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;showLog&quot;&gt;点我打印内容&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">\t</span><br><span class=\"line\">  let title1 = ref()</span><br><span class=\"line\">  let title2 = ref()</span><br><span class=\"line\">  let title3 = ref()</span><br><span class=\"line\"></span><br><span class=\"line\">  function showLog()&#123;</span><br><span class=\"line\">    // 通过id获取元素</span><br><span class=\"line\">    const t1 = document.getElementById(&#x27;title1&#x27;)</span><br><span class=\"line\">    // 打印内容</span><br><span class=\"line\">    console.log((t1 as HTMLElement).innerText)</span><br><span class=\"line\">    console.log((&lt;HTMLElement&gt;t1).innerText)</span><br><span class=\"line\">    console.log(t1?.innerText)</span><br><span class=\"line\">    </span><br><span class=\"line\">\t\t/************************************/</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">    // 通过ref获取元素</span><br><span class=\"line\">    console.log(title1.value)</span><br><span class=\"line\">    console.log(title2.value)</span><br><span class=\"line\">    console.log(title3.value)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>用在组件标签上：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 父组件App.vue --&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;Person ref=&quot;ren&quot;/&gt;</span><br><span class=\"line\">  &lt;button @click=&quot;test&quot;&gt;测试&lt;/button&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;App&quot;&gt;</span><br><span class=\"line\">  import Person from &#x27;./components/Person.vue&#x27;</span><br><span class=\"line\">  import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  let ren = ref()</span><br><span class=\"line\"></span><br><span class=\"line\">  function test()&#123;</span><br><span class=\"line\">    console.log(ren.value.name)</span><br><span class=\"line\">    console.log(ren.value.age)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 子组件Person.vue中要使用defineExpose暴露内容 --&gt;</span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;ref,defineExpose&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">\t// 数据</span><br><span class=\"line\">  let name = ref(&#x27;张三&#x27;)</span><br><span class=\"line\">  let age = ref(18)</span><br><span class=\"line\">  /****************************/</span><br><span class=\"line\">  /****************************/</span><br><span class=\"line\">  // 使用defineExpose将组件中的数据交给外部</span><br><span class=\"line\">  defineExpose(&#123;name,age&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"312-props\"><a class=\"anchor\" href=\"#312-props\">#</a> 3.12. 【props】</h2>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义一个接口，限制每个Person对象的格式</span></span><br><span class=\"line\"> <span class=\"keyword\">export</span> interface <span class=\"title class_\">PersonInter</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">id</span>:string,</span><br><span class=\"line\">  <span class=\"attr\">name</span>:string,</span><br><span class=\"line\">     <span class=\"attr\">age</span>:number</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"> <span class=\"comment\">// 定义一个自定义类型Persons</span></span><br><span class=\"line\"> <span class=\"keyword\">export</span> type <span class=\"title class_\">Persons</span> = <span class=\"title class_\">Array</span>&lt;<span class=\"title class_\">PersonInter</span>&gt;</span><br></pre></td></tr></table></figure></p>\n<p><code>App.vue</code>  中代码：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">&lt;Person :list=&quot;persons&quot;/&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">   </span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;App&quot;&gt;</span><br><span class=\"line\">  import Person from &#x27;./components/Person.vue&#x27;</span><br><span class=\"line\">  import &#123;reactive&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">  import &#123;type Persons&#125; from &#x27;./types&#x27;</span><br><span class=\"line\">   </span><br><span class=\"line\">    let persons = reactive&lt;Persons&gt;([</span><br><span class=\"line\">      &#123;id:&#x27;e98219e12&#x27;,name:&#x27;张三&#x27;,age:18&#125;,</span><br><span class=\"line\">      &#123;id:&#x27;e98219e13&#x27;,name:&#x27;李四&#x27;,age:19&#125;,</span><br><span class=\"line\">      &#123;id:&#x27;e98219e14&#x27;,name:&#x27;王五&#x27;,age:20&#125;</span><br><span class=\"line\">    ])</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">   </span><br></pre></td></tr></table></figure></p>\n<p><code>Person.vue</code>  中代码：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\"> &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">      &lt;li v-for=&quot;item in list&quot; :key=&quot;item.id&quot;&gt;</span><br><span class=\"line\">         &#123;&#123;item.name&#125;&#125;--&#123;&#123;item.age&#125;&#125;</span><br><span class=\"line\">       &lt;/li&gt;</span><br><span class=\"line\">     &lt;/ul&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;/template&gt;</span><br><span class=\"line\">   </span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\"> import &#123;defineProps&#125; from &#x27;vue&#x27;</span><br><span class=\"line\"> import &#123;type PersonInter&#125; from &#x27;@/types&#x27;</span><br><span class=\"line\">   </span><br><span class=\"line\">// 第一种写法：仅接收</span><br><span class=\"line\">// const props = defineProps([&#x27;list&#x27;])</span><br><span class=\"line\">   </span><br><span class=\"line\">// 第二种写法：接收+限制类型</span><br><span class=\"line\">// defineProps&lt;&#123;list:Persons&#125;&gt;()</span><br><span class=\"line\">   </span><br><span class=\"line\">// 第三种写法：接收+限制类型+指定默认值+限制必要性</span><br><span class=\"line\">let props = withDefaults(defineProps&lt;&#123;list?:Persons&#125;&gt;(),&#123;</span><br><span class=\"line\">    list:()=&gt;[&#123;id:&#x27;asdasg01&#x27;,name:&#x27;小猪佩奇&#x27;,age:18&#125;]</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  console.log(props)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"313-生命周期\"><a class=\"anchor\" href=\"#313-生命周期\">#</a> 3.13. 【生命周期】</h2>\n<ul>\n<li>\n<p>概念： <code>Vue</code>  组件实例在创建时要经历一系列的初始化步骤，在此过程中 <code>Vue</code>  会在合适的时机，调用特定的函数，从而让开发者有机会在特定阶段运行自己的代码，这些特定的函数统称为：生命周期钩子</p>\n</li>\n<li>\n<p>规律：</p>\n<blockquote>\n<p>生命周期整体分为四个阶段，分别是：<strong>创建、挂载、更新、销毁</strong>，每个阶段都有两个钩子，一前一后。</p>\n</blockquote>\n</li>\n<li>\n<p><code>Vue2</code>  的生命周期</p>\n<blockquote>\n<p>创建阶段： <code>beforeCreate</code> 、 <code>created</code></p>\n<p>挂载阶段： <code>beforeMount</code> 、 <code>mounted</code></p>\n<p>更新阶段： <code>beforeUpdate</code> 、 <code>updated</code></p>\n<p>销毁阶段： <code>beforeDestroy</code> 、 <code>destroyed</code></p>\n</blockquote>\n</li>\n<li>\n<p><code>Vue3</code>  的生命周期</p>\n<blockquote>\n<p>创建阶段： <code>setup</code></p>\n<p>挂载阶段： <code>onBeforeMount</code> 、 <code>onMounted</code></p>\n<p>更新阶段： <code>onBeforeUpdate</code> 、 <code>onUpdated</code></p>\n<p>卸载阶段： <code>onBeforeUnmount</code> 、 <code>onUnmounted</code></p>\n</blockquote>\n</li>\n<li>\n<p>常用的钩子： <code>onMounted</code>  (挂载完毕)、 <code>onUpdated</code>  (更新完毕)、 <code>onBeforeUnmount</code>  (卸载之前)</p>\n</li>\n<li>\n<p>示例代码：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;当前求和为：&#123;&#123; sum &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeSum&quot;&gt;点我sum+1&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- vue3写法 --&gt;</span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123; </span><br><span class=\"line\">    ref, </span><br><span class=\"line\">    onBeforeMount, </span><br><span class=\"line\">    onMounted, </span><br><span class=\"line\">    onBeforeUpdate, </span><br><span class=\"line\">    onUpdated, </span><br><span class=\"line\">    onBeforeUnmount, </span><br><span class=\"line\">    onUnmounted </span><br><span class=\"line\">  &#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let sum = ref(0)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeSum() &#123;</span><br><span class=\"line\">    sum.value += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  console.log(&#x27;setup&#x27;)</span><br><span class=\"line\">  // 生命周期钩子</span><br><span class=\"line\">  onBeforeMount(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;挂载之前&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  onMounted(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;挂载完毕&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  onBeforeUpdate(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;更新之前&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  onUpdated(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;更新完毕&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  onBeforeUnmount(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;卸载之前&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  onUnmounted(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;卸载完毕&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h2 id=\"314-自定义hook\"><a class=\"anchor\" href=\"#314-自定义hook\">#</a> 3.14. 【自定义 hook】</h2>\n<ul>\n<li>\n<p>什么是 <code>hook</code> ？—— 本质是一个函数，把 <code>setup</code>  函数中使用的 <code>Composition API</code>  进行了封装，类似于 <code>vue2.x</code>  中的 <code>mixin</code> 。</p>\n</li>\n<li>\n<p>自定义 <code>hook</code>  的优势：复用代码，让 <code>setup</code>  中的逻辑更清楚易懂。</p>\n</li>\n</ul>\n<p>示例代码：</p>\n<ul>\n<li>\n<p><code>useSum.ts</code>  中内容如下：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;ref,onMounted&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum = <span class=\"title function_\">ref</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">increment</span> = (<span class=\"params\"></span>)=&gt;&#123;</span><br><span class=\"line\">    sum.<span class=\"property\">value</span> += <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">decrement</span> = (<span class=\"params\"></span>)=&gt;&#123;</span><br><span class=\"line\">    sum.<span class=\"property\">value</span> -= <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">onMounted</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">increment</span>()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//向外部暴露数据</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;sum,increment,decrement&#125;</span><br><span class=\"line\">&#125;\t\t</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p><code>useDog.ts</code>  中内容如下：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;reactive,onMounted&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios,&#123;<span class=\"title class_\">AxiosError</span>&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dogList = reactive&lt;string[]&gt;([])</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 方法</span></span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getDog</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 发请求</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> &#123;data&#125; = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;https://dog.ceo/api/breed/pembroke/images/random&#x27;</span>)</span><br><span class=\"line\">      <span class=\"comment\">// 维护数据</span></span><br><span class=\"line\">      dogList.<span class=\"title function_\">push</span>(data.<span class=\"property\">message</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 处理错误</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> err = &lt;<span class=\"title class_\">AxiosError</span>&gt;error</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err.<span class=\"property\">message</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 挂载钩子</span></span><br><span class=\"line\">  <span class=\"title function_\">onMounted</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">getDog</span>()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"comment\">//向外部暴露数据</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;dogList,getDog&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>组件中具体使用：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;h2&gt;当前求和为：&#123;&#123;sum&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">  &lt;button @click=&quot;increment&quot;&gt;点我+1&lt;/button&gt;</span><br><span class=\"line\">  &lt;button @click=&quot;decrement&quot;&gt;点我-1&lt;/button&gt;</span><br><span class=\"line\">  &lt;hr&gt;</span><br><span class=\"line\">  &lt;img v-for=&quot;(u,index) in dogList.urlList&quot; :key=&quot;index&quot; :src=&quot;(u as string)&quot;&gt; </span><br><span class=\"line\">  &lt;span v-show=&quot;dogList.isLoading&quot;&gt;加载中......&lt;/span&gt;&lt;br&gt;</span><br><span class=\"line\">  &lt;button @click=&quot;getDog&quot;&gt;再来一只狗&lt;/button&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class=\"line\">  import &#123;defineComponent&#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  export default defineComponent(&#123;</span><br><span class=\"line\">    name:&#x27;App&#x27;,</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class=\"line\">  import useSum from &#x27;./hooks/useSum&#x27;</span><br><span class=\"line\">  import useDog from &#x27;./hooks/useDog&#x27;</span><br><span class=\"line\">\t</span><br><span class=\"line\">  let &#123;sum,increment,decrement&#125; = useSum()</span><br><span class=\"line\">  let &#123;dogList,getDog&#125; = useDog()</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<hr />\n<h1 id=\"4-路由\"><a class=\"anchor\" href=\"#4-路由\">#</a> 4. 路由</h1>\n<h2 id=\"41-对路由的理解\"><a class=\"anchor\" href=\"#41-对路由的理解\">#</a> 4.1. 【对路由的理解】</h2>\n<p>&lt;img src=&quot;images/image-20231018144351536.png&quot; alt=&quot;image-20231018144351536&quot; style=&quot;zoom:20%;border-radius:40px&quot; /&gt;</p>\n<h2 id=\"42-基本切换效果\"><a class=\"anchor\" href=\"#42-基本切换效果\">#</a> 4.2. 【基本切换效果】</h2>\n<ul>\n<li>\n<p><code>Vue3</code>  中要使用 <code>vue-router</code>  的最新版本，目前是 <code>4</code>  版本。</p>\n</li>\n<li>\n<p>路由配置文件代码如下：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;createRouter,createWebHistory&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/pages/Home.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">News</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/pages/News.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">About</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/pages/About.vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">history</span>:<span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">\t<span class=\"attr\">routes</span>:[</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/home&#x27;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">component</span>:<span class=\"title class_\">Home</span></span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/about&#x27;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">component</span>:<span class=\"title class_\">About</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<ul>\n<li>\n<p><code>main.ts</code>  代码如下：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router/index&#x27;</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router)</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<ul>\n<li>\n<p><code>App.vue</code>  代码如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;app&quot;&gt;</span><br><span class=\"line\">    &lt;h2 class=&quot;title&quot;&gt;Vue路由测试&lt;/h2&gt;</span><br><span class=\"line\">    &lt;!-- 导航区 --&gt;</span><br><span class=\"line\">    &lt;div class=&quot;navigate&quot;&gt;</span><br><span class=\"line\">      &lt;RouterLink to=&quot;/home&quot; active-class=&quot;active&quot;&gt;首页&lt;/RouterLink&gt;</span><br><span class=\"line\">      &lt;RouterLink to=&quot;/news&quot; active-class=&quot;active&quot;&gt;新闻&lt;/RouterLink&gt;</span><br><span class=\"line\">      &lt;RouterLink to=&quot;/about&quot; active-class=&quot;active&quot;&gt;关于&lt;/RouterLink&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;!-- 展示区 --&gt;</span><br><span class=\"line\">    &lt;div class=&quot;main-content&quot;&gt;</span><br><span class=\"line\">      &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;App&quot;&gt;</span><br><span class=\"line\">  import &#123;RouterLink,RouterView&#125; from &#x27;vue-router&#x27;  </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h2 id=\"43-两个注意点\"><a class=\"anchor\" href=\"#43-两个注意点\">#</a> 4.3. 【两个注意点】</h2>\n<blockquote>\n<ol>\n<li>\n<p>路由组件通常存放在 <code>pages</code>  或  <code>views</code>  文件夹，一般组件通常存放在 <code>components</code>  文件夹。</p>\n</li>\n<li>\n<p>通过点击导航，视觉效果上 “消失” 了的路由组件，默认是被<strong>卸载</strong>掉的，需要的时候再去<strong>挂载</strong>。</p>\n</li>\n</ol>\n</blockquote>\n<h2 id=\"44路由器工作模式\"><a class=\"anchor\" href=\"#44路由器工作模式\">#</a> 4.4.【路由器工作模式】</h2>\n<ol>\n<li>\n<p><code>history</code>  模式</p>\n<blockquote>\n<p>优点： <code>URL</code>  更加美观，不带有 <code>#</code> ，更接近传统的网站 <code>URL</code> 。</p>\n<p>缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有 <code>404</code>  错误。</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  \t<span class=\"attr\">history</span>:<span class=\"title function_\">createWebHistory</span>(), <span class=\"comment\">//history模式</span></span><br><span class=\"line\">  \t<span class=\"comment\">/******/</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n</li>\n<li>\n<p><code>hash</code>  模式</p>\n<blockquote>\n<p>优点：兼容性更好，因为不需要服务器端处理路径。</p>\n<p>缺点： <code>URL</code>  带有 <code>#</code> 不太美观，且在 <code>SEO</code>  优化方面相对较差。</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  \t<span class=\"attr\">history</span>:<span class=\"title function_\">createWebHashHistory</span>(), <span class=\"comment\">//hash模式</span></span><br><span class=\"line\">  \t<span class=\"comment\">/******/</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"45-to的两种写法\"><a class=\"anchor\" href=\"#45-to的两种写法\">#</a> 4.5. 【to 的两种写法】</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 第一种：to的字符串写法 --&gt;</span><br><span class=\"line\">&lt;router-link active-class=&quot;active&quot; to=&quot;/home&quot;&gt;主页&lt;/router-link&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 第二种：to的对象写法 --&gt;</span><br><span class=\"line\">&lt;router-link active-class=&quot;active&quot; :to=&quot;&#123;path:&#x27;/home&#x27;&#125;&quot;&gt;Home&lt;/router-link&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"46-命名路由\"><a class=\"anchor\" href=\"#46-命名路由\">#</a> 4.6. 【命名路由】</h2>\n<p>作用：可以简化路由跳转及传参（后面就讲）。</p>\n<p>给路由规则命名：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">routes</span>:[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;zhuye&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/home&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>:<span class=\"title class_\">Home</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;xinwen&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/news&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>:<span class=\"title class_\">News</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&#x27;guanyu&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/about&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>:<span class=\"title class_\">About</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>跳转路由：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--简化前：需要写完整的路径（to的字符串写法） --&gt;</span><br><span class=\"line\">&lt;router-link to=&quot;/news/detail&quot;&gt;跳转&lt;/router-link&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--简化后：直接通过名字跳转（to的对象写法配合name属性） --&gt;</span><br><span class=\"line\">&lt;router-link :to=&quot;&#123;name:&#x27;guanyu&#x27;&#125;&quot;&gt;跳转&lt;/router-link&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"47-嵌套路由\"><a class=\"anchor\" href=\"#47-嵌套路由\">#</a> 4.7. 【嵌套路由】</h2>\n<ol>\n<li>\n<p>编写 <code>News</code>  的子路由： <code>Detail.vue</code></p>\n</li>\n<li>\n<p>配置路由规则，使用 <code>children</code>  配置项：</p>\n<p><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>:<span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">\t<span class=\"attr\">routes</span>:[</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">name</span>:<span class=\"string\">&#x27;zhuye&#x27;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/home&#x27;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">component</span>:<span class=\"title class_\">Home</span></span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">name</span>:<span class=\"string\">&#x27;xinwen&#x27;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/news&#x27;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">component</span>:<span class=\"title class_\">News</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">children</span>:[</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">name</span>:<span class=\"string\">&#x27;xiang&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">path</span>:<span class=\"string\">&#x27;detail&#x27;</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">component</span>:<span class=\"title class_\">Detail</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t]</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">name</span>:<span class=\"string\">&#x27;guanyu&#x27;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/about&#x27;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">component</span>:<span class=\"title class_\">About</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>跳转路由（记得要加完整路径）：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;router-link to=&quot;/news/detail&quot;&gt;xxxx&lt;/router-link&gt;</span><br><span class=\"line\">&lt;!-- 或 --&gt;</span><br><span class=\"line\">&lt;router-link :to=&quot;&#123;path:&#x27;/news/detail&#x27;&#125;&quot;&gt;xxxx&lt;/router-link&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>记得去 <code>Home</code>  组件中预留一个 <code>&lt;router-view&gt;</code></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;news&quot;&gt;</span><br><span class=\"line\">    &lt;nav class=&quot;news-list&quot;&gt;</span><br><span class=\"line\">      &lt;RouterLink v-for=&quot;news in newsList&quot; :key=&quot;news.id&quot; :to=&quot;&#123;path:&#x27;/news/detail&#x27;&#125;&quot;&gt;</span><br><span class=\"line\">        &#123;&#123;news.name&#125;&#125;</span><br><span class=\"line\">      &lt;/RouterLink&gt;</span><br><span class=\"line\">    &lt;/nav&gt;</span><br><span class=\"line\">    &lt;div class=&quot;news-detail&quot;&gt;</span><br><span class=\"line\">      &lt;RouterView/&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h2 id=\"48-路由传参\"><a class=\"anchor\" href=\"#48-路由传参\">#</a> 4.8. 【路由传参】</h2>\n<h3 id=\"query参数\"><a class=\"anchor\" href=\"#query参数\">#</a> query 参数</h3>\n<ol>\n<li>\n<p>传递参数</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 跳转并携带query参数（to的字符串写法） --&gt;</span><br><span class=\"line\">&lt;router-link to=&quot;/news/detail?a=1&amp;b=2&amp;content=欢迎你&quot;&gt;</span><br><span class=\"line\">\t跳转</span><br><span class=\"line\">&lt;/router-link&gt;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">&lt;!-- 跳转并携带query参数（to的对象写法） --&gt;</span><br><span class=\"line\">&lt;RouterLink </span><br><span class=\"line\">  :to=&quot;&#123;</span><br><span class=\"line\">    //name:&#x27;xiang&#x27;, //用name也可以跳转</span><br><span class=\"line\">    path:&#x27;/news/detail&#x27;,</span><br><span class=\"line\">    query:&#123;</span><br><span class=\"line\">      id:news.id,</span><br><span class=\"line\">      title:news.title,</span><br><span class=\"line\">      content:news.content</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &#123;&#123;news.title&#125;&#125;</span><br><span class=\"line\">&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>接收参数：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;useRoute&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> route = <span class=\"title function_\">useRoute</span>()</span><br><span class=\"line\"><span class=\"comment\">// 打印query参数</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(route.<span class=\"property\">query</span>)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h3 id=\"params参数\"><a class=\"anchor\" href=\"#params参数\">#</a> params 参数</h3>\n<ol>\n<li>\n<p>传递参数</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 跳转并携带params参数（to的字符串写法） --&gt;</span><br><span class=\"line\">&lt;RouterLink :to=&quot;`/news/detail/001/新闻001/内容001`&quot;&gt;&#123;&#123;news.title&#125;&#125;&lt;/RouterLink&gt;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">&lt;!-- 跳转并携带params参数（to的对象写法） --&gt;</span><br><span class=\"line\">&lt;RouterLink </span><br><span class=\"line\">  :to=&quot;&#123;</span><br><span class=\"line\">    name:&#x27;xiang&#x27;, //用name跳转</span><br><span class=\"line\">    params:&#123;</span><br><span class=\"line\">      id:news.id,</span><br><span class=\"line\">      title:news.title,</span><br><span class=\"line\">      content:news.title</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &#123;&#123;news.title&#125;&#125;</span><br><span class=\"line\">&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>接收参数：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;useRoute&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> route = <span class=\"title function_\">useRoute</span>()</span><br><span class=\"line\"><span class=\"comment\">// 打印params参数</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(route.<span class=\"property\">params</span>)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<blockquote>\n<p>备注 1：传递 <code>params</code>  参数时，若使用 <code>to</code>  的对象写法，必须使用 <code>name</code>  配置项，不能用 <code>path</code> 。</p>\n<p>备注 2：传递 <code>params</code>  参数时，需要提前在规则中占位。</p>\n</blockquote>\n<h2 id=\"49-路由的props配置\"><a class=\"anchor\" href=\"#49-路由的props配置\">#</a> 4.9. 【路由的 props 配置】</h2>\n<p>作用：让路由组件更方便的收到参数（可以将路由参数作为 <code>props</code>  传给组件）</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">name</span>:<span class=\"string\">&#x27;xiang&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">path</span>:<span class=\"string\">&#x27;detail/:id/:title/:content&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">component</span>:<span class=\"title class_\">Detail</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// props的对象写法，作用：把对象中的每一组key-value作为props传给Detail组件</span></span><br><span class=\"line\">  <span class=\"comment\">// props:&#123;a:1,b:2,c:3&#125;, </span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// props的布尔值写法，作用：把收到了每一组params参数，作为props传给Detail组件</span></span><br><span class=\"line\">  <span class=\"comment\">// props:true</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// props的函数写法，作用：把返回的对象中每一组key-value作为props传给Detail组件</span></span><br><span class=\"line\">  <span class=\"title function_\">props</span>(<span class=\"params\">route</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> route.<span class=\"property\">query</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"410-replace属性\"><a class=\"anchor\" href=\"#410-replace属性\">#</a> 4.10. 【 replace 属性】</h2>\n<ol>\n<li>\n<p>作用：控制路由跳转时操作浏览器历史记录的模式。</p>\n</li>\n<li>\n<p>浏览器的历史记录有两种写入方式：分别为 <code>push</code>  和 <code>replace</code> ：</p>\n<ul>\n<li><code>push</code>  是追加历史记录（默认值）。</li>\n<li><code>replace</code>  是替换当前记录。</li>\n</ul>\n</li>\n<li>\n<p>开启 <code>replace</code>  模式：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;RouterLink replace .......&gt;News&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h2 id=\"411-编程式导航\"><a class=\"anchor\" href=\"#411-编程式导航\">#</a> 4.11. 【编程式导航】</h2>\n<p>路由组件的两个重要的属性： <code>$route</code>  和 <code>$router</code>  变成了两个 <code>hooks</code></p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;useRoute,useRouter&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> route = <span class=\"title function_\">useRoute</span>()</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">useRouter</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(route.<span class=\"property\">query</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(route.<span class=\"property\">parmas</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(router.<span class=\"property\">push</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(router.<span class=\"property\">replace</span>)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"412-重定向\"><a class=\"anchor\" href=\"#412-重定向\">#</a> 4.12. 【重定向】</h2>\n<ol>\n<li>\n<p>作用：将特定的路径，重新定向到已有路由。</p>\n</li>\n<li>\n<p>具体编码：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">redirect</span>:<span class=\"string\">&#x27;/about&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h1 id=\"5-pinia\"><a class=\"anchor\" href=\"#5-pinia\">#</a> 5. pinia</h1>\n<h2 id=\"51准备一个效果\"><a class=\"anchor\" href=\"#51准备一个效果\">#</a> 5.1【准备一个效果】</h2>\n<p>&lt;img src=&quot;./images/pinia_example.gif&quot; alt=&quot;pinia_example&quot; style=&quot;zoom:30%;border:3px solid&quot; /&gt;</p>\n<h2 id=\"52搭建-pinia-环境\"><a class=\"anchor\" href=\"#52搭建-pinia-环境\">#</a> 5.2【搭建 pinia 环境】</h2>\n<p>第一步： <code>npm install pinia</code></p>\n<p>第二步：操作 <code>src/main.ts</code></p>\n<p><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 引入createPinia，用于创建pinia */</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createPinia &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 创建pinia */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> pinia = <span class=\"title function_\">createPinia</span>()</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 使用插件 */</span>&#123;&#125;</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(pinia)</span><br><span class=\"line\">app.<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<p>此时开发者工具中已经有了 <code>pinia</code>  选项</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4ubmxhcmsuY29tL3l1cXVlLzAvMjAyMy9wbmcvMzU3ODA1OTkvMTY4NDMwOTk1MjQ4MS1jNjdmNjdmOS1kMWEzLTRkNjktOGJkNi0yYjM4MWUwMDNmMzEucG5n\">https://cdn.nlark.com/yuque/0/2023/png/35780599/1684309952481-c67f67f9-d1a3-4d69-8bd6-2b381e003f31.png</span>&quot; style=&quot;zoom:80%;border:1px solid black;border-radius:10px&quot; /&gt;</p>\n<h2 id=\"53存储读取数据\"><a class=\"anchor\" href=\"#53存储读取数据\">#</a> 5.3【存储 + 读取数据】</h2>\n<ol>\n<li>\n<p><code>Store</code>  是一个保存：<strong>状态</strong>、<strong>业务逻辑</strong> 的实体，每个组件都可以<strong>读取</strong>、<strong>写入</strong>它。</p>\n</li>\n<li>\n<p>它有三个概念： <code>state</code> 、 <code>getter</code> 、 <code>action</code> ，相当于组件中的：  <code>data</code> 、  <code>computed</code>  和  <code>methods</code> 。</p>\n</li>\n<li>\n<p>具体编码： <code>src/store/count.ts</code></p>\n<p><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入defineStore用于创建store</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;defineStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义并暴露一个store</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useCountStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">&#x27;count&#x27;</span>,&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 动作</span></span><br><span class=\"line\">  <span class=\"attr\">actions</span>:&#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 状态</span></span><br><span class=\"line\">  <span class=\"title function_\">state</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">sum</span>:<span class=\"number\">6</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 计算</span></span><br><span class=\"line\">  <span class=\"attr\">getters</span>:&#123;&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>具体编码： <code>src/store/talk.ts</code></p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入defineStore用于创建store</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;defineStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义并暴露一个store</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useTalkStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">&#x27;talk&#x27;</span>,&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 动作</span></span><br><span class=\"line\">  <span class=\"attr\">actions</span>:&#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 状态</span></span><br><span class=\"line\">  <span class=\"title function_\">state</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">talkList</span>:[</span><br><span class=\"line\">        &#123;<span class=\"attr\">id</span>:<span class=\"string\">&#x27;yuysada01&#x27;</span>,<span class=\"attr\">content</span>:<span class=\"string\">&#x27;你今天有点怪，哪里怪？怪好看的！&#x27;</span>&#125;,</span><br><span class=\"line\">     \t\t&#123;<span class=\"attr\">id</span>:<span class=\"string\">&#x27;yuysada02&#x27;</span>,<span class=\"attr\">content</span>:<span class=\"string\">&#x27;草莓、蓝莓、蔓越莓，你想我了没？&#x27;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"attr\">id</span>:<span class=\"string\">&#x27;yuysada03&#x27;</span>,<span class=\"attr\">content</span>:<span class=\"string\">&#x27;心里给你留了一块地，我的死心塌地&#x27;</span>&#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 计算</span></span><br><span class=\"line\">  <span class=\"attr\">getters</span>:&#123;&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>组件中使用 <code>state</code>  中的数据</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;h2&gt;当前求和为：&#123;&#123; sumStore.sum &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;Count&quot;&gt;</span><br><span class=\"line\">  // 引入对应的useXxxxxStore\t</span><br><span class=\"line\">  import &#123;useSumStore&#125; from &#x27;@/store/sum&#x27;</span><br><span class=\"line\">  </span><br><span class=\"line\">  // 调用useXxxxxStore得到对应的store</span><br><span class=\"line\">  const sumStore = useSumStore()</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;ul&gt;</span><br><span class=\"line\">    &lt;li v-for=&quot;talk in talkStore.talkList&quot; :key=&quot;talk.id&quot;&gt;</span><br><span class=\"line\">      &#123;&#123; talk.content &#125;&#125;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">  &lt;/ul&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;Count&quot;&gt;</span><br><span class=\"line\">  import axios from &#x27;axios&#x27;</span><br><span class=\"line\">  import &#123;useTalkStore&#125; from &#x27;@/store/talk&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  const talkStore = useTalkStore()</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h2 id=\"54修改数据三种方式\"><a class=\"anchor\" href=\"#54修改数据三种方式\">#</a> 5.4.【修改数据】(三种方式)</h2>\n<ol>\n<li>\n<p>第一种修改方式，直接修改</p>\n<p><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">countStore.<span class=\"property\">sum</span> = <span class=\"number\">666</span></span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>第二种修改方式：批量修改</p>\n<p><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">countStore.$patch(&#123;</span><br><span class=\"line\">  <span class=\"attr\">sum</span>:<span class=\"number\">999</span>,</span><br><span class=\"line\">  <span class=\"attr\">school</span>:<span class=\"string\">&#x27;atguigu&#x27;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>第三种修改方式：借助 <code>action</code>  修改（ <code>action</code>  中可以编写一些业务逻辑）</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useCountStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">&#x27;count&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*************/</span></span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">//加</span></span><br><span class=\"line\">    <span class=\"title function_\">increment</span>(<span class=\"params\">value:number</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">sum</span> &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//操作countStore中的sum</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">sum</span> += value</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//减</span></span><br><span class=\"line\">    <span class=\"title function_\">decrement</span>(<span class=\"params\">value:number</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">sum</span> &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">sum</span> -= value</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">/*************/</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>组件中调用 <code>action</code>  即可</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用countStore</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> countStore = <span class=\"title function_\">useCountStore</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用对应action</span></span><br><span class=\"line\">countStore.<span class=\"title function_\">incrementOdd</span>(n.<span class=\"property\">value</span>)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h2 id=\"55storetorefs\"><a class=\"anchor\" href=\"#55storetorefs\">#</a> 5.5.【storeToRefs】</h2>\n<ul>\n<li>借助 <code>storeToRefs</code>  将 <code>store</code>  中的数据转为 <code>ref</code>  对象，方便在模板中使用。</li>\n<li>注意： <code>pinia</code>  提供的 <code>storeToRefs</code>  只会将数据做转换，而 <code>Vue</code>  的 <code>toRefs</code>  会转换 <code>store</code>  中数据。</li>\n</ul>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;count&quot;&gt;</span><br><span class=\"line\">\t\t&lt;h2&gt;当前求和为：&#123;&#123;sum&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;Count&quot;&gt;</span><br><span class=\"line\">  import &#123; useCountStore &#125; from &#x27;@/store/count&#x27;</span><br><span class=\"line\">  /* 引入storeToRefs */</span><br><span class=\"line\">  import &#123; storeToRefs &#125; from &#x27;pinia&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">\t/* 得到countStore */</span><br><span class=\"line\">  const countStore = useCountStore()</span><br><span class=\"line\">  /* 使用storeToRefs转换countStore，随后解构 */</span><br><span class=\"line\">  const &#123;sum&#125; = storeToRefs(countStore)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"56getters\"><a class=\"anchor\" href=\"#56getters\">#</a> 5.6.【getters】</h2>\n<ol>\n<li>\n<p>概念：当 <code>state</code>  中的数据，需要经过处理后再使用时，可以使用 <code>getters</code>  配置。</p>\n</li>\n<li>\n<p>追加 <code>getters</code>  配置。</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入defineStore用于创建store</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;defineStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义并暴露一个store</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useCountStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">&#x27;count&#x27;</span>,&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 动作</span></span><br><span class=\"line\">  <span class=\"attr\">actions</span>:&#123;</span><br><span class=\"line\">    <span class=\"comment\">/************/</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 状态</span></span><br><span class=\"line\">  <span class=\"title function_\">state</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">sum</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">      <span class=\"attr\">school</span>:<span class=\"string\">&#x27;atguigu&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 计算</span></span><br><span class=\"line\">  <span class=\"attr\">getters</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">bigSum</span>:(state):<span class=\"function\"><span class=\"params\">number</span> =&gt;</span> state.<span class=\"property\">sum</span> *<span class=\"number\">10</span>,</span><br><span class=\"line\">    <span class=\"title function_\">upperSchool</span>():string&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>. school.<span class=\"title function_\">toUpperCase</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>组件中读取数据：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;increment,decrement&#125; = countStore</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;sum,school,bigSum,upperSchool&#125; = <span class=\"title function_\">storeToRefs</span>(countStore)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h2 id=\"57subscribe\"><a class=\"anchor\" href=\"#57subscribe\">#</a> 5.7.【$subscribe】</h2>\n<p>通过 store 的  <code>$subscribe()</code>  方法侦听  <code>state</code>  及其变化</p>\n<p><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">talkStore.$subscribe(<span class=\"function\">(<span class=\"params\">mutate,state</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;LoveTalk&#x27;</span>,mutate,state)</span><br><span class=\"line\">  <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;talk&#x27;</span>,<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(talkList.<span class=\"property\">value</span>))</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"58-store组合式写法\"><a class=\"anchor\" href=\"#58-store组合式写法\">#</a> 5.8. 【store 组合式写法】</h2>\n<p><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;defineStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;nanoid&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;nanoid&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;reactive&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useTalkStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">&#x27;talk&#x27;</span>,<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// talkList就是state</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> talkList = <span class=\"title function_\">reactive</span>(</span><br><span class=\"line\">    <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;talkList&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) || []</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// getATalk函数相当于action</span></span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getATalk</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 发请求，下面这行的写法是：连续解构赋值+重命名</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> &#123;<span class=\"attr\">data</span>:&#123;<span class=\"attr\">content</span>:title&#125;&#125; = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;https://api.uomg.com/api/rand.qinghua?format=json&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 把请求回来的字符串，包装成一个对象</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj = &#123;<span class=\"attr\">id</span>:<span class=\"title function_\">nanoid</span>(),title&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 放到数组中</span></span><br><span class=\"line\">    talkList.<span class=\"title function_\">unshift</span>(obj)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;talkList,getATalk&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"6-组件通信\"><a class=\"anchor\" href=\"#6-组件通信\">#</a> 6. 组件通信</h1>\n<p><strong> <code>Vue3</code>  组件通信和 <code>Vue2</code>  的区别：</strong></p>\n<ul>\n<li>移出事件总线，使用 <code>mitt</code>  代替。</li>\n</ul>\n<ul>\n<li><code>vuex</code>  换成了 <code>pinia</code> 。</li>\n<li>把 <code>.sync</code>  优化到了 <code>v-model</code>  里面了。</li>\n<li>把 <code>$listeners</code>  所有的东西，合并到 <code>$attrs</code>  中了。</li>\n<li><code>$children</code>  被砍掉了。</li>\n</ul>\n<p><strong>常见搭配形式：</strong></p>\n<p>&lt;img src=&quot;images/image-20231119185900990.png&quot; alt=&quot;image-20231119185900990&quot; style=&quot;zoom:60%;&quot; /&gt;</p>\n<h2 id=\"61-props\"><a class=\"anchor\" href=\"#61-props\">#</a> 6.1. 【props】</h2>\n<p>概述： <code>props</code>  是使用频率最高的一种通信方式，常用与 ：<strong>父 ↔ 子</strong>。</p>\n<ul>\n<li>若 <strong>父传子</strong>：属性值是<strong>非函数</strong>。</li>\n<li>若 <strong>子传父</strong>：属性值是<strong>函数</strong>。</li>\n</ul>\n<p>父组件：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;father&quot;&gt;</span><br><span class=\"line\">    &lt;h3&gt;父组件，&lt;/h3&gt;</span><br><span class=\"line\">\t\t&lt;h4&gt;我的车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">\t\t&lt;h4&gt;儿子给的玩具：&#123;&#123; toy &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">\t\t&lt;Child :car=&quot;car&quot; :getToy=&quot;getToy&quot;/&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class=\"line\">\timport Child from &#x27;./Child.vue&#x27;</span><br><span class=\"line\">\timport &#123; ref &#125; from &quot;vue&quot;;</span><br><span class=\"line\">\t// 数据</span><br><span class=\"line\">\tconst car = ref(&#x27;奔驰&#x27;)</span><br><span class=\"line\">\tconst toy = ref()</span><br><span class=\"line\">\t// 方法</span><br><span class=\"line\">\tfunction getToy(value:string)&#123;</span><br><span class=\"line\">\t\ttoy.value = value</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>子组件</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;child&quot;&gt;</span><br><span class=\"line\">    &lt;h3&gt;子组件&lt;/h3&gt;</span><br><span class=\"line\">\t\t&lt;h4&gt;我的玩具：&#123;&#123; toy &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">\t\t&lt;h4&gt;父给我的车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">\t\t&lt;button @click=&quot;getToy(toy)&quot;&gt;玩具给父亲&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;Child&quot;&gt;</span><br><span class=\"line\">\timport &#123; ref &#125; from &quot;vue&quot;;</span><br><span class=\"line\">\tconst toy = ref(&#x27;奥特曼&#x27;)</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tdefineProps([&#x27;car&#x27;,&#x27;getToy&#x27;])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"62-自定义事件\"><a class=\"anchor\" href=\"#62-自定义事件\">#</a> 6.2. 【自定义事件】</h2>\n<ol>\n<li>概述：自定义事件常用于：<strong>子 =&gt; 父。</strong></li>\n<li>注意区分好：原生事件、自定义事件。</li>\n</ol>\n<ul>\n<li>原生事件：\n<ul>\n<li>事件名是特定的（ <code>click</code> 、 <code>mosueenter</code>  等等）</li>\n<li>事件对象 <code>$event</code> : 是包含事件相关信息的对象（ <code>pageX</code> 、 <code>pageY</code> 、 <code>target</code> 、 <code>keyCode</code> ）</li>\n</ul>\n</li>\n<li>自定义事件：\n<ul>\n<li>事件名是任意名称</li>\n<li>&lt;strong style=&quot;color:red&quot;&gt; 事件对象 <code>$event</code> : 是调用 <code>emit</code>  时所提供的数据，可以是任意类型！！！&lt;/strong&gt;</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>\n<p>示例：</p>\n<p><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--在父组件中，给子组件绑定自定义事件：--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Child</span> @<span class=\"attr\">send-toy</span>=<span class=\"string\">&quot;toy = $event&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--注意区分原生事件与自定义事件中的$event--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;toy = $event&quot;</span>&gt;</span>测试<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子组件中，触发事件：</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.$emit(<span class=\"string\">&#x27;send-toy&#x27;</span>, 具体数据)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h2 id=\"63-mitt\"><a class=\"anchor\" href=\"#63-mitt\">#</a> 6.3. 【mitt】</h2>\n<p>概述：与消息订阅与发布（ <code>pubsub</code> ）功能类似，可以实现任意组件间通信。</p>\n<p>安装 <code>mitt</code></p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i mitt</span><br></pre></td></tr></table></figure></p>\n<p>新建文件： <code>src\\utils\\emitter.ts</code></p>\n<p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入mitt </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> mitt <span class=\"keyword\">from</span> <span class=\"string\">&quot;mitt&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建emitter</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> emitter = <span class=\"title function_\">mitt</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  // 绑定事件</span></span><br><span class=\"line\"><span class=\"comment\">  emitter.on(&#x27;abc&#x27;,(value)=&gt;&#123;</span></span><br><span class=\"line\"><span class=\"comment\">    console.log(&#x27;abc事件被触发&#x27;,value)</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">  emitter.on(&#x27;xyz&#x27;,(value)=&gt;&#123;</span></span><br><span class=\"line\"><span class=\"comment\">    console.log(&#x27;xyz事件被触发&#x27;,value)</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  setInterval(() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">    // 触发事件</span></span><br><span class=\"line\"><span class=\"comment\">    emitter.emit(&#x27;abc&#x27;,666)</span></span><br><span class=\"line\"><span class=\"comment\">    emitter.emit(&#x27;xyz&#x27;,777)</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;, 1000);</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  setTimeout(() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">    // 清理事件</span></span><br><span class=\"line\"><span class=\"comment\">    emitter.all.clear()</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;, 3000); </span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建并暴露mitt</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> emitter</span><br></pre></td></tr></table></figure></p>\n<p>接收数据的组件中：绑定事件、同时在销毁前解绑事件：</p>\n<p><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> emitter <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/utils/emitter&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; onUnmounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 绑定事件</span></span><br><span class=\"line\">emitter.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;send-toy&#x27;</span>,<span class=\"function\">(<span class=\"params\">value</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;send-toy事件被触发&#x27;</span>,value)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">onUnmounted</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 解绑事件</span></span><br><span class=\"line\">  emitter.<span class=\"title function_\">off</span>(<span class=\"string\">&#x27;send-toy&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>【第三步】：提供数据的组件，在合适的时候触发事件</p>\n<p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> emitter <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/utils/emitter&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">sendToy</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 触发事件</span></span><br><span class=\"line\">  emitter.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;send-toy&#x27;</span>,toy.<span class=\"property\">value</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>注意这个重要的内置关系，总线依赖着这个内置关系</strong></p>\n<h2 id=\"64v-model\"><a class=\"anchor\" href=\"#64v-model\">#</a> 6.4.【v-model】</h2>\n<ol>\n<li>\n<p>概述：实现 <strong>父↔子</strong> 之间相互通信。</p>\n</li>\n<li>\n<p>前序知识 ——  <code>v-model</code>  的本质</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 使用v-model指令 --&gt;</span><br><span class=\"line\">&lt;input type=&quot;text&quot; v-model=&quot;userName&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- v-model的本质是下面这行代码 --&gt;</span><br><span class=\"line\">&lt;input </span><br><span class=\"line\">  type=&quot;text&quot; </span><br><span class=\"line\">  :value=&quot;userName&quot; </span><br><span class=\"line\">  @input=&quot;userName =(&lt;HTMLInputElement&gt;$event.target).value&quot;</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>组件标签上的 <code>v-model</code>  的本质： <code>:moldeValue</code>  ＋  <code>update:modelValue</code>  事件。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 组件标签上使用v-model指令 --&gt;</span><br><span class=\"line\">&lt;AtguiguInput v-model=&quot;userName&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 组件标签上v-model的本质 --&gt;</span><br><span class=\"line\">&lt;AtguiguInput :modelValue=&quot;userName&quot; @update:model-value=&quot;userName = $event&quot;/&gt;</span><br></pre></td></tr></table></figure></p>\n<p><code>AtguiguInput</code>  组件中：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;box&quot;&gt;</span><br><span class=\"line\">    &lt;!--将接收的value值赋给input元素的value属性，目的是：为了呈现数据 --&gt;</span><br><span class=\"line\">\t\t&lt;!--给input元素绑定原生input事件，触发input事件时，进而触发update:model-value事件--&gt;</span><br><span class=\"line\">    &lt;input </span><br><span class=\"line\">       type=&quot;text&quot; </span><br><span class=\"line\">       :value=&quot;modelValue&quot; </span><br><span class=\"line\">       @input=&quot;emit(&#x27;update:model-value&#x27;,$event.target.value)&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;AtguiguInput&quot;&gt;</span><br><span class=\"line\">  // 接收props</span><br><span class=\"line\">  defineProps([&#x27;modelValue&#x27;])</span><br><span class=\"line\">  // 声明事件</span><br><span class=\"line\">  const emit = defineEmits([&#x27;update:model-value&#x27;])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>也可以更换 <code>value</code> ，例如改成 <code>abc</code></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 也可以更换value，例如改成abc--&gt;</span><br><span class=\"line\">&lt;AtguiguInput v-model:abc=&quot;userName&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 上面代码的本质如下 --&gt;</span><br><span class=\"line\">&lt;AtguiguInput :abc=&quot;userName&quot; @update:abc=&quot;userName = $event&quot;/&gt;</span><br></pre></td></tr></table></figure></p>\n<p><code>AtguiguInput</code>  组件中：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;box&quot;&gt;</span><br><span class=\"line\">    &lt;input </span><br><span class=\"line\">       type=&quot;text&quot; </span><br><span class=\"line\">       :value=&quot;abc&quot; </span><br><span class=\"line\">       @input=&quot;emit(&#x27;update:abc&#x27;,$event.target.value)&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;AtguiguInput&quot;&gt;</span><br><span class=\"line\">  // 接收props</span><br><span class=\"line\">  defineProps([&#x27;abc&#x27;])</span><br><span class=\"line\">  // 声明事件</span><br><span class=\"line\">  const emit = defineEmits([&#x27;update:abc&#x27;])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>如果 <code>value</code>  可以更换，那么就可以在组件标签上多次使用 <code>v-model</code></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;AtguiguInput v-model:abc=&quot;userName&quot; v-model:xyz=&quot;password&quot;/&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h2 id=\"65attrs\"><a class=\"anchor\" href=\"#65attrs\">#</a> 6.5.【$attrs 】</h2>\n<ol>\n<li>\n<p>概述： <code>$attrs</code>  用于实现<strong>当前组件的父组件</strong>，向<strong>当前组件的子组件</strong>通信（<strong>祖→孙</strong>）。</p>\n</li>\n<li>\n<p>具体说明： <code>$attrs</code>  是一个对象，包含所有父组件传入的标签属性。</p>\n<blockquote>\n<p>注意： <code>$attrs</code>  会自动排除 <code>props</code>  中声明的属性 (可以认为声明过的  <code>props</code>  被子组件自己 “消费” 了)</p>\n</blockquote>\n</li>\n</ol>\n<p>父组件：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;father&quot;&gt;</span><br><span class=\"line\">    &lt;h3&gt;父组件&lt;/h3&gt;</span><br><span class=\"line\">\t\t&lt;Child :a=&quot;a&quot; :b=&quot;b&quot; :c=&quot;c&quot; :d=&quot;d&quot; v-bind=&quot;&#123;x:100,y:200&#125;&quot; :updateA=&quot;updateA&quot;/&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class=\"line\">\timport Child from &#x27;./Child.vue&#x27;</span><br><span class=\"line\">\timport &#123; ref &#125; from &quot;vue&quot;;</span><br><span class=\"line\">\tlet a = ref(1)</span><br><span class=\"line\">\tlet b = ref(2)</span><br><span class=\"line\">\tlet c = ref(3)</span><br><span class=\"line\">\tlet d = ref(4)</span><br><span class=\"line\"></span><br><span class=\"line\">\tfunction updateA(value)&#123;</span><br><span class=\"line\">\t\ta.value = value</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>子组件：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;child&quot;&gt;</span><br><span class=\"line\">\t\t&lt;h3&gt;子组件&lt;/h3&gt;</span><br><span class=\"line\">\t\t&lt;GrandChild v-bind=&quot;$attrs&quot;/&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;Child&quot;&gt;</span><br><span class=\"line\">\timport GrandChild from &#x27;./GrandChild.vue&#x27;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>孙组件：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;grand-child&quot;&gt;</span><br><span class=\"line\">\t\t&lt;h3&gt;孙组件&lt;/h3&gt;</span><br><span class=\"line\">\t\t&lt;h4&gt;a：&#123;&#123; a &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">\t\t&lt;h4&gt;b：&#123;&#123; b &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">\t\t&lt;h4&gt;c：&#123;&#123; c &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">\t\t&lt;h4&gt;d：&#123;&#123; d &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">\t\t&lt;h4&gt;x：&#123;&#123; x &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">\t\t&lt;h4&gt;y：&#123;&#123; y &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">\t\t&lt;button @click=&quot;updateA(666)&quot;&gt;点我更新A&lt;/button&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;GrandChild&quot;&gt;</span><br><span class=\"line\">\tdefineProps([&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;,&#x27;x&#x27;,&#x27;y&#x27;,&#x27;updateA&#x27;])</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"66-refs-parent\"><a class=\"anchor\" href=\"#66-refs-parent\">#</a> 6.6. 【<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>e</mi><mi>f</mi><mi>s</mi><mtext>、</mtext></mrow><annotation encoding=\"application/x-tex\">refs、</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">s</span><span class=\"mord cjk_fallback\">、</span></span></span></span>parent】</h2>\n<ol>\n<li>\n<p>概述：</p>\n<ul>\n<li><code>$refs</code>  用于 ：<strong>父→子。</strong></li>\n<li><code>$parent</code>  用于：<strong>子→父。</strong></li>\n</ul>\n</li>\n<li>\n<p>原理如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>$refs</code></td>\n<td>值为对象，包含所有被 <code>ref</code>  属性标识的 <code>DOM</code>  元素或组件实例。</td>\n</tr>\n<tr>\n<td><code>$parent</code></td>\n<td>值为对象，当前组件的父组件实例对象。</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n<h2 id=\"67-provide-inject\"><a class=\"anchor\" href=\"#67-provide-inject\">#</a> 6.7. 【provide、inject】</h2>\n<ol>\n<li>\n<p>概述：实现<strong>祖孙组件</strong>直接通信</p>\n</li>\n<li>\n<p>具体使用：</p>\n<ul>\n<li>在祖先组件中通过 <code>provide</code>  配置向后代组件提供数据</li>\n<li>在后代组件中通过 <code>inject</code>  配置来声明接收数据</li>\n</ul>\n</li>\n<li>\n<p>具体编码：</p>\n<p>【第一步】父组件中，使用 <code>provide</code>  提供数据</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;father&quot;&gt;</span><br><span class=\"line\">    &lt;h3&gt;父组件&lt;/h3&gt;</span><br><span class=\"line\">    &lt;h4&gt;资产：&#123;&#123; money &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">    &lt;h4&gt;汽车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;money += 1&quot;&gt;资产+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;car.price += 1&quot;&gt;汽车价格+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;Child/&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class=\"line\">  import Child from &#x27;./Child.vue&#x27;</span><br><span class=\"line\">  import &#123; ref,reactive,provide &#125; from &quot;vue&quot;;</span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let money = ref(100)</span><br><span class=\"line\">  let car = reactive(&#123;</span><br><span class=\"line\">    brand:&#x27;奔驰&#x27;,</span><br><span class=\"line\">    price:100</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  // 用于更新money的方法</span><br><span class=\"line\">  function updateMoney(value:number)&#123;</span><br><span class=\"line\">    money.value += value</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // 提供数据</span><br><span class=\"line\">  provide(&#x27;moneyContext&#x27;,&#123;money,updateMoney&#125;)</span><br><span class=\"line\">  provide(&#x27;car&#x27;,car)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>注意：子组件中不用编写任何东西，是不受到任何打扰的</p>\n</blockquote>\n<p>【第二步】孙组件中使用 <code>inject</code>  配置项接受数据。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &lt;template&gt;</span><br><span class=\"line\">     &lt;div class=&quot;grand-child&quot;&gt;</span><br><span class=\"line\">       &lt;h3&gt;我是孙组件&lt;/h3&gt;</span><br><span class=\"line\">       &lt;h4&gt;资产：&#123;&#123; money &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">       &lt;h4&gt;汽车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">       &lt;button @click=&quot;updateMoney(6)&quot;&gt;点我&lt;/button&gt;</span><br><span class=\"line\">     &lt;/div&gt;</span><br><span class=\"line\">   &lt;/template&gt;</span><br><span class=\"line\">   </span><br><span class=\"line\">   &lt;script setup lang=&quot;ts&quot; name=&quot;GrandChild&quot;&gt;</span><br><span class=\"line\">     import &#123; inject &#125; from &#x27;vue&#x27;;</span><br><span class=\"line\">     // 注入数据</span><br><span class=\"line\">    let &#123;money,updateMoney&#125; = inject(&#x27;moneyContext&#x27;,&#123;money:0,updateMoney:(x:number)=&gt;&#123;&#125;&#125;)</span><br><span class=\"line\">     let car = inject(&#x27;car&#x27;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h2 id=\"68-pinia\"><a class=\"anchor\" href=\"#68-pinia\">#</a> 6.8. 【pinia】</h2>\n<p>参考之前 <code>pinia</code>  部分的讲解</p>\n<h2 id=\"69-slot\"><a class=\"anchor\" href=\"#69-slot\">#</a> 6.9. 【slot】</h2>\n<h3 id=\"1-默认插槽\"><a class=\"anchor\" href=\"#1-默认插槽\">#</a> 1. 默认插槽</h3>\n<p><img data-src=\"http://49.232.112.44/images/default_slot.png\" alt=\"img\" /></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父组件中：</span><br><span class=\"line\">        &lt;Category title=&quot;今日热门游戏&quot;&gt;</span><br><span class=\"line\">          &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">          &lt;/ul&gt;</span><br><span class=\"line\">        &lt;/Category&gt;</span><br><span class=\"line\">子组件中：</span><br><span class=\"line\">        &lt;template&gt;</span><br><span class=\"line\">          &lt;div class=&quot;item&quot;&gt;</span><br><span class=\"line\">            &lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;</span><br><span class=\"line\">            &lt;!-- 默认插槽 --&gt;</span><br><span class=\"line\">            &lt;slot&gt;&lt;/slot&gt;</span><br><span class=\"line\">          &lt;/div&gt;</span><br><span class=\"line\">        &lt;/template&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-具名插槽\"><a class=\"anchor\" href=\"#2-具名插槽\">#</a> 2. 具名插槽</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父组件中：</span><br><span class=\"line\">        &lt;Category title=&quot;今日热门游戏&quot;&gt;</span><br><span class=\"line\">          &lt;template v-slot:s1&gt;</span><br><span class=\"line\">            &lt;ul&gt;</span><br><span class=\"line\">              &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\">          &lt;/template&gt;</span><br><span class=\"line\">          &lt;template #s2&gt;</span><br><span class=\"line\">            &lt;a href=&quot;&quot;&gt;更多&lt;/a&gt;</span><br><span class=\"line\">          &lt;/template&gt;</span><br><span class=\"line\">        &lt;/Category&gt;</span><br><span class=\"line\">子组件中：</span><br><span class=\"line\">        &lt;template&gt;</span><br><span class=\"line\">          &lt;div class=&quot;item&quot;&gt;</span><br><span class=\"line\">            &lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;</span><br><span class=\"line\">            &lt;slot name=&quot;s1&quot;&gt;&lt;/slot&gt;</span><br><span class=\"line\">            &lt;slot name=&quot;s2&quot;&gt;&lt;/slot&gt;</span><br><span class=\"line\">          &lt;/div&gt;</span><br><span class=\"line\">        &lt;/template&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-作用域插槽\"><a class=\"anchor\" href=\"#3-作用域插槽\">#</a> 3. 作用域插槽</h3>\n<ol>\n<li>\n<p>理解：&lt;span style=&quot;color:red&quot;&gt; 数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。&lt;/span&gt;（新闻数据在 <code>News</code>  组件中，但使用数据所遍历出来的结构由 <code>App</code>  组件决定）</p>\n</li>\n<li>\n<p>具体编码：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父组件中：</span><br><span class=\"line\">      &lt;Game v-slot=&quot;params&quot;&gt;</span><br><span class=\"line\">      &lt;!-- &lt;Game v-slot:default=&quot;params&quot;&gt; --&gt;</span><br><span class=\"line\">      &lt;!-- &lt;Game #default=&quot;params&quot;&gt; --&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">          &lt;li v-for=&quot;g in params.games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">      &lt;/Game&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">子组件中：</span><br><span class=\"line\">      &lt;template&gt;</span><br><span class=\"line\">        &lt;div class=&quot;category&quot;&gt;</span><br><span class=\"line\">          &lt;h2&gt;今日游戏榜单&lt;/h2&gt;</span><br><span class=\"line\">          &lt;slot :games=&quot;games&quot; a=&quot;哈哈&quot;&gt;&lt;/slot&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">      &lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;script setup lang=&quot;ts&quot; name=&quot;Category&quot;&gt;</span><br><span class=\"line\">        import &#123;reactive&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">        let games = reactive([</span><br><span class=\"line\">          &#123;id:&#x27;asgdytsa01&#x27;,name:&#x27;英雄联盟&#x27;&#125;,</span><br><span class=\"line\">          &#123;id:&#x27;asgdytsa02&#x27;,name:&#x27;王者荣耀&#x27;&#125;,</span><br><span class=\"line\">          &#123;id:&#x27;asgdytsa03&#x27;,name:&#x27;红色警戒&#x27;&#125;,</span><br><span class=\"line\">          &#123;id:&#x27;asgdytsa04&#x27;,name:&#x27;斗罗大陆&#x27;&#125;</span><br><span class=\"line\">        ])</span><br><span class=\"line\">      &lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h1 id=\"7-其它-api\"><a class=\"anchor\" href=\"#7-其它-api\">#</a> 7. 其它 API</h1>\n<h2 id=\"71shallowref-与-shallowreactive\"><a class=\"anchor\" href=\"#71shallowref-与-shallowreactive\">#</a> 7.1.【shallowRef 与 shallowReactive 】</h2>\n<h3 id=\"shallowref\"><a class=\"anchor\" href=\"#shallowref\">#</a>  <code>shallowRef</code></h3>\n<ol>\n<li>\n<p>作用：创建一个响应式数据，但只对顶层属性进行响应式处理。</p>\n</li>\n<li>\n<p>用法：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myVar = <span class=\"title function_\">shallowRef</span>(initialValue);</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>特点：只跟踪引用值的变化，不关心值内部的属性变化。</p>\n</li>\n</ol>\n<h3 id=\"shallowreactive\"><a class=\"anchor\" href=\"#shallowreactive\">#</a>  <code>shallowReactive</code></h3>\n<ol>\n<li>\n<p>作用：创建一个浅层响应式对象，只会使对象的最顶层属性变成响应式的，对象内部的嵌套属性则不会变成响应式的</p>\n</li>\n<li>\n<p>用法：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myObj = <span class=\"title function_\">shallowReactive</span>(&#123; ... &#125;);</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>特点：对象的顶层属性是响应式的，但嵌套对象的属性不是。</p>\n</li>\n</ol>\n<h3 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h3>\n<blockquote>\n<p>通过使用 <a href=\"https://cn.vuejs.org/api/reactivity-advanced.html#shallowref\"> <code>shallowRef()</code> </a> 和 <a href=\"https://cn.vuejs.org/api/reactivity-advanced.html#shallowreactive\"> <code>shallowReactive()</code> </a> 来绕开深度响应。浅层式  <code>API</code>  创建的状态只在其顶层是响应式的，对所有深层的对象不会做任何处理，避免了对每一个内部属性做响应式所带来的性能成本，这使得属性的访问变得更快，可提升性能。</p>\n</blockquote>\n<h2 id=\"72readonly-与-shallowreadonly\"><a class=\"anchor\" href=\"#72readonly-与-shallowreadonly\">#</a> 7.2.【readonly 与 shallowReadonly】</h2>\n<h3 id=\"readonly\"><a class=\"anchor\" href=\"#readonly\">#</a> <strong> <code>readonly</code> </strong></h3>\n<ol>\n<li>\n<p>作用：用于创建一个对象的深只读副本。</p>\n</li>\n<li>\n<p>用法：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> original = <span class=\"title function_\">reactive</span>(&#123; ... &#125;);</span><br><span class=\"line\"><span class=\"keyword\">const</span> readOnlyCopy = <span class=\"title function_\">readonly</span>(original);</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>特点：</p>\n<ul>\n<li>对象的所有嵌套属性都将变为只读。</li>\n<li>任何尝试修改这个对象的操作都会被阻止（在开发模式下，还会在控制台中发出警告）。</li>\n</ul>\n</li>\n<li>\n<p>应用场景：</p>\n<ul>\n<li>创建不可变的状态快照。</li>\n<li>保护全局状态或配置不被修改。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"shallowreadonly\"><a class=\"anchor\" href=\"#shallowreadonly\">#</a> <strong> <code>shallowReadonly</code> </strong></h3>\n<ol>\n<li>\n<p>作用：与  <code>readonly</code>  类似，但只作用于对象的顶层属性。</p>\n</li>\n<li>\n<p>用法：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> original = <span class=\"title function_\">reactive</span>(&#123; ... &#125;);</span><br><span class=\"line\"><span class=\"keyword\">const</span> shallowReadOnlyCopy = <span class=\"title function_\">shallowReadonly</span>(original);</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>特点：</p>\n<ul>\n<li>\n<p>只将对象的顶层属性设置为只读，对象内部的嵌套属性仍然是可变的。</p>\n</li>\n<li>\n<p>适用于只需保护对象顶层属性的场景。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"73toraw-与-markraw\"><a class=\"anchor\" href=\"#73toraw-与-markraw\">#</a> 7.3.【toRaw 与 markRaw】</h2>\n<h3 id=\"toraw\"><a class=\"anchor\" href=\"#toraw\">#</a>  <code>toRaw</code></h3>\n<ol>\n<li>\n<p>作用：用于获取一个响应式对象的原始对象，  <code>toRaw</code>  返回的对象不再是响应式的，不会触发视图更新。</p>\n<blockquote>\n<p>官网描述：这是一个可以用于临时读取而不引起代理访问 / 跟踪开销，或是写入而不触发更改的特殊方法。不建议保存对原始对象的持久引用，请谨慎使用。</p>\n</blockquote>\n<blockquote>\n<p>何时使用？ —— 在需要将响应式对象传递给非  <code>Vue</code>  的库或外部系统时，使用  <code>toRaw</code>  可以确保它们收到的是普通对象</p>\n</blockquote>\n</li>\n<li>\n<p>具体编码：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; reactive,toRaw,markRaw,isReactive &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* toRaw */</span></span><br><span class=\"line\"><span class=\"comment\">// 响应式对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> person = <span class=\"title function_\">reactive</span>(&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;tony&#x27;</span>,<span class=\"attr\">age</span>:<span class=\"number\">18</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 原始对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> rawPerson = <span class=\"title function_\">toRaw</span>(person)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* markRaw */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> citysd = <span class=\"title function_\">markRaw</span>([</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>:<span class=\"string\">&#x27;asdda01&#x27;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;北京&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>:<span class=\"string\">&#x27;asdda02&#x27;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;上海&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>:<span class=\"string\">&#x27;asdda03&#x27;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;天津&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>:<span class=\"string\">&#x27;asdda04&#x27;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;重庆&#x27;</span>&#125;</span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"comment\">// 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> citys2 = <span class=\"title function_\">reactive</span>(citys)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">isReactive</span>(person))</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">isReactive</span>(rawPerson))</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">isReactive</span>(citys))</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">isReactive</span>(citys2))</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h3 id=\"markraw\"><a class=\"anchor\" href=\"#markraw\">#</a>  <code>markRaw</code></h3>\n<ol>\n<li>\n<p>作用：标记一个对象，使其<strong>永远不会</strong>变成响应式的。</p>\n<blockquote>\n<p>例如使用 <code>mockjs</code>  时，为了防止误把 <code>mockjs</code>  变为响应式对象，可以使用  <code>markRaw</code>  去标记 <code>mockjs</code></p>\n</blockquote>\n</li>\n<li>\n<p>编码：</p>\n<p><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* markRaw */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> citys = <span class=\"title function_\">markRaw</span>([</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>:<span class=\"string\">&#x27;asdda01&#x27;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;北京&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>:<span class=\"string\">&#x27;asdda02&#x27;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;上海&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>:<span class=\"string\">&#x27;asdda03&#x27;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;天津&#x27;</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>:<span class=\"string\">&#x27;asdda04&#x27;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;重庆&#x27;</span>&#125;</span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"comment\">// 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> citys2 = <span class=\"title function_\">reactive</span>(citys)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ol>\n<h2 id=\"74customref\"><a class=\"anchor\" href=\"#74customref\">#</a> 7.4.【customRef】</h2>\n<p>作用：创建一个自定义的 <code>ref</code> ，并对其依赖项跟踪和更新触发进行逻辑控制。</p>\n<p>实现防抖效果（ <code>useSumRef.ts</code> ）：</p>\n<p><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;customRef &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span>(<span class=\"params\">initValue:<span class=\"built_in\">string</span>,delay:<span class=\"built_in\">number</span></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> msg = <span class=\"title function_\">customRef</span>(<span class=\"function\">(<span class=\"params\">track,trigger</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"attr\">timer</span>:<span class=\"built_in\">number</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">get</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_\">track</span>() <span class=\"comment\">// 告诉Vue数据msg很重要，要对msg持续关注，一旦变化就更新</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> initValue</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"title function_\">set</span>(<span class=\"params\">value</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(timer)</span><br><span class=\"line\">        timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">          initValue = value</span><br><span class=\"line\">          <span class=\"title function_\">trigger</span>() <span class=\"comment\">//通知Vue数据msg变化了</span></span><br><span class=\"line\">        &#125;, delay);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;) </span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;msg&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>组件中使用：</p>\n<h1 id=\"8-vue3新组件\"><a class=\"anchor\" href=\"#8-vue3新组件\">#</a> 8. Vue3 新组件</h1>\n<h2 id=\"81-teleport\"><a class=\"anchor\" href=\"#81-teleport\">#</a> 8.1. 【Teleport】</h2>\n<ul>\n<li>什么是 Teleport？—— Teleport 是一种能够将我们的<strong>组件 html 结构</strong>移动到指定位置的技术。</li>\n</ul>\n<p><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">teleport</span> <span class=\"attr\">to</span>=<span class=\"string\">&#x27;body&#x27;</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal&quot;</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isShow&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>我是一个弹窗<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>我是弹窗中的一些内容<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;isShow = false&quot;</span>&gt;</span>关闭弹窗<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">teleport</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"82-suspense\"><a class=\"anchor\" href=\"#82-suspense\">#</a> 8.2. 【Suspense】</h2>\n<ul>\n<li>等待异步组件时渲染一些额外内容，让应用有更好的用户体验</li>\n<li>使用步骤：\n<ul>\n<li>异步引入组件</li>\n<li>使用 <code>Suspense</code>  包裹组件，并配置好 <code>default</code>  与  <code>fallback</code></li>\n</ul>\n</li>\n</ul>\n<p><figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineAsyncComponent,<span class=\"title class_\">Suspense</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Child</span> = <span class=\"title function_\">defineAsyncComponent</span>(<span class=\"function\">()=&gt;</span><span class=\"keyword\">import</span>(<span class=\"string\">&#x27;./Child.vue&#x27;</span>))</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div class=&quot;app&quot;&gt;</span><br><span class=\"line\">        &lt;h3&gt;我是App组件&lt;/h3&gt;</span><br><span class=\"line\">        &lt;Suspense&gt;</span><br><span class=\"line\">          &lt;template v-slot:default&gt;</span><br><span class=\"line\">            &lt;Child/&gt;</span><br><span class=\"line\">          &lt;/template&gt;</span><br><span class=\"line\">          &lt;template v-slot:fallback&gt;</span><br><span class=\"line\">            &lt;h3&gt;加载中.......&lt;/h3&gt;</span><br><span class=\"line\">          &lt;/template&gt;</span><br><span class=\"line\">        &lt;/Suspense&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"83全局api转移到应用对象\"><a class=\"anchor\" href=\"#83全局api转移到应用对象\">#</a> 8.3.【全局 API 转移到应用对象】</h2>\n<ul>\n<li><code>app.component</code></li>\n<li><code>app.config</code></li>\n<li><code>app.directive</code></li>\n<li><code>app.mount</code></li>\n<li><code>app.unmount</code></li>\n<li><code>app.use</code></li>\n</ul>\n<h2 id=\"84其他\"><a class=\"anchor\" href=\"#84其他\">#</a> 8.4.【其他】</h2>\n<ul>\n<li>\n<p>过渡类名  <code>v-enter</code>  修改为  <code>v-enter-from</code> 、过渡类名  <code>v-leave</code>  修改为  <code>v-leave-from</code> 。</p>\n</li>\n<li>\n<p><code>keyCode</code>  作为  <code>v-on</code>  修饰符的支持。</p>\n</li>\n<li>\n<p><code>v-model</code>  指令在组件上的使用已经被重新设计，替换掉了  <code>v-bind.sync。</code></p>\n</li>\n<li>\n<p><code>v-if</code>  和  <code>v-for</code>  在同一个元素身上使用时的优先级发生了变化。</p>\n</li>\n<li>\n<p>移除了 <code>$on</code> 、 <code>$off</code>  和  <code>$once</code>  实例方法。</p>\n</li>\n<li>\n<p>移除了过滤器  <code>filter</code> 。</p>\n</li>\n<li>\n<p>移除了 <code>$children</code>  实例  <code>propert</code> 。</p>\n<p>......</p>\n</li>\n</ul>\n",
            "tags": [
                "Vue3"
            ]
        },
        {
            "id": "http://qiji5211.com/2023/11/23/qianduan/JS/mo/%E6%A8%A1%E5%9D%97%E5%8C%96_%E7%AC%94%E8%AE%B0/",
            "url": "http://qiji5211.com/2023/11/23/qianduan/JS/mo/%E6%A8%A1%E5%9D%97%E5%8C%96_%E7%AC%94%E8%AE%B0/",
            "title": "JS模块化（简版）",
            "date_published": "2023-11-23T09:30:58.000Z",
            "content_html": "<h2 id=\"js模块化\"><a class=\"anchor\" href=\"#js模块化\">#</a> JS 模块化</h2>\n<ul>\n<li>模块化的理解</li>\n<li>什么是模块？\n<ul>\n<li>将一个复杂的程序依据一定的规则 (规范) 封装成几个块 (文件), 并进行组合在一起</li>\n<li>块的内部数据 / 实现是私有的，只是向外部暴露一些接口 (方法) 与外部其它模块通信</li>\n</ul>\n</li>\n<li>一个模块的组成\n<ul>\n<li>数据 ---&gt; 内部的属性</li>\n<li>操作数据的行为 ---&gt; 内部的函数</li>\n</ul>\n</li>\n<li>模块化\n<ul>\n<li>编码时是按照模块一个一个编码的，整个项目就是一个模块化的项目</li>\n</ul>\n</li>\n<li>模块化的进化过程\n<ul>\n<li>全局 function 模式 :\n<ul>\n<li>编码：全局变量 / 函数</li>\n<li>问题：污染全局命名空间，容易引起命名冲突 / 数据不安全</li>\n</ul>\n</li>\n<li>namespace 模式 :\n<ul>\n<li>编码：将数据 / 行为封装到对象中</li>\n<li>解决：命名冲突 (减少了全局变量)</li>\n<li>问题：数据不安全 (外部可以直接修改模块内部的数据)</li>\n</ul>\n</li>\n<li>IIFE 模式 / 增强\n<ul>\n<li>IIFE : 立即调用函数表达式 ---&gt; 匿名函数自调用</li>\n<li>编码：将数据和行为封装到一个函数内部，通过给 window 添加属性来向外暴露接口</li>\n<li>引入依赖：通过函数形参来引入依赖模块<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(function(window, module2)&#123;</span><br><span class=\"line\">  var data = &#x27;atguigu.com&#x27;</span><br><span class=\"line\">  function foo() &#123;</span><br><span class=\"line\">     module2.xxx()</span><br><span class=\"line\">     console.log(&#x27;foo()&#x27;+data)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function bar() &#123;</span><br><span class=\"line\">     console.log(&#x27;bar()&#x27;+data)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  window.module = &#123;foo&#125;</span><br><span class=\"line\">&#125;)(window, module2)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>模块化规范\n<ul>\n<li>CommonJS\n<ul>\n<li>Node.js : 服务器端</li>\n<li>Browserify : 浏览器端    也称为 js 的打包工具</li>\n<li>基本语法:\n<ul>\n<li>定义暴露模块 : exports<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exports.xxx = value</span><br><span class=\"line\">module.exports = value</span><br></pre></td></tr></table></figure><br />\n 引入模块 : require<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var module = require(&#x27;模块名/模块相对路径&#x27;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>引入模块发生在什么时候？\n<ul>\n<li>Node : 运行时，动态同步引入</li>\n<li>Browserify : 在运行前对模块进行编译 / 转译 / 打包的处理 (已经将依赖的模块包含进来了),<br />\n 运行的是打包生成的 js, 运行时不存在需要再从远程引入依赖模块</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>AMD : 浏览器端\n<ul>\n<li>require.js</li>\n<li>基本语法\n<ul>\n<li>定义暴露模块: define ([依赖模块名], function (){return 模块对象})</li>\n<li>引入模块: require ([' 模块 1', ' 模块 2', ' 模块 3'], function (m1, m2){// 使用模块对象})</li>\n<li>配置:<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">require.config(&#123;</span><br><span class=\"line\">  //基本路径</span><br><span class=\"line\">  baseUrl : &#x27;js/&#x27;,</span><br><span class=\"line\">  //标识名称与路径的映射</span><br><span class=\"line\">  paths : &#123;</span><br><span class=\"line\">    &#x27;模块1&#x27; : &#x27;modules/模块1&#x27;,</span><br><span class=\"line\">    &#x27;模块2&#x27; : &#x27;modules/模块2&#x27;,</span><br><span class=\"line\">    &#x27;angular&#x27; : &#x27;libs/angular&#x27;,</span><br><span class=\"line\">    &#x27;angular-messages&#x27; : &#x27;libs/angular-messages&#x27;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  //非AMD的模块</span><br><span class=\"line\">  shim : &#123;</span><br><span class=\"line\">    &#x27;angular&#x27; : &#123;</span><br><span class=\"line\">        exports : &#x27;angular&#x27;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#x27;angular-messages&#x27; : &#123;</span><br><span class=\"line\">        exports : &#x27;angular-messages&#x27;,</span><br><span class=\"line\">        deps : [&#x27;angular&#x27;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>CMD : 浏览器端\n<ul>\n<li>sea.js</li>\n<li>基本语法\n<ul>\n<li>定义暴露模块:<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(function(require, module, exports)&#123;</span><br><span class=\"line\">  通过require引入依赖模块</span><br><span class=\"line\">  通过module/exports来暴露模块</span><br><span class=\"line\">  exports.xxx = value</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li>使用模块 seajs.use ([' 模块 1', ' 模块 2'])</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ES6\n<ul>\n<li>ES6 内置了模块化的实现</li>\n<li>基本语法\n<ul>\n<li>\n<p>定义暴露模块 : export</p>\n<ul>\n<li>暴露一个对象:<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export default 对象</span><br></pre></td></tr></table></figure></li>\n<li>暴露多个:<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export var xxx = value1</span><br><span class=\"line\">export let yyy = value2</span><br><span class=\"line\"></span><br><span class=\"line\">var xxx = value1</span><br><span class=\"line\">let yyy = value2</span><br><span class=\"line\">export &#123;xxx, yyy&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>引入使用模块 : import</p>\n<ul>\n<li>default 模块:<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import xxx  from &#x27;模块路径/模块名&#x27;</span><br></pre></td></tr></table></figure></li>\n<li>其它模块<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123;xxx, yyy&#125; from &#x27;模块路径/模块名&#x27;</span><br><span class=\"line\">import * as module1 from &#x27;模块路径/模块名&#x27;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>问题：所有浏览器还不能直接识别 ES6 模块化的语法</li>\n<li>解决:\n<ul>\n<li>使用 Babel 将 ES6---&gt;ES5 (使用了 CommonJS) ---- 浏览器还不能直接支行</li>\n<li>使用 Browserify---&gt; 打包处理 ---- 浏览器可以运行</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "JS"
            ]
        },
        {
            "id": "http://qiji5211.com/2023/11/23/qianduan/JS/mo/1_%E6%A8%A1%E5%9D%97%E5%8C%96%E8%BF%9B%E5%8C%96%E5%8F%B2%E6%95%99%E7%A8%8B/",
            "url": "http://qiji5211.com/2023/11/23/qianduan/JS/mo/1_%E6%A8%A1%E5%9D%97%E5%8C%96%E8%BF%9B%E5%8C%96%E5%8F%B2%E6%95%99%E7%A8%8B/",
            "title": "JS模块化",
            "date_published": "2023-11-23T09:30:58.000Z",
            "content_html": "<h1 id=\"模块化进化史教程\"><a class=\"anchor\" href=\"#模块化进化史教程\">#</a> 模块化进化史教程</h1>\n<h2 id=\"模块化进化史教程-2\"><a class=\"anchor\" href=\"#模块化进化史教程-2\">#</a> 模块化进化史教程</h2>\n<ol>\n<li>全局 function 模式</li>\n</ol>\n<ul>\n<li>module1.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//数据</span><br><span class=\"line\">let data = &#x27;atguigu.com&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">//操作数据的函数</span><br><span class=\"line\">function foo() &#123;</span><br><span class=\"line\">  console.log(`foo() $&#123;data&#125;`)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function bar() &#123;</span><br><span class=\"line\">  console.log(`bar() $&#123;data&#125;`)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>module2.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let data2 = &#x27;other data&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">function foo() &#123;  //与另一个模块中的函数冲突了</span><br><span class=\"line\">  console.log(`foo() $&#123;data2&#125;`)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>test1.html<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;module1.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;module2.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  let data = &quot;修改后的数据&quot;</span><br><span class=\"line\">  foo()</span><br><span class=\"line\">  bar()</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n<li>说明:\n<ul>\n<li>全局函数模式：将不同的功能封装成不同的全局函数</li>\n<li>问题: Global 被污染了，很容易引起命名冲突</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>namespace 模式</li>\n</ol>\n<ul>\n<li>module1.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let myModule = &#123;</span><br><span class=\"line\">  data: &#x27;atguigu.com&#x27;,</span><br><span class=\"line\">  foo() &#123;</span><br><span class=\"line\">    console.log(`foo() $&#123;this.data&#125;`)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  bar() &#123;</span><br><span class=\"line\">    console.log(`bar() $&#123;this.data&#125;`)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>module2.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let myModule2 = &#123;</span><br><span class=\"line\">  data: &#x27;atguigu.com2222&#x27;,</span><br><span class=\"line\">  foo() &#123;</span><br><span class=\"line\">    console.log(`foo() $&#123;this.data&#125;`)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  bar() &#123;</span><br><span class=\"line\">    console.log(`bar() $&#123;this.data&#125;`)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>test2.html<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;module2.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;module22.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">  myModule.foo()</span><br><span class=\"line\">  myModule.bar()</span><br><span class=\"line\"></span><br><span class=\"line\">  myModule2.foo()</span><br><span class=\"line\">  myModule2.bar()</span><br><span class=\"line\"></span><br><span class=\"line\">  myModule.data = &#x27;other data&#x27; //能直接修改模块内部的数据</span><br><span class=\"line\">  myModule.foo()</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n<li>说明\n<ul>\n<li>namespace 模式：简单对象封装</li>\n<li>作用：减少了全局变量</li>\n<li>问题：不安全</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>IIFE 模式</li>\n</ol>\n<ul>\n<li>module3.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(function (window) &#123;</span><br><span class=\"line\">  //数据</span><br><span class=\"line\">  let data = &#x27;atguigu.com&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  //操作数据的函数</span><br><span class=\"line\">  function foo() &#123; //用于暴露有函数</span><br><span class=\"line\">    console.log(`foo() $&#123;data&#125;`)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  function bar() &#123;//用于暴露有函数</span><br><span class=\"line\">    console.log(`bar() $&#123;data&#125;`)</span><br><span class=\"line\">    otherFun() //内部调用</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  function otherFun() &#123; //内部私有的函数</span><br><span class=\"line\">    console.log(&#x27;otherFun()&#x27;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  //暴露行为</span><br><span class=\"line\">  window.myModule = &#123;foo, bar&#125;</span><br><span class=\"line\">&#125;)(window)</span><br></pre></td></tr></table></figure></li>\n<li>test3.html<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;module3.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">  myModule.foo()</span><br><span class=\"line\">  myModule.bar()</span><br><span class=\"line\">  //myModule.otherFun()  //myModule.otherFun is not a function</span><br><span class=\"line\">  console.log(myModule.data) //undefined 不能访问模块内部数据</span><br><span class=\"line\">  myModule.data = &#x27;xxxx&#x27; //不是修改的模块内部的data</span><br><span class=\"line\">  myModule.foo() //没有改变</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n<li>说明:\n<ul>\n<li>IIFE 模式：匿名函数自调用 (闭包)</li>\n<li>IIFE : immediately-invoked function expression (立即调用函数表达式)</li>\n<li>作用：数据是私有的，外部只能通过暴露的方法操作</li>\n<li>问题：如果当前这个模块依赖另一个模块怎么办？</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li>IIFE 模式增强</li>\n</ol>\n<ul>\n<li>引入 jquery 到项目中</li>\n<li>module4.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(function (window, $) &#123;</span><br><span class=\"line\">  //数据</span><br><span class=\"line\">  let data = &#x27;atguigu.com&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  //操作数据的函数</span><br><span class=\"line\">  function foo() &#123; //用于暴露有函数</span><br><span class=\"line\">    console.log(`foo() $&#123;data&#125;`)</span><br><span class=\"line\">    $(&#x27;body&#x27;).css(&#x27;background&#x27;, &#x27;red&#x27;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  function bar() &#123;//用于暴露有函数</span><br><span class=\"line\">    console.log(`bar() $&#123;data&#125;`)</span><br><span class=\"line\">    otherFun() //内部调用</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  function otherFun() &#123; //内部私有的函数</span><br><span class=\"line\">    console.log(&#x27;otherFun()&#x27;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  //暴露行为</span><br><span class=\"line\">  window.myModule = &#123;foo, bar&#125;</span><br><span class=\"line\">&#125;)(window, jQuery)</span><br></pre></td></tr></table></figure></li>\n<li>test4.html<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;jquery-1.10.1.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;module4.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">  myModule.foo()</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n<li>说明\n<ul>\n<li>IIFE 模式增强：引入依赖</li>\n<li>这就是现代模块实现的基石</li>\n</ul>\n</li>\n</ul>\n<ol start=\"5\">\n<li>页面加载多个 js 的问题</li>\n</ol>\n<ul>\n<li>页面:<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;module1.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;module2.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;module3.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;module4.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n<li>说明\n<ul>\n<li>一个页面需要引入多个 js 文件</li>\n<li>问题:\n<ul>\n<li>请求过多</li>\n<li>依赖模糊</li>\n<li>难以维护</li>\n</ul>\n</li>\n<li>这些问题可以通过现代模块化编码和项目构建来解决</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"commonjs_node模块化教程\"><a class=\"anchor\" href=\"#commonjs_node模块化教程\">#</a> CommonJS_Node 模块化教程</h1>\n<h2 id=\"nodejs模块化教程\"><a class=\"anchor\" href=\"#nodejs模块化教程\">#</a> Node.js 模块化教程</h2>\n<ol>\n<li>下载安装 node.js</li>\n<li>创建项目结构<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-modules</span><br><span class=\"line\">  |-module1.js</span><br><span class=\"line\">  |-module2.js</span><br><span class=\"line\">  |-module3.js</span><br><span class=\"line\">|-app.js</span><br><span class=\"line\">|-package.json</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;name&quot;: &quot;commonJS-node&quot;,</span><br><span class=\"line\">    &quot;version&quot;: &quot;1.0.0&quot;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n<li>下载第三方模块</li>\n</ol>\n<ul>\n<li>npm install uniq --save</li>\n</ul>\n<ol start=\"4\">\n<li>模块化编码</li>\n</ol>\n<ul>\n<li>module1.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  foo() &#123;</span><br><span class=\"line\">    console.log(&#x27;moudle1 foo()&#x27;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>module2.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = function () &#123;</span><br><span class=\"line\">  console.log(&#x27;module2()&#x27;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>module3.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exports.foo = function () &#123;</span><br><span class=\"line\">  console.log(&#x27;module3 foo()&#x27;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.bar = function () &#123;</span><br><span class=\"line\">  console.log(&#x27;module3 bar()&#x27;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>app.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">  1. 定义暴露模块:</span><br><span class=\"line\">    module.exports = value;</span><br><span class=\"line\">    exports.xxx = value;</span><br><span class=\"line\">  2. 引入模块:</span><br><span class=\"line\">    var module = require(模块名或模块路径);</span><br><span class=\"line\"> */</span><br><span class=\"line\">&quot;use strict&quot;;</span><br><span class=\"line\">//引用模块</span><br><span class=\"line\">let module1 = require(&#x27;./modules/module1&#x27;)</span><br><span class=\"line\">let module2 = require(&#x27;./modules/module2&#x27;)</span><br><span class=\"line\">let module3 = require(&#x27;./modules/module3&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">let uniq = require(&#x27;uniq&#x27;)</span><br><span class=\"line\">let fs = require(&#x27;fs&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">//使用模块</span><br><span class=\"line\">module1.foo()</span><br><span class=\"line\">module2()</span><br><span class=\"line\">module3.foo()</span><br><span class=\"line\">module3.bar()</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(uniq([1, 3, 1, 4, 3]))</span><br><span class=\"line\"></span><br><span class=\"line\">fs.readFile(&#x27;app.js&#x27;, function (error, data) &#123;</span><br><span class=\"line\">  console.log(data.toString())</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"5\">\n<li>通过 node 运行 app.js</li>\n</ol>\n<ul>\n<li>命令: node app.js</li>\n<li>工具：右键 --&gt; 运行</li>\n</ul>\n<h1 id=\"commonjs-browserify模块化教程\"><a class=\"anchor\" href=\"#commonjs-browserify模块化教程\">#</a> CommonJS-Browserify 模块化教程</h1>\n<h2 id=\"browserify模块化使用教程\"><a class=\"anchor\" href=\"#browserify模块化使用教程\">#</a> Browserify 模块化使用教程</h2>\n<ol>\n<li>创建项目结构<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-js</span><br><span class=\"line\">  |-dist //打包生成文件的目录</span><br><span class=\"line\">  |-src //源码所在的目录</span><br><span class=\"line\">    |-module1.js</span><br><span class=\"line\">    |-module2.js</span><br><span class=\"line\">    |-module3.js</span><br><span class=\"line\">    |-app.js //应用主源文件</span><br><span class=\"line\">|-index.html</span><br><span class=\"line\">|-package.json</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;name&quot;: &quot;browserify-test&quot;,</span><br><span class=\"line\">    &quot;version&quot;: &quot;1.0.0&quot;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n<li>下载 browserify</li>\n</ol>\n<ul>\n<li>全局: npm install browserify -g</li>\n<li>局部: npm install browserify --save-dev</li>\n</ul>\n<ol start=\"3\">\n<li>定义模块代码</li>\n</ol>\n<ul>\n<li>module1.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  foo() &#123;</span><br><span class=\"line\">    console.log(&#x27;moudle1 foo()&#x27;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>module2.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = function () &#123;</span><br><span class=\"line\">  console.log(&#x27;module2()&#x27;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>module3.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exports.foo = function () &#123;</span><br><span class=\"line\">  console.log(&#x27;module3 foo()&#x27;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.bar = function () &#123;</span><br><span class=\"line\">  console.log(&#x27;module3 bar()&#x27;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>app.js (应用的主 js)<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//引用模块</span><br><span class=\"line\">let module1 = require(&#x27;./module1&#x27;)</span><br><span class=\"line\">let module2 = require(&#x27;./module2&#x27;)</span><br><span class=\"line\">let module3 = require(&#x27;./module3&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">let uniq = require(&#x27;uniq&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">//使用模块</span><br><span class=\"line\">module1.foo()</span><br><span class=\"line\">module2()</span><br><span class=\"line\">module3.foo()</span><br><span class=\"line\">module3.bar()</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(uniq([1, 3, 1, 4, 3]))</span><br></pre></td></tr></table></figure></li>\n<li>打包处理 js:\n<ul>\n<li>browserify js/src/app.js -o js/dist/bundle.js</li>\n</ul>\n</li>\n<li>页面使用引入:<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;js/dist/bundle.js&quot;&gt;&lt;/script&gt; </span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"amd-requirejs模块化教程\"><a class=\"anchor\" href=\"#amd-requirejs模块化教程\">#</a> AMD-RequireJS 模块化教程</h1>\n<h2 id=\"requirejs使用教程\"><a class=\"anchor\" href=\"#requirejs使用教程\">#</a> require.js 使用教程</h2>\n<ol>\n<li>下载 require.js, 并引入</li>\n</ol>\n<ul>\n<li>官网: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5yZXF1aXJlanMuY24v\">http://www.requirejs.cn/</span></li>\n<li>github : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JlcXVpcmVqcy9yZXF1aXJlanM=\">https://github.com/requirejs/requirejs</span></li>\n<li>将 require.js 导入项目: js/libs/require.js</li>\n</ul>\n<ol start=\"2\">\n<li>创建项目结构<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-js</span><br><span class=\"line\">  |-libs</span><br><span class=\"line\">    |-require.js</span><br><span class=\"line\">  |-modules</span><br><span class=\"line\">    |-alerter.js</span><br><span class=\"line\">    |-dataService.js</span><br><span class=\"line\">  |-main.js</span><br><span class=\"line\">|-index.html</span><br></pre></td></tr></table></figure></li>\n<li>定义 require.js 的模块代码</li>\n</ol>\n<ul>\n<li>dataService.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(function () &#123;</span><br><span class=\"line\">  let msg = &#x27;atguigu.com&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  function getMsg() &#123;</span><br><span class=\"line\">    return msg.toUpperCase()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  return &#123;getMsg&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li>alerter.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define([&#x27;dataService&#x27;, &#x27;jquery&#x27;], function (dataService, $) &#123;</span><br><span class=\"line\">  let name = &#x27;Tom2&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  function showMsg() &#123;</span><br><span class=\"line\">    $(&#x27;body&#x27;).css(&#x27;background&#x27;, &#x27;gray&#x27;)</span><br><span class=\"line\">    alert(dataService.getMsg() + &#x27;, &#x27; + name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  return &#123;showMsg&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"4\">\n<li>\n<p>应用主 (入口) js: main.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(function () &#123;</span><br><span class=\"line\">  //配置</span><br><span class=\"line\">  require.config(&#123;</span><br><span class=\"line\">    //基本路径</span><br><span class=\"line\">    baseUrl: &quot;js/&quot;,</span><br><span class=\"line\">    //模块标识名与模块路径映射</span><br><span class=\"line\">    paths: &#123;</span><br><span class=\"line\">      &quot;alerter&quot;: &quot;modules/alerter&quot;,</span><br><span class=\"line\">      &quot;dataService&quot;: &quot;modules/dataService&quot;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  //引入使用模块</span><br><span class=\"line\">  require( [&#x27;alerter&#x27;], function(alerter) &#123;</span><br><span class=\"line\">    alerter.showMsg()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)()</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>页面使用模块:<br />\n&lt;script data-main=&quot;js/main&quot; src=&quot;js/libs/require.js&quot;&gt;&lt;/script&gt;</p>\n</li>\n</ol>\n<hr />\n<ol start=\"6\">\n<li>使用第三方基于 require.js 的框架 (jquery)</li>\n</ol>\n<ul>\n<li>将 jquery 的库文件导入到项目:\n<ul>\n<li>js/libs/jquery-1.10.1.js</li>\n</ul>\n</li>\n<li>在 main.js 中配置 jquery 路径<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paths: &#123;</span><br><span class=\"line\">          &#x27;jquery&#x27;: &#x27;libs/jquery-1.10.1&#x27;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure></li>\n<li>在 alerter.js 中使用 jquery<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define([&#x27;dataService&#x27;, &#x27;jquery&#x27;], function (dataService, $) &#123;</span><br><span class=\"line\">    var name = &#x27;xfzhang&#x27;</span><br><span class=\"line\">    function showMsg() &#123;</span><br><span class=\"line\">        $(&#x27;body&#x27;).css(&#123;background : &#x27;red&#x27;&#125;)</span><br><span class=\"line\">        alert(name + &#x27; &#x27;+dataService.getMsg())</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return &#123;showMsg&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<hr />\n<ol start=\"7\">\n<li>使用第三方不基于 require.js 的框架 (angular/angular-messages)</li>\n</ol>\n<ul>\n<li>将 angular.js 和 angular-messages.js 导入项目\n<ul>\n<li>js/libs/angular.js</li>\n<li>js/libs/angular-messages.js</li>\n</ul>\n</li>\n<li>在 main.js 中配置<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(function () &#123;</span><br><span class=\"line\">  require.config(&#123;</span><br><span class=\"line\">    //基本路径</span><br><span class=\"line\">    baseUrl: &quot;js/&quot;,</span><br><span class=\"line\">    //模块标识名与模块路径映射</span><br><span class=\"line\">    paths: &#123;</span><br><span class=\"line\">      //第三方库</span><br><span class=\"line\">      &#x27;jquery&#x27; : &#x27;libs/jquery-1.10.1&#x27;,</span><br><span class=\"line\">      &#x27;angular&#x27; : &#x27;libs/angular&#x27;,</span><br><span class=\"line\">      &#x27;angular-messages&#x27; : &#x27;libs/angular-messages&#x27;,</span><br><span class=\"line\">      //自定义模块</span><br><span class=\"line\">      &quot;alerter&quot;: &quot;modules/alerter&quot;,</span><br><span class=\"line\">      &quot;dataService&quot;: &quot;modules/dataService&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    /*</span><br><span class=\"line\">     配置不兼容AMD的模块</span><br><span class=\"line\">     exports : 指定导出的模块名</span><br><span class=\"line\">     deps  : 指定所有依赖的模块的数组</span><br><span class=\"line\">     */</span><br><span class=\"line\">    shim: &#123;</span><br><span class=\"line\">      &#x27;angular&#x27; : &#123;</span><br><span class=\"line\">        exports : &#x27;angular&#x27;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#x27;angular-messages&#x27; : &#123;</span><br><span class=\"line\">        exports : &#x27;angular-messages&#x27;,</span><br><span class=\"line\">        deps : [&#x27;angular&#x27;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  //引入使用模块</span><br><span class=\"line\">  require( [&#x27;alerter&#x27;, &#x27;angular&#x27;, &#x27;angular-messages&#x27;], function(alerter, angular) &#123;</span><br><span class=\"line\">    alerter.showMsg()</span><br><span class=\"line\">    angular.module(&#x27;myApp&#x27;, [&#x27;ngMessages&#x27;])</span><br><span class=\"line\">    angular.bootstrap(document,[&quot;myApp&quot;])</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)()</span><br></pre></td></tr></table></figure></li>\n<li>页面:<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form name=&quot;myForm&quot;&gt;</span><br><span class=\"line\">  用户名: &lt;input type=&quot;text&quot; name=&quot;username&quot; ng-model=&quot;username&quot; ng-required=&quot;true&quot;&gt;</span><br><span class=\"line\">  &lt;div style=&quot;color: red;&quot; ng-show=&quot;myForm.username.$dirty&amp;&amp;myForm.username.$invalid&quot;&gt;用户名是必须的&lt;/div&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"cmd-seajs模块化教程\"><a class=\"anchor\" href=\"#cmd-seajs模块化教程\">#</a> CMD-SeaJS. 模块化教程</h1>\n<h2 id=\"seajs简单使用教程\"><a class=\"anchor\" href=\"#seajs简单使用教程\">#</a> sea.js 简单使用教程</h2>\n<ol>\n<li>下载 sea.js, 并引入</li>\n</ol>\n<ul>\n<li>官网: <span class=\"exturl\" data-url=\"aHR0cDovL3NlYWpzLm9yZy8=\">http://seajs.org/</span></li>\n<li>github : <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlYWpzL3NlYWpz\">https://github.com/seajs/seajs</span></li>\n<li>将 sea.js 导入项目: js/libs/sea.js</li>\n</ul>\n<ol start=\"2\">\n<li>创建项目结构<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-js</span><br><span class=\"line\">  |-libs</span><br><span class=\"line\">    |-sea.js</span><br><span class=\"line\">  |-modules</span><br><span class=\"line\">    |-module1.js</span><br><span class=\"line\">    |-module2.js</span><br><span class=\"line\">    |-module3.js</span><br><span class=\"line\">    |-module4.js</span><br><span class=\"line\">    |-main.js</span><br><span class=\"line\">|-index.html</span><br></pre></td></tr></table></figure></li>\n<li>定义 sea.js 的模块代码</li>\n</ol>\n<ul>\n<li>module1.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(function (require, exports, module) &#123;</span><br><span class=\"line\">  //内部变量数据</span><br><span class=\"line\">  var data = &#x27;atguigu.com&#x27;</span><br><span class=\"line\">  //内部函数</span><br><span class=\"line\">  function show() &#123;</span><br><span class=\"line\">    console.log(&#x27;module1 show() &#x27; + data)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  //向外暴露</span><br><span class=\"line\">  exports.show = show</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li>module2.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(function (require, exports, module) &#123;</span><br><span class=\"line\">  module.exports = &#123;</span><br><span class=\"line\">    msg: &#x27;I Will Back&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li>module3.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(function (require, exports, module) &#123;</span><br><span class=\"line\">  const API_KEY = &#x27;abc123&#x27;</span><br><span class=\"line\">  exports.API_KEY = API_KEY</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li>module4.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(function (require, exports, module) &#123;</span><br><span class=\"line\">  //引入依赖模块(同步)</span><br><span class=\"line\">  var module2 = require(&#x27;./module2&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">  function show() &#123;</span><br><span class=\"line\">    console.log(&#x27;module4 show() &#x27; + module2.msg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  exports.show = show</span><br><span class=\"line\">  //引入依赖模块(异步)</span><br><span class=\"line\">  require.async(&#x27;./module3&#x27;, function (m3) &#123;</span><br><span class=\"line\">    console.log(&#x27;异步引入依赖模块3  &#x27; + m3.API_KEY)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li>main.js : 主 (入口) 模块<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(function (require) &#123;</span><br><span class=\"line\">  var m1 = require(&#x27;./module1&#x27;)</span><br><span class=\"line\">  var m4 = require(&#x27;./module4&#x27;)</span><br><span class=\"line\">  m1.show()</span><br><span class=\"line\">  m4.show()</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"4\">\n<li>index.html:<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--</span><br><span class=\"line\">使用seajs:</span><br><span class=\"line\">  1. 引入sea.js库</span><br><span class=\"line\">  2. 如何定义导出模块 :</span><br><span class=\"line\">    define()</span><br><span class=\"line\">    exports</span><br><span class=\"line\">    module.exports</span><br><span class=\"line\">  3. 如何依赖模块:</span><br><span class=\"line\">    require()</span><br><span class=\"line\">  4. 如何使用模块:</span><br><span class=\"line\">    seajs.use()</span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;js/libs/sea.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">  seajs.use(&#x27;./js/modules/main&#x27;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"es6模块化教程\"><a class=\"anchor\" href=\"#es6模块化教程\">#</a> ES6 模块化教程</h1>\n<h2 id=\"es6-babel-browserify使用教程\"><a class=\"anchor\" href=\"#es6-babel-browserify使用教程\">#</a> ES6-Babel-Browserify 使用教程</h2>\n<ol>\n<li>定义 package.json 文件<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot; : &quot;es6-babel-browserify&quot;,</span><br><span class=\"line\">  &quot;version&quot; : &quot;1.0.0&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>安装 babel-cli, babel-preset-es2015 和 browserify</li>\n</ol>\n<ul>\n<li>npm install babel-cli browserify -g\n<ul>\n<li>npm install babel-preset-es2015 --save-dev</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>定义.babelrc 文件<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   &quot;presets&quot;: [&quot;es2015&quot;]</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n<li>编码</li>\n</ol>\n<ul>\n<li>js/src/module1.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function foo() &#123;</span><br><span class=\"line\">  console.log(&#x27;module1 foo()&#x27;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">export let bar = function () &#123;</span><br><span class=\"line\">  console.log(&#x27;module1 bar()&#x27;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">export const DATA_ARR = [1, 3, 5, 1]</span><br></pre></td></tr></table></figure></li>\n<li>js/src/module2.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let data = &#x27;module2 data&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">function fun1() &#123;</span><br><span class=\"line\">  console.log(&#x27;module2 fun1() &#x27; + data);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function fun2() &#123;</span><br><span class=\"line\">  console.log(&#x27;module2 fun2() &#x27; + data);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export &#123;fun1, fun2&#125;</span><br></pre></td></tr></table></figure></li>\n<li>js/src/module3.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &#x27;Tom&#x27;,</span><br><span class=\"line\">  setName: function (name) &#123;</span><br><span class=\"line\">    this.name = name</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>js/src/app.js<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123;foo, bar&#125; from &#x27;./module1&#x27;</span><br><span class=\"line\">import &#123;DATA_ARR&#125; from &#x27;./module1&#x27;</span><br><span class=\"line\">import &#123;fun1, fun2&#125; from &#x27;./module2&#x27;</span><br><span class=\"line\">import person from &#x27;./module3&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import $ from &#x27;jquery&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">$(&#x27;body&#x27;).css(&#x27;background&#x27;, &#x27;red&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">foo()</span><br><span class=\"line\">bar()</span><br><span class=\"line\">console.log(DATA_ARR);</span><br><span class=\"line\">fun1()</span><br><span class=\"line\">fun2()</span><br><span class=\"line\"></span><br><span class=\"line\">person.setName(&#x27;JACK&#x27;)</span><br><span class=\"line\">console.log(person.name);</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"5\">\n<li>编译</li>\n</ol>\n<ul>\n<li>使用 Babel 将 ES6 编译为 ES5 代码 (但包含 CommonJS 语法) : babel js/src -d js/lib</li>\n<li>使用 Browserify 编译 js : browserify js/lib/app.js -o js/lib/bundle.js</li>\n</ul>\n<ol start=\"6\">\n<li>页面中引入测试<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;js/lib/bundle.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n<li>引入第三方模块 (jQuery)<br />\n 1). 下载 jQuery 模块:\n<ul>\n<li>npm install jquery@1 --save<br />\n2). 在 app.js 中引入并使用<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import $ from &#x27;jquery&#x27;</span><br><span class=\"line\">$(&#x27;body&#x27;).css(&#x27;background&#x27;, &#x27;red&#x27;)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "JS"
            ]
        },
        {
            "id": "http://qiji5211.com/2023/11/23/qianduan/JS/JS%E9%AB%98%E7%BA%A7/",
            "url": "http://qiji5211.com/2023/11/23/qianduan/JS/JS%E9%AB%98%E7%BA%A7/",
            "title": "JavaScript高级教程",
            "date_published": "2023-11-23T09:30:58.000Z",
            "content_html": "<h1 id=\"基础总结深入\"><a class=\"anchor\" href=\"#基础总结深入\">#</a> 基础总结深入</h1>\n<h2 id=\"数据类型的分类和判断\"><a class=\"anchor\" href=\"#数据类型的分类和判断\">#</a> 数据类型的分类和判断</h2>\n<ul>\n<li>基本 (值) 类型\n<ul>\n<li>Number ----- 任意数值 -------- typeof</li>\n<li>String ----- 任意字符串 ------ typeof</li>\n<li>Boolean ---- true/false ----- typeof</li>\n<li>undefined --- undefined ----- typeof/===</li>\n<li>null -------- null ---------- ===</li>\n</ul>\n</li>\n<li>对象 (引用) 类型\n<ul>\n<li>Object ----- typeof/instanceof</li>\n<li>Array ------ instanceof</li>\n<li>Function ---- typeof</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"数据变量-内存的理解\"><a class=\"anchor\" href=\"#数据变量-内存的理解\">#</a> 数据，变量，内存的理解</h2>\n<ul>\n<li>什么是数据？\n<ul>\n<li>在内存中可读的，可传递的保存了特定信息的 ' 东东'</li>\n<li>一切皆数据，函数也是数据</li>\n<li>在内存中的所有操作的目标：数据</li>\n</ul>\n</li>\n<li>什么是变量？\n<ul>\n<li>在程序运行过程中它的值是允许改变的量</li>\n<li>一个变量对应一块小内存，它的值保存在此内存中</li>\n</ul>\n</li>\n<li>什么是内存？\n<ul>\n<li>内存条通电后产生的存储空间 (临时的)</li>\n<li>一块内存包含 2 个方面的数据\n<ul>\n<li>内部存储的数据</li>\n<li>地址值数据</li>\n</ul>\n</li>\n<li>内存空间的分类\n<ul>\n<li>栈空间：全局变量和局部变量</li>\n<li>堆空间：对象</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>内存，数据，变量三者之间的关系\n<ul>\n<li>内存是容器，用来存储不同数据</li>\n<li>变量是内存的标识，通过变量我们可以操作 (读 / 写) 内存中的数据</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"对象的理解和使用\"><a class=\"anchor\" href=\"#对象的理解和使用\">#</a> 对象的理解和使用</h2>\n<ul>\n<li>什么是对象？\n<ul>\n<li>多个数据 (属性) 的集合</li>\n<li>用来保存多个数据 (属性) 的容器</li>\n</ul>\n</li>\n<li>属性组成:\n<ul>\n<li>属性名：字符串 (标识)</li>\n<li>属性值：任意类型</li>\n</ul>\n</li>\n<li>属性的分类:\n<ul>\n<li>一般：属性值不是 function  描述对象的状态</li>\n<li>方法：属性值为 function 的属性  描述对象的行为</li>\n</ul>\n</li>\n<li>特别的对象\n<ul>\n<li>数组：属性名是 0,1,2,3 之类的索引</li>\n<li>函数：可以执行的</li>\n</ul>\n</li>\n<li>如何操作内部属性 (方法)\n<ul>\n<li>. 属性名</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"函数的理解和使用\"><a class=\"anchor\" href=\"#函数的理解和使用\">#</a> 函数的理解和使用</h2>\n<ul>\n<li>什么是函数？\n<ul>\n<li>用来实现特定功能的，n 条语句的封装体</li>\n<li>只有函数类型的数据是可以执行的，其它的都不可以</li>\n</ul>\n</li>\n<li>为什么要用函数？\n<ul>\n<li>提高复用性</li>\n<li>便于阅读交流</li>\n</ul>\n</li>\n<li>函数也是对象\n<ul>\n<li>instanceof Object===true</li>\n<li>函数有属性: prototype</li>\n<li>函数有方法: call ()/apply ()</li>\n<li>可以添加新的属性 / 方法</li>\n</ul>\n</li>\n<li>函数的 3 种不同角色\n<ul>\n<li>一般函数：直接调用</li>\n<li>构造函数：通过 new 调用</li>\n<li>对象：通过。调用内部的属性 / 方法</li>\n</ul>\n</li>\n<li>函数中的 this\n<ul>\n<li>显式指定谁: <span class=\"exturl\" data-url=\"aHR0cDovL29iai54eHg=\">obj.xxx</span>()</li>\n<li>通过 call/apply 指定谁调用: xxx.call (obj)</li>\n<li>不指定谁调用: xxx ()  : window</li>\n<li>回调函数：看背后是通过谁来调用的: window / 其它</li>\n</ul>\n</li>\n<li>匿名函数自调用:<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(function(w, obj)&#123;</span><br><span class=\"line\">  //实现代码</span><br><span class=\"line\">&#125;)(window, obj)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>专业术语为: IIFE (Immediately Invoked Function Expression) 立即调用函数表达式</li>\n</ul>\n</li>\n<li>回调函数的理解\n<ul>\n<li>什么函数才是回调函数？\n<ul>\n<li>你定义的</li>\n<li>你没有调用</li>\n<li>但它最终执行了 (在一定条件下或某个时刻)</li>\n</ul>\n</li>\n<li>常用的回调函数\n<ul>\n<li>dom 事件回调函数</li>\n<li>定时器回调函数</li>\n<li>ajax 请求回调函数 (后面讲解)</li>\n<li>生命周期回调函数 (后面讲解)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"函数高级\"><a class=\"anchor\" href=\"#函数高级\">#</a> 函数高级</h1>\n<h2 id=\"原型与原型链\"><a class=\"anchor\" href=\"#原型与原型链\">#</a> 原型与原型链</h2>\n<ul>\n<li>所有函数都有一个特别的属性:\n<ul>\n<li><code>prototype</code>  : 显式原型属性</li>\n</ul>\n</li>\n<li>所有实例对象都有一个特别的属性:\n<ul>\n<li><code>__proto__</code>  : 隐式原型属性</li>\n</ul>\n</li>\n<li>显式原型与隐式原型的关系\n<ul>\n<li>函数的 prototype: 定义函数时被自动赋值，值默认为 {}, 即用为原型对象</li>\n<li>实例对象的__proto__: 在创建实例对象时被自动添加，并赋值为构造函数的 prototype 值</li>\n<li>原型对象即为当前实例对象的父对象</li>\n</ul>\n</li>\n<li>原型链\n<ul>\n<li>所有的实例对象都有__proto__属性，它指向的就是原型对象</li>\n<li>这样通过__proto__属性就形成了一个链的结构 ----&gt; 原型链</li>\n<li>当查找对象内部的属性 / 方法时，js 引擎自动沿着这个原型链查找</li>\n<li>当给对象属性赋值时不会使用原型链，而只是在当前对象中进行操作</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"执行上下文与执行上下文栈\"><a class=\"anchor\" href=\"#执行上下文与执行上下文栈\">#</a> 执行上下文与执行上下文栈</h2>\n<ul>\n<li>变量提升与函数提升\n<ul>\n<li>变量提升：在变量定义语句之前，就可以访问到这个变量 (undefined)</li>\n<li>函数提升：在函数定义语句之前，就执行该函数</li>\n<li>先有变量提升，再有函数提升</li>\n</ul>\n</li>\n<li>理解\n<ul>\n<li>执行上下文：由 js 引擎自动创建的对象，包含对应作用域中的所有变量属性</li>\n<li>执行上下文栈：用来管理产生的多个执行上下文</li>\n</ul>\n</li>\n<li>分类:\n<ul>\n<li>全局: window</li>\n<li>函数：对程序员来说是透明的</li>\n</ul>\n</li>\n<li>生命周期\n<ul>\n<li>全局：准备执行全局代码前产生，当页面刷新 / 关闭页面时死亡</li>\n<li>函数：调用函数时产生，函数执行完时死亡</li>\n</ul>\n</li>\n<li>包含哪些属性:\n<ul>\n<li>全局 :\n<ul>\n<li>用 var 定义的全局变量  ==&gt;undefined</li>\n<li>使用 function 声明的函数   ===&gt;function</li>\n<li>this   ===&gt;window</li>\n</ul>\n</li>\n<li>函数\n<ul>\n<li>用 var 定义的局部变量  ==&gt;undefined</li>\n<li>使用 function 声明的函数   ===&gt;function</li>\n<li>this   ===&gt; 调用函数的对象，如果没有指定就是 window</li>\n<li>形参变量   ===&gt; 对应实参值</li>\n<li>arguments ===&gt; 实参列表的伪数组</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>执行上下文创建和初始化的过程\n<ul>\n<li>全局:\n<ul>\n<li>在全局代码执行前最先创建一个全局执行上下文 (window)</li>\n<li>收集一些全局变量，并初始化</li>\n<li>将这些变量设置为 window 的属性</li>\n</ul>\n</li>\n<li>函数:\n<ul>\n<li>在调用函数时，在执行函数体之前先创建一个函数执行上下文</li>\n<li>收集一些局部变量，并初始化</li>\n<li>将这些变量设置为执行上下文的属性</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"作用域与作用域链\"><a class=\"anchor\" href=\"#作用域与作用域链\">#</a> 作用域与作用域链</h2>\n<ul>\n<li>理解:\n<ul>\n<li>作用域：一块代码区域，在编码时就确定了，不会再变化</li>\n<li>作用域链：多个嵌套的作用域形成的由内向外的结构，用于查找变量</li>\n</ul>\n</li>\n<li>分类:\n<ul>\n<li>全局</li>\n<li>函数</li>\n<li>js 没有块作用域 (在 ES6 之前)</li>\n</ul>\n</li>\n<li>作用\n<ul>\n<li>作用域：隔离变量，可以在不同作用域定义同名的变量不冲突</li>\n<li>作用域链：查找变量</li>\n</ul>\n</li>\n<li>区别作用域与执行上下文\n<ul>\n<li>作用域：静态的，编码时就确定了 (不是在运行时), 一旦确定就不会变化了</li>\n<li>执行上下文：动态的，执行代码时动态创建，当执行结束消失</li>\n<li>联系：执行上下文环境是在对应的作用域中的</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"闭包\"><a class=\"anchor\" href=\"#闭包\">#</a> 闭包</h2>\n<ul>\n<li>理解:\n<ul>\n<li>当嵌套的内部函数引用了外部函数的变量时就产生了闭包</li>\n<li>通过 chrome 工具得知：闭包本质是内部函数中的一个对象，这个对象中包含引用的变量属性</li>\n</ul>\n</li>\n<li>作用:\n<ul>\n<li>延长局部变量的生命周期</li>\n<li>让函数外部能操作内部的局部变量</li>\n</ul>\n</li>\n<li>写一个闭包程序<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function fn1() &#123;</span><br><span class=\"line\">  var a = 2;</span><br><span class=\"line\">  function fn2() &#123;</span><br><span class=\"line\">    a++;</span><br><span class=\"line\">    console.log(a);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return fn2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var f = fn1();</span><br><span class=\"line\">f();</span><br><span class=\"line\">f();</span><br></pre></td></tr></table></figure></li>\n<li>闭包应用:\n<ul>\n<li>模块化：封装一些数据以及操作数据的函数，向外暴露一些行为</li>\n<li>循环遍历加监听</li>\n<li>JS 框架 (jQuery) 大量使用了闭包</li>\n</ul>\n</li>\n<li>缺点:\n<ul>\n<li>变量占用内存的时间可能会过长</li>\n<li>可能导致内存泄露</li>\n<li>解决:\n<ul>\n<li>及时释放 : f = null; // 让内部函数对象成为垃圾对象</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"内存溢出与内存泄露\"><a class=\"anchor\" href=\"#内存溢出与内存泄露\">#</a> 内存溢出与内存泄露</h2>\n<ol>\n<li>内存溢出</li>\n</ol>\n<ul>\n<li>一种程序运行出现的错误</li>\n<li>当程序运行需要的内存超过了剩余的内存时，就出抛出内存溢出的错误</li>\n</ul>\n<ol start=\"2\">\n<li>内存泄露</li>\n</ol>\n<ul>\n<li>占用的内存没有及时释放</li>\n<li>内存泄露积累多了就容易导致内存溢出</li>\n<li>常见的内存泄露:\n<ul>\n<li>意外的全局变量</li>\n<li>没有及时清理的计时器或回调函数</li>\n<li>闭包</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"对象高级\"><a class=\"anchor\" href=\"#对象高级\">#</a> 对象高级</h1>\n<h2 id=\"对象的创建模式\"><a class=\"anchor\" href=\"#对象的创建模式\">#</a> 对象的创建模式</h2>\n<ul>\n<li>Object 构造函数模式<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var obj = &#123;&#125;;</span><br><span class=\"line\">obj.name = &#x27;Tom&#x27;</span><br><span class=\"line\">obj.setName = function(name)&#123;this.name=name&#125;</span><br></pre></td></tr></table></figure></li>\n<li>对象字面量模式<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">  name : &#x27;Tom&#x27;,</span><br><span class=\"line\">  setName : function(name)&#123;this.name = name&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>构造函数模式<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function Person(name, age) &#123;</span><br><span class=\"line\">  this.name = name;</span><br><span class=\"line\">  this.age = age;</span><br><span class=\"line\">  this.setName = function(name)&#123;this.name=name;&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">new Person(&#x27;tom&#x27;, 12);</span><br></pre></td></tr></table></figure></li>\n<li>构造函数 + 原型的组合模式<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function Person(name, age) &#123;</span><br><span class=\"line\">  this.name = name;</span><br><span class=\"line\">  this.age = age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Person.prototype.setName = function(name)&#123;this.name=name;&#125;;</span><br><span class=\"line\">new Person(&#x27;tom&#x27;, 12);</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"继承模式\"><a class=\"anchor\" href=\"#继承模式\">#</a> 继承模式</h2>\n<ul>\n<li>原型链继承：得到方法<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function Parent()&#123;&#125;</span><br><span class=\"line\">Parent.prototype.test = function()&#123;&#125;;</span><br><span class=\"line\">function Child()&#123;&#125;</span><br><span class=\"line\">Child.prototype = new Parent(); // 子类型的原型指向父类型实例</span><br><span class=\"line\">Child.prototype.constructor = Child</span><br><span class=\"line\">var child = new Child(); //有test()</span><br></pre></td></tr></table></figure></li>\n<li>借用构造函数：得到属性<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function Parent(xxx)&#123;this.xxx = xxx&#125;</span><br><span class=\"line\">Parent.prototype.test = function()&#123;&#125;;</span><br><span class=\"line\">function Child(xxx,yyy)&#123;</span><br><span class=\"line\">    Parent.call(this, xxx);//借用构造函数   this.Parent(xxx)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var child = new Child(&#x27;a&#x27;, &#x27;b&#x27;);  //child.xxx为&#x27;a&#x27;, 但child没有test()</span><br></pre></td></tr></table></figure></li>\n<li>组合<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function Parent(xxx)&#123;this.xxx = xxx&#125;</span><br><span class=\"line\">Parent.prototype.test = function()&#123;&#125;;</span><br><span class=\"line\">function Child(xxx,yyy)&#123;</span><br><span class=\"line\">    Parent.call(this, xxx);//借用构造函数   this.Parent(xxx)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Child.prototype = new Parent(); //得到test()</span><br><span class=\"line\">var child = new Child(); //child.xxx为&#x27;a&#x27;, 也有test()</span><br></pre></td></tr></table></figure></li>\n<li>new 一个对象背后做了些什么？\n<ul>\n<li>创建一个空对象</li>\n<li>给对象设置__proto__, 值为构造函数对象的 prototype 属性值   this.<strong>proto</strong> = Fn.prototype</li>\n<li>执行构造函数体 (给对象添加属性 / 方法)</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"线程机制与事件机制\"><a class=\"anchor\" href=\"#线程机制与事件机制\">#</a> 线程机制与事件机制</h1>\n<h2 id=\"线程与进程\"><a class=\"anchor\" href=\"#线程与进程\">#</a> 线程与进程</h2>\n<ul>\n<li>进程:\n<ul>\n<li>程序的一次执行，它占有一片独有的内存空间</li>\n<li>可以通过 windows 任务管理器查看进程</li>\n</ul>\n</li>\n<li>线程:\n<ul>\n<li>是进程内的一个独立执行单元</li>\n<li>是程序执行的一个完整流程</li>\n<li>是 CPU 的最小的调度单元</li>\n</ul>\n</li>\n<li>关系\n<ul>\n<li>一个进程至少有一个线程 (主)</li>\n<li>程序是在某个进程中的某个线程执行的</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"浏览器内核模块组成\"><a class=\"anchor\" href=\"#浏览器内核模块组成\">#</a> 浏览器内核模块组成</h2>\n<ul>\n<li>主线程\n<ul>\n<li>js 引擎模块：负责 js 程序的编译与运行</li>\n<li>html,css 文档解析模块：负责页面文本的解析</li>\n<li>DOM/CSS 模块：负责 dom/css 在内存中的相关处理</li>\n<li>布局和渲染模块：负责页面的布局和效果的绘制 (内存中的对象)</li>\n</ul>\n</li>\n<li>分线程\n<ul>\n<li>定时器模块：负责定时器的管理</li>\n<li>DOM 事件模块：负责事件的管理</li>\n<li>网络请求模块：负责 Ajax 请求</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"js线程\"><a class=\"anchor\" href=\"#js线程\">#</a> js 线程</h2>\n<ul>\n<li>js 是单线程执行的 (回调函数也是在主线程)</li>\n<li>H5 提出了实现多线程的方案: Web Workers</li>\n<li>只能是主线程更新界面</li>\n</ul>\n<h2 id=\"定时器问题\"><a class=\"anchor\" href=\"#定时器问题\">#</a> 定时器问题:</h2>\n<ul>\n<li>定时器并不真正完全定时</li>\n<li>如果在主线程执行了一个长时间的操作，可能导致延时才处理</li>\n</ul>\n<h2 id=\"事件处理机制图\"><a class=\"anchor\" href=\"#事件处理机制图\">#</a> 事件处理机制 (图)</h2>\n<ul>\n<li>代码分类\n<ul>\n<li>初始化执行代码：包含绑定 dom 事件监听，设置定时器，发送 ajax 请求的代码</li>\n<li>回调执行代码：处理回调逻辑</li>\n</ul>\n</li>\n<li>js 引擎执行代码的基本流程:\n<ul>\n<li>初始化代码 ===&gt; 回调代码</li>\n</ul>\n</li>\n<li>模型的 2 个重要组成部分:\n<ul>\n<li>事件管理模块</li>\n<li>回调队列</li>\n</ul>\n</li>\n<li>模型的运转流程\n<ul>\n<li>执行初始化代码，将事件回调函数交给对应模块管理</li>\n<li>当事件发生时，管理模块会将回调函数及其数据添加到回调列队中</li>\n<li>只有当初始化代码执行完后 (可能要一定时间), 才会遍历读取回调队列中的回调函数执行</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"h5-web-workers\"><a class=\"anchor\" href=\"#h5-web-workers\">#</a> H5 Web Workers</h2>\n<ul>\n<li>\n<p>可以让 js 在分线程执行</p>\n</li>\n<li>\n<p>Worker<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var worker = new Worker(&#x27;worker.js&#x27;);</span><br><span class=\"line\">worker.onMessage = function(event)&#123;event.data&#125; : 用来接收另一个线程发送过来的数据的回调</span><br><span class=\"line\">worker.postMessage(data1) : 向另一个线程发送数据</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>问题:</p>\n<ul>\n<li>worker 内代码不能操作 DOM 更新 UI</li>\n<li>不是每个浏览器都支持这个新特性</li>\n<li>不能跨域加载 JS</li>\n</ul>\n</li>\n<li>\n<p>svn 版本控制</p>\n</li>\n<li>\n<p>svn server</p>\n</li>\n</ul>\n",
            "tags": [
                "JS"
            ]
        }
    ]
}