<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>白骨生花 • Posts by &#34;css3&#34; tag</title>
        <link>http://qiji5211.com</link>
        <description>同行者，拿起火把！</description>
        <language>zh-CN</language>
        <pubDate>Thu, 23 Nov 2023 17:30:58 +0800</pubDate>
        <lastBuildDate>Thu, 23 Nov 2023 17:30:58 +0800</lastBuildDate>
        <category>大创</category>
        <category>新生</category>
        <category>慧试</category>
        <category>TS</category>
        <category>C语言</category>
        <category>JS</category>
        <category>Vue3</category>
        <category>HTML5</category>
        <category>CSS3</category>
        <category>pytorch</category>
        <item>
            <guid isPermalink="true">http://qiji5211.com/2023/11/23/qianduan/HTML5+CSS3/CSS3/</guid>
            <title>CSS3基础</title>
            <link>http://qiji5211.com/2023/11/23/qianduan/HTML5+CSS3/CSS3/</link>
            <category>CSS3</category>
            <pubDate>Thu, 23 Nov 2023 17:30:58 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;HTML 和 CSS 由于较为简单，本 Markdown 文档比较凌乱 (机翻尚硅谷笔记而来，具体以原版为准)，在此仅为方便本人回顾知识创建。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;css3-简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css3-简介&#34;&gt;#&lt;/a&gt; CSS3 简介&lt;/h1&gt;
&lt;h2 id=&#34;css3-概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css3-概述&#34;&gt;#&lt;/a&gt; CSS3 概述&lt;/h2&gt;
&lt;p&gt;CSS3 是 CSS2 的升级版本，它在 CSS2 的基础上，新增了很多强大的新功能，从而解决一些实际面临的问题。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
CSS3在未来会按照 模块化 的方式去发展： https://www.w3.org/Style/CSS/current-work.html

CSS3的新特性如下：

新增了 更加实用的选择器 ，例如：动态伪类选择器、目标伪类选择器、伪元素选择器等等。

新增了 更好的视觉效果 ，例如：圆角、阴影、渐变等。

新增了 丰富的背景效果 ，例如：支持多个背景图片，同时新增了若干个背景相关的属性。

新增了 全新的布局方案 —— 弹性盒子。

新增了Web 字体 ，可以显示用户电脑上没有安装的字体。

增强了 颜色 ，例如： HSL、HSLA、RGBA 几种新的颜色模式，新增 opacity属性来控制

透明度。

增加了2D 和 3D 变换 ，例如：旋转、扭曲、缩放、位移等。

增加 动画与过渡效果 ，让效果的变换更具流线性、平滑性。

......

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;2-css3私有前缀&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-css3私有前缀&#34;&gt;#&lt;/a&gt; 2. CSS3 私有前缀&lt;/h2&gt;
&lt;h2 id=&#34;21-什么是私有前缀&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-什么是私有前缀&#34;&gt;#&lt;/a&gt; 2.1 什么是私有前缀&lt;/h2&gt;
&lt;p&gt;如下代码中的 - webkit - 就是私有前缀&lt;/p&gt;
&lt;h2 id=&#34;22-为什么要有私有前缀&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-为什么要有私有前缀&#34;&gt;#&lt;/a&gt; 2.2 为什么要有私有前缀&lt;/h2&gt;
&lt;h5 id=&#34;w3c标准所提出的某个css特性在被浏览器正式支持之前浏览器厂商会根据浏览器的内核&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#w3c标准所提出的某个css特性在被浏览器正式支持之前浏览器厂商会根据浏览器的内核&#34;&gt;#&lt;/a&gt; W3C 标准所提出的某个 CSS 特性，在被浏览器正式支持之前，浏览器厂商会根据浏览器的内核，&lt;/h5&gt;
&lt;h5 id=&#34;使用私有前缀来测试该css特性在浏览器正式支持该css特性后就不需要私有前缀了&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用私有前缀来测试该css特性在浏览器正式支持该css特性后就不需要私有前缀了&#34;&gt;#&lt;/a&gt; 使用私有前缀来测试该 CSS 特性，在浏览器正式支持该 CSS 特性后，就不需要私有前缀了。&lt;/h5&gt;
&lt;h5 id=&#34;举个例子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#举个例子&#34;&gt;#&lt;/a&gt; 举个例子：&lt;/h5&gt;
&lt;p&gt;查询 CSS3 兼容性的网站：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jYW5pdXNlLmNvbS8=&#34;&gt;https://caniuse.com/&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;400px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;400px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;-webkit-border-radius&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;-webkit-border-radius&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;-moz-border-radius&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;-ms-border-radius&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;-o-border-radius&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;常见浏览器私有前缀&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见浏览器私有前缀&#34;&gt;#&lt;/a&gt; 常见浏览器私有前缀&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;
Chrome 浏览器：- webkit -

Safari 浏览器： - webkit -

Firefox 浏览器：- moz -

Edge 浏览器：- webkit -

旧 Opera 浏览器：-o-

旧 IE 浏览器：-ms-

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
我们在编码时，不用过于关注浏览器私有前缀，不用绞尽脑汁的去记忆，也不用每个都去查询，因

为常用的CSS3新特性，主流浏览器都是支持的，即便是为了老浏览器而加前缀，我们也可以借助

现代的构建工具，去帮我们添加私有前缀。

&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;css-3-基本语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css-3-基本语法&#34;&gt;#&lt;/a&gt; CSS 3 基本语法&lt;/h1&gt;
&lt;h2 id=&#34;css-3-新增长度单位&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css-3-新增长度单位&#34;&gt;#&lt;/a&gt; CSS 3 新增长度单位&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;
1. rem根元素字体大小的倍数，只与根元素字体大小有关。

2. vw 视口宽度的百分之多少 10vw 就是视口宽度的10%。

3. vh 视口高度的百分之多少 10vh 就是视口高度的10%。

4. vmax 视口宽高中大的那个的百分之多少。（了解即可）

5. vmin 视口宽高中小的那个的百分之多少。（了解即可）

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;css-3-新增颜色设置方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css-3-新增颜色设置方式&#34;&gt;#&lt;/a&gt; CSS 3 新增颜色设置方式&lt;/h2&gt;
&lt;p&gt;CSS3 新增了三种颜色设置方式，分别是：rgba、hsl、hsla，由于之前已经详细讲解，此处略&lt;/p&gt;
&lt;p&gt;过。&lt;/p&gt;
&lt;h2 id=&#34;css-3-新增选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css-3-新增选择器&#34;&gt;#&lt;/a&gt; CSS 3 新增选择器&lt;/h2&gt;
&lt;p&gt;CSS3 新增的选择器有：动态伪类、目标伪类、语言伪类、UI 伪类、结构伪类、否定伪类、伪元素；这些在 CSS2 中已经详细讲解，此处略过。&lt;/p&gt;
&lt;h2 id=&#34;css-3-新增盒模型相关属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css-3-新增盒模型相关属性&#34;&gt;#&lt;/a&gt; CSS 3 新增盒模型相关属性&lt;/h2&gt;
&lt;p&gt;可选值 含义&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
content-box width 和 height 设置的是盒子内容区的大小。（默认值）

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
border-box width 和 height 设置的是盒子总大小。（怪异盒模型）

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;值 含义&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
none 不允许用户调整元素大小。^ (默认)

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
both 用户可以调节元素的宽度和高度。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
horizontal 用户可以调节元素的宽度^ 。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
vertical 用户可以调节元素的高度。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;box-sizing-怪异盒模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#box-sizing-怪异盒模型&#34;&gt;#&lt;/a&gt; box - sizing 怪异盒模型 ^&lt;/h3&gt;
&lt;p&gt;使用 box-sizing 属性可以设置盒模型的两种类型&lt;/p&gt;
&lt;h3 id=&#34;resize-调整盒子大小&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#resize-调整盒子大小&#34;&gt;#&lt;/a&gt; resize 调整盒子大小 ^&lt;/h3&gt;
&lt;p&gt;使用 resize 属性可以控制是否允许用户调节元素尺寸。&lt;/p&gt;
&lt;h3 id=&#34;box-shadow-盒子阴影&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#box-shadow-盒子阴影&#34;&gt;#&lt;/a&gt; box - shadow 盒子阴影 ^&lt;/h3&gt;
&lt;p&gt;使用 box-shadow 属性为盒子添加阴影。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
语法：

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;值 含义&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
h-shadow 水平阴影的位置，必须填写，可以为负值

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
v-shadow 垂直阴影的位置，必须填写，可以为负值

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
blur 可选，模糊距离

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
spread 可选，阴影的外延值

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
color 可选，阴影的颜色

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
inset 可选，将外部阴影改为内部阴影

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;各个值的含义：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
默认值：box-shadow:none表示没有阴影

示例：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
box-shadow: h-shadow v-shadow blur spread color inset;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
/* 写两个值，含义：水平位置、垂直位置 */

box-shadow: 10px 10px;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
/* 写三个值，含义：水平位置、垂直位置、颜色 */

box-shadow: 10px 10px red;

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;opacity-不透明度&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#opacity-不透明度&#34;&gt;#&lt;/a&gt; opacity 不透明度 ^&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
opacity属性能为整个元素添加透明效果， 值是 0 到 1 之间的小数， 0 是完全透明， 1 表示完

全不透明。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
opacity 与 rgba 的区别？

opacity 是一个属性，设置的是整个元素（包括元素里的内容）的不透明度。

rgba 是颜色的设置方式，用于设置颜色，它的透明度，仅仅是调整颜色的透明度。

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;css-3-新增背景属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css-3-新增背景属性&#34;&gt;#&lt;/a&gt; CSS 3 新增背景属性&lt;/h2&gt;
&lt;h3 id=&#34;background-origin&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#background-origin&#34;&gt;#&lt;/a&gt; background-origin&lt;/h3&gt;
&lt;p&gt;作用：设置背景图的原点。&lt;/p&gt;
&lt;p&gt;语法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
1. padding-box：从padding区域开始显示背景图像。—— 默认值

2. border-box： 从border区域开始显示背景图像。

3. content-box： 从content区域开始显示背景图像。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;background-clip&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#background-clip&#34;&gt;#&lt;/a&gt; background-clip&lt;/h3&gt;
&lt;p&gt;作用：设置背景图的向外裁剪的区域。&lt;/p&gt;
&lt;p&gt;语法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
1. border-box： 从border区域开始向外裁剪背景。 —— 默认值

2. padding-box： 从padding区域开始向外裁剪背景。

3. content-box： 从content区域开始向外裁剪背景。

4. text：背景图只呈现在文字上。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
注意：若值为text，那么backgroun-clip要加上-webkit-前缀。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
/* 写三个值，含义：水平位置、垂直位置、模糊值 */

box-shadow: 10px 10px 10px;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
/* 写四个值，含义：水平位置、垂直位置、模糊值、颜色 */

box-shadow: 10px 10px 10px red;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
/* 写五个值，含义：水平位置、垂直位置、模糊值、外延值、颜色 */

box-shadow: 10px 10px 10px 10px blue;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
/* 写六个值，含义：水平位置、垂直位置、模糊值、外延值、颜色、内阴影 */

box-shadow: 10px 10px 20px 3px blue inset;

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;background-size&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#background-size&#34;&gt;#&lt;/a&gt; background-size&lt;/h3&gt;
&lt;p&gt;作用：设置背景图的尺寸。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;用长度值指定背景图片大小，不允许负值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用百分比指定背景图片大小，不允许负值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;auto： 背景图片的真实大小。 —— 默认值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;contain： 将背景图片等比缩放，使背景图片的宽或高，与容器的宽或高相等，再将完整&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;背景图片包含在容器内，但要注意：可能会造成容器里部分区域没有背景图片。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;cover：将背景图片等比缩放，直到完全覆盖容器，图片会尽可能全的显示在元素上，但要&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意：背景图片有可能显示不完整。—— 相对比较好的选择&lt;/p&gt;
&lt;h3 id=&#34;backgorund-复合属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#backgorund-复合属性&#34;&gt;#&lt;/a&gt; backgorund 复合属性&lt;/h3&gt;
&lt;h5 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法：&lt;/h5&gt;
&lt;h5 id=&#34;注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意&#34;&gt;#&lt;/a&gt; 注意：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
1. origin 和 clip的值如果一样，如果只写一个值，则origin 和 clip 都设置；如

果设置了两个值，前面的是origin，后面的clip。

2. size 的值必须写在 position 值的后面，并且用 / 分开。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;55-多背景图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#55-多背景图&#34;&gt;#&lt;/a&gt; 5.5. 多背景图&lt;/h3&gt;
&lt;h5 id=&#34;css3-允许元素设置多个背景图片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css3-允许元素设置多个背景图片&#34;&gt;#&lt;/a&gt; CSS3 允许元素设置多个背景图片&lt;/h5&gt;
&lt;h2 id=&#34;6-css3新增边框属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-css3新增边框属性&#34;&gt;#&lt;/a&gt; 6. CSS3 新增边框属性&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;
background-size: 300px 200px;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background-size: 100% 100%;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background-size: contain;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background-size: cover;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background: color url repeat position / size origin clip

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
/* 添加多个背景图 */

background: url(../images/bg-lt.png) no-repeat,

url(../images/bg-rt.png) no-repeat right top,

url(../images/bg-lb.png) no-repeat left bottom,

url(../images/bg-rb.png) no-repeat right bottom;

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;6-1-边框圆角&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-1-边框圆角&#34;&gt;#&lt;/a&gt; 6. 1 边框圆角&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
在 CSS3 中，使用border-radius属性可以将盒子变为圆角。

同时设置四个角的圆角：

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;属性名-作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#属性名-作用&#34;&gt;#&lt;/a&gt; 属性名 作用&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
border-top-left-radius

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;设置左上角圆角半径&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置左上角圆角半径&#34;&gt;#&lt;/a&gt; 设置左上角圆角半径：&lt;/h5&gt;
&lt;h5 id=&#34;1-一个值是正圆半径&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-一个值是正圆半径&#34;&gt;#&lt;/a&gt; 1. 一个值是正圆半径，&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
2. 两个值分别是椭圆的x半径、y半径。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
border-top-right-radius

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;设置右上角圆角半径&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置右上角圆角半径&#34;&gt;#&lt;/a&gt; 设置右上角圆角半径：&lt;/h5&gt;
&lt;h5 id=&#34;1-一个值是正圆半径-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-一个值是正圆半径-2&#34;&gt;#&lt;/a&gt; 1. 一个值是正圆半径，&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
2. 两个值分别是椭圆的x半径、y半径。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
border-bottom-right-radius

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;设置右下角圆角半径&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置右下角圆角半径&#34;&gt;#&lt;/a&gt; 设置右下角圆角半径：&lt;/h5&gt;
&lt;h5 id=&#34;1-一个值是正圆半径-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-一个值是正圆半径-3&#34;&gt;#&lt;/a&gt; 1. 一个值是正圆半径，&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
2. 两个值分别是椭圆的x半径、y半径。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
border-bottom-left-radius

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;设置左下角圆角半径&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置左下角圆角半径&#34;&gt;#&lt;/a&gt; 设置左下角圆角半径：&lt;/h5&gt;
&lt;h5 id=&#34;1-一个值是正圆半径-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-一个值是正圆半径-4&#34;&gt;#&lt;/a&gt; 1. 一个值是正圆半径，&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
2. 两个值分别是椭圆的x半径、y半径。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;分开设置每个角的圆角几乎不用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分开设置每个角的圆角几乎不用&#34;&gt;#&lt;/a&gt; 分开设置每个角的圆角（几乎不用）：&lt;/h5&gt;
&lt;h5 id=&#34;分开设置每个角的圆角综合写法几乎不用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分开设置每个角的圆角综合写法几乎不用&#34;&gt;#&lt;/a&gt; 分开设置每个角的圆角，综合写法（几乎不用）：&lt;/h5&gt;
&lt;h3 id=&#34;6-2-边框外轮廓了解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-2-边框外轮廓了解&#34;&gt;#&lt;/a&gt; 6. 2 边框外轮廓（了解）&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
outline-width ：外轮廓的宽度。

outline-color ：外轮廓的颜色。

outline-style ：外轮廓的风格。

none： 无轮廓

dotted： 点状轮廓

dashed： 虚线轮廓

solid： 实线轮廓

double： 双线轮廓

outline-offset 设置外轮廓与边框的距离，正负值都可以设置。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
注意：outline-offset不是outline的子属性，是一个独立的属性。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
outline 复合属性

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
border-radius:10px;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
border-raidus: 左上角x 右上角x 右下角x 左下角x / 左上y 右上y 右下y 左下y

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
outline:50px solid blue;

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;7-css-3-新增文本属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-css-3-新增文本属性&#34;&gt;#&lt;/a&gt; 7. CSS 3 新增文本属性&lt;/h2&gt;
&lt;h3 id=&#34;7-1-文本阴影&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-1-文本阴影&#34;&gt;#&lt;/a&gt; 7. 1 文本阴影&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
在 CSS3 中，我们可以使用 text-shadow 属性给文本添加阴影。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-描述&#34;&gt;#&lt;/a&gt; 值 描述&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
h-shadow 必需写，水平阴影的位置。允许负值。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
v-shadow 必需写，垂直阴影的位置。允许负值。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
blur 可选，模糊的距离。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
color 可选，阴影的颜色

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;语法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-2&#34;&gt;#&lt;/a&gt; 语法：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
默认值：text-shadow:none 表示没有阴影。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;7-2-文本换行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-2-文本换行&#34;&gt;#&lt;/a&gt; 7. 2 文本换行&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
在 CSS3 中，我们可以使用 white-space 属性设置文本换行方式。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-含义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
normal 文本超出边界自动换行，文本中的换行被浏览器识别为一个空格。（默认值）

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
pre 原样输出，与pre标签的效果相同。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
pre-wrap 在pre效果的基础上，超出元素边界自动换行。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
pre-line

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
在pre效果的基础上，超出元素边界自动换行，且只识别文本中的换行，空格

会忽略。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
nowrap 强制不换行

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;常用值如下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用值如下&#34;&gt;#&lt;/a&gt; 常用值如下：&lt;/h5&gt;
&lt;h3 id=&#34;7-3-文本溢出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-3-文本溢出&#34;&gt;#&lt;/a&gt; 7. 3 文本溢出&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
在 CSS3 中，我们可以使用 text-overflow 属性设置文本内容溢出时的呈现模式。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-含义-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义-2&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
clip 当内联内容溢出时，将溢出部分裁切掉。^ （默认值）

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
ellipsis 当内联内容溢出块容器时，将溢出部分替换为^ ...^ 。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;常用值如下-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用值如下-2&#34;&gt;#&lt;/a&gt; 常用值如下：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
注意：要使得 text-overflow 属性生效，块容器必须显式定义 overflow 为非 visible

值， white-space 为 nowrap 值。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
text-shadow: h-shadow v-shadow blur color;

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;7-4-文本修饰&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-4-文本修饰&#34;&gt;#&lt;/a&gt; 7. 4 文本修饰&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
CSS3升级了text-decoration属性，让其变成了复合属性。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;子属性及其含义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#子属性及其含义&#34;&gt;#&lt;/a&gt; 子属性及其含义：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
text-decoration-line 设置文本装饰线的位置

none： 指定文字无装饰 （默认值）

underline： 指定文字的装饰是下划线

overline： 指定文字的装饰是上划线

line-through： 指定文字的装饰是贯穿线

text-decoration-style 文本装饰线条的形状

solid： 实线 （默认）

double： 双线

dotted： 点状线条

dashed： 虚线

wavy： 波浪线

text-decoration-color 文本装饰线条的颜色

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;7-5-文本描边&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-5-文本描边&#34;&gt;#&lt;/a&gt; 7. 5 文本描边&lt;/h3&gt;
&lt;p&gt;注意：文字描边功能仅 webkit 内核浏览器支持。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;webkit-text-stroke-width：设置文字描边的宽度，写长度值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;webkit-text-stroke-color：设置文字描边的颜色，写颜色值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;webkit-text-stroke：复合属性，设置文字描边宽度和颜色。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;8-css-3-新增渐变&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-css-3-新增渐变&#34;&gt;#&lt;/a&gt; 8. CSS 3 新增渐变&lt;/h2&gt;
&lt;h3 id=&#34;8-1-线性渐变&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-1-线性渐变&#34;&gt;#&lt;/a&gt; 8. 1 线性渐变&lt;/h3&gt;
&lt;h5 id=&#34;多个颜色之间的渐变-默认-从上到下-渐变&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多个颜色之间的渐变-默认-从上到下-渐变&#34;&gt;#&lt;/a&gt; 多个颜色之间的渐变， 默认 从上到下 渐变。&lt;/h5&gt;
&lt;h5 id=&#34;使用关键词设置线性-渐变的方向&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用关键词设置线性-渐变的方向&#34;&gt;#&lt;/a&gt; 使用关键词设置线性 渐变的方向 。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
text-decoration: text-decoration-line || text-decoration-style || text-decoration-

color

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background-image: linear-gradient(red,yellow,green);

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;使用角度设置线性-渐变的方向&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用角度设置线性-渐变的方向&#34;&gt;#&lt;/a&gt; 使用角度设置线性 渐变的方向 。&lt;/h5&gt;
&lt;h5 id=&#34;调整开始-渐变的位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#调整开始-渐变的位置&#34;&gt;#&lt;/a&gt; 调整开始 渐变的位置 。&lt;/h5&gt;
&lt;h3 id=&#34;8-2-径向渐变&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-2-径向渐变&#34;&gt;#&lt;/a&gt; 8. 2 径向渐变&lt;/h3&gt;
&lt;h5 id=&#34;多个颜色之间的渐变-默认从圆心四散-注意不一定是正圆要看容器本身宽高比&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多个颜色之间的渐变-默认从圆心四散-注意不一定是正圆要看容器本身宽高比&#34;&gt;#&lt;/a&gt; 多个颜色之间的渐变， 默认从圆心四散。（注意：不一定是正圆，要看容器本身宽高比）&lt;/h5&gt;
&lt;h5 id=&#34;使用关键词调整渐变圆的圆心位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用关键词调整渐变圆的圆心位置&#34;&gt;#&lt;/a&gt; 使用关键词调整渐变圆的圆心位置。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
background-image: linear-gradient(to top,red,yellow,green);

background-image: linear-gradient(to right top,red,yellow,green);

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background-image: linear-gradient(30deg,red,yellow,green);

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background-image: linear-gradient(red 50px,yellow 100px ,green 150px);

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background-image: radial-gradient(red,yellow,green);

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;使用像素值调整渐变圆的圆心位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用像素值调整渐变圆的圆心位置&#34;&gt;#&lt;/a&gt; 使用像素值调整渐变圆的圆心位置。&lt;/h5&gt;
&lt;h5 id=&#34;调整渐变形状为正圆&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#调整渐变形状为正圆&#34;&gt;#&lt;/a&gt; 调整渐变形状为正圆 。&lt;/h5&gt;
&lt;h5 id=&#34;调整形状的半径&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#调整形状的半径&#34;&gt;#&lt;/a&gt; 调整形状的半径 。&lt;/h5&gt;
&lt;h5 id=&#34;调整开始渐变的位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#调整开始渐变的位置&#34;&gt;#&lt;/a&gt; 调整开始渐变的位置。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
background-image: radial-gradient(at right top,red,yellow,green);

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background-image: radial-gradient(at 100px 50px,red,yellow,green);

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background-image: radial-gradient(circle,red,yellow,green);

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background-image: radial-gradient(100px,red,yellow,green);

background-image: radial-gradient(50px 100px,red,yellow,green);

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
background-image: radial-gradient(red 50px,yellow 100px,green 150px);

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;83-重复渐变&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#83-重复渐变&#34;&gt;#&lt;/a&gt; 8.3 重复渐变&lt;/h3&gt;
&lt;h5 id=&#34;无论线性渐变还是径向渐变在没有发生渐变的位置继续进行渐变就为重复渐变&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#无论线性渐变还是径向渐变在没有发生渐变的位置继续进行渐变就为重复渐变&#34;&gt;#&lt;/a&gt; 无论线性渐变，还是径向渐变，在没有发生渐变的位置，继续进行渐变，就为重复渐变。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
使用repeating-linear-gradient进行重复线性渐变，具体参数同linear-gradient。

使用repeating-radial-gradient进行重复径向渐变，具体参数同radial-gradient。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
我们可以利用渐变，做出很多有意思的效果：例如：横格纸、立体球等等。

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;9-web-字体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9-web-字体&#34;&gt;#&lt;/a&gt; 9. web 字体&lt;/h2&gt;
&lt;h3 id=&#34;91-基本用法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#91-基本用法&#34;&gt;#&lt;/a&gt; 9.1 基本用法&lt;/h3&gt;
&lt;p&gt;可以通过 @font-face 指定字体的具体地址，浏览器会自动下载该字体，这样就不依赖用户电脑上的字&lt;/p&gt;
&lt;p&gt;体了。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
语法（简写方式）

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;语法高兼容性写法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法高兼容性写法&#34;&gt;#&lt;/a&gt; 语法（高兼容性写法）&lt;/h5&gt;
&lt;h3 id=&#34;92-定制字体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#92-定制字体&#34;&gt;#&lt;/a&gt; 9.2 定制字体&lt;/h3&gt;
&lt;h5 id=&#34;中文的字体文件很大使用完整的字体文件不现实通常针对某几个文字进行单独定制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#中文的字体文件很大使用完整的字体文件不现实通常针对某几个文字进行单独定制&#34;&gt;#&lt;/a&gt; 中文的字体文件很大，使用完整的字体文件不现实，通常针对某几个文字进行单独定制。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
可使用阿里Web字体定制工具： https://www.iconfont.cn/webfont

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;93-字体图标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#93-字体图标&#34;&gt;#&lt;/a&gt; 9.3 字体图标&lt;/h3&gt;
&lt;h5 id=&#34;相比图片更加清晰&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相比图片更加清晰&#34;&gt;#&lt;/a&gt; 相比图片更加清晰。&lt;/h5&gt;
&lt;h5 id=&#34;灵活性高更方便改变大小-颜色-风格等&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#灵活性高更方便改变大小-颜色-风格等&#34;&gt;#&lt;/a&gt; 灵活性高，更方便改变大小、颜色、风格等。&lt;/h5&gt;
&lt;h5 id=&#34;兼容性好ie也能支持&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#兼容性好ie也能支持&#34;&gt;#&lt;/a&gt; 兼容性好，IE 也能支持。&lt;/h5&gt;
&lt;h5 id=&#34;字体图标的具体使用方式每个平台不尽相同最好参考平台使用指南视频中我们是以使用最多&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体图标的具体使用方式每个平台不尽相同最好参考平台使用指南视频中我们是以使用最多&#34;&gt;#&lt;/a&gt; 字体图标的具体使用方式，每个平台不尽相同，最好参考平台使用指南，视频中我们是以使用最多&lt;/h5&gt;
&lt;h5 id=&#34;的阿里图标库作为演示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#的阿里图标库作为演示&#34;&gt;#&lt;/a&gt; 的阿里图标库作为演示。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
阿里图标官网地址： https://www.iconfont.cn/

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
@font-face &amp;#123;

font-family: &amp;quot;情书字体&amp;quot;;

src: url(&#39;./方正手迹.ttf&#39;);

&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
@font-face &amp;#123;

font-family: &amp;quot;atguigu&amp;quot;;

font-display: swap;

src: url(&#39;webfont.eot&#39;); /* IE9 */

src: url(&#39;webfont.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */

url(&#39;webfont.woff2&#39;) format(&#39;woff2&#39;),

url(&#39;webfont.woff&#39;) format(&#39;woff&#39;), /* chrome、firefox */

url(&#39;webfont.ttf&#39;) format(&#39;truetype&#39;), /* chrome、firefox、opera、Safari,

Android*/

url(&#39;webfont.svg#webfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */

&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;10-2-d变换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10-2-d变换&#34;&gt;#&lt;/a&gt; 10. 2 D 变换&lt;/h2&gt;
&lt;h5 id=&#34;前提二维坐标系如下图所示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前提二维坐标系如下图所示&#34;&gt;#&lt;/a&gt; 前提：二维坐标系如下图所示&lt;/h5&gt;
&lt;h3 id=&#34;10-1-2-d位移&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10-1-2-d位移&#34;&gt;#&lt;/a&gt; 10. 1. 2 D 位移&lt;/h3&gt;
&lt;h5 id=&#34;2d位移可以改变元素的位置具体使用方式如下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2d位移可以改变元素的位置具体使用方式如下&#34;&gt;#&lt;/a&gt; 2D 位移可以改变元素的位置，具体使用方式如下：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
1. 先给元素添加 转换属性 transform

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-含义-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义-3&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
translateX 设置水平方向位移，需指定长度值；若指定的是百分比，是参考自身宽度

的百分比。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
translateY

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;设置垂直方向位移需指定长度值若指定的是百分比是参考自身高度&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置垂直方向位移需指定长度值若指定的是百分比是参考自身高度&#34;&gt;#&lt;/a&gt; 设置垂直方向位移，需指定长度值；若指定的是百分比，是参考自身高度&lt;/h5&gt;
&lt;h5 id=&#34;的百分比&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#的百分比&#34;&gt;#&lt;/a&gt; 的百分比。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
translate 一个值代表水平方向，两个值代表：水平和垂直方向。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
2. 编写transform的具体值，相关可选值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;3-注意点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-注意点&#34;&gt;#&lt;/a&gt; 3. 注意点：&lt;/h5&gt;
&lt;h5 id=&#34;1-位移与相对定位很相似都不脱离文档流不会影响到其它元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-位移与相对定位很相似都不脱离文档流不会影响到其它元素&#34;&gt;#&lt;/a&gt; 1. 位移与相对定位很相似，都不脱离文档流，不会影响到其它元素。&lt;/h5&gt;
&lt;h5 id=&#34;2-与相对定位的区别相对定位的百分比值参考的是其父元素定位的百分比值参考的是&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-与相对定位的区别相对定位的百分比值参考的是其父元素定位的百分比值参考的是&#34;&gt;#&lt;/a&gt; 2. 与相对定位的区别：相对定位的百分比值，参考的是其父元素；定位的百分比值，参考的是&lt;/h5&gt;
&lt;h5 id=&#34;其自身&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其自身&#34;&gt;#&lt;/a&gt; 其自身。&lt;/h5&gt;
&lt;h5 id=&#34;3-浏览器针对位移有优化与定位相比浏览器处理位移的效率更高&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-浏览器针对位移有优化与定位相比浏览器处理位移的效率更高&#34;&gt;#&lt;/a&gt; 3. 浏览器针对位移有优化，与定位相比，浏览器处理位移的效率更高。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
4. transform可以链式编写，例如：

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;5-位移对行内元素无效&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-位移对行内元素无效&#34;&gt;#&lt;/a&gt; 5. 位移对行内元素无效。&lt;/h5&gt;
&lt;h5 id=&#34;6-位移配合定位可实现元素水平垂直居中&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-位移配合定位可实现元素水平垂直居中&#34;&gt;#&lt;/a&gt; 6. 位移配合定位，可实现元素水平垂直居中&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
transform: translateX(30px) translateY(40px);

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;10-2-2-d缩放&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10-2-2-d缩放&#34;&gt;#&lt;/a&gt; 10. 2. 2 D 缩放&lt;/h3&gt;
&lt;h5 id=&#34;2d缩放是指让元素放大或缩小具体使用方式如下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2d缩放是指让元素放大或缩小具体使用方式如下&#34;&gt;#&lt;/a&gt; 2D 缩放是指：让元素放大或缩小，具体使用方式如下：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
1. 先给元素添加 转换属性 transform

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-含义-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义-4&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
scaleX

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;设置水平方向的缩放比例值为一个数字-1-表示不缩放大于-1-放大小&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置水平方向的缩放比例值为一个数字-1-表示不缩放大于-1-放大小&#34;&gt;#&lt;/a&gt; 设置水平方向的缩放比例，值为一个数字， 1 表示不缩放，大于 1 放大，小&lt;/h5&gt;
&lt;h5 id=&#34;于-1-缩小&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#于-1-缩小&#34;&gt;#&lt;/a&gt; 于 1 缩小。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
scaleY 设置垂直方向的缩放比例，值为一个数字，^1 表示不缩放，大于^1 放大，小

于 1 缩小。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
scale

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;同时设置水平方向-垂直方向的缩放比例一个值代表同时设置水平和垂直缩&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#同时设置水平方向-垂直方向的缩放比例一个值代表同时设置水平和垂直缩&#34;&gt;#&lt;/a&gt; 同时设置水平方向、垂直方向的缩放比例，一个值代表同时设置水平和垂直缩&lt;/h5&gt;
&lt;h5 id=&#34;放两个值分别代表水平缩放-垂直缩放&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#放两个值分别代表水平缩放-垂直缩放&#34;&gt;#&lt;/a&gt; 放；两个值分别代表：水平缩放、垂直缩放。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
2. 编写transform的具体值，相关可选值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;3-注意点-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-注意点-2&#34;&gt;#&lt;/a&gt; 3. 注意点：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
1. scale的值，是支持写负数的，但几乎不用，因为容易让人产生误解。

2. 借助缩放，可实现小于12px的文字。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;10-3-2-d旋转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10-3-2-d旋转&#34;&gt;#&lt;/a&gt; 10. 3. 2 D 旋转&lt;/h3&gt;
&lt;h5 id=&#34;2d旋转是指让元素在二维平面内顺时针旋转或逆时针旋转具体使用方式如下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2d旋转是指让元素在二维平面内顺时针旋转或逆时针旋转具体使用方式如下&#34;&gt;#&lt;/a&gt; 2D 旋转是指：让元素在二维平面内，顺时针旋转或逆时针旋转，具体使用方式如下：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
1. 先给元素添加 转换属性 transform

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-含义-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义-5&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
rotate 设置旋转角度，需指定一个角度值(deg)，正值顺时针，负值逆时针。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
2. 编写transform的具体值，相关可选值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
注意：rotateZ(20deg) 相当于 rotate(20deg)，当然到了3D变换的时候，还能写：

rotate(x,x,x)

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
.box &amp;#123;

position: absolute;

left: 50%;

top: 50%;

transform: translate(-50%, -50%);

&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;10-4-2-d扭曲了解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10-4-2-d扭曲了解&#34;&gt;#&lt;/a&gt; 10. 4. 2 D 扭曲（了解）&lt;/h3&gt;
&lt;h5 id=&#34;2d扭曲是指让元素在二维平面内被拉扯进而走形实际开发几乎不用了解即可具体使用方&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2d扭曲是指让元素在二维平面内被拉扯进而走形实际开发几乎不用了解即可具体使用方&#34;&gt;#&lt;/a&gt; 2D 扭曲是指：让元素在二维平面内被 “拉扯”，进而 “走形”，实际开发几乎不用，了解即可，具体使用方&lt;/h5&gt;
&lt;h5 id=&#34;式如下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#式如下&#34;&gt;#&lt;/a&gt; 式如下：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
1. 先给元素添加 转换属性 transform

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-含义-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义-6&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
skewX 设置元素在水平方向扭曲，值为角度值，会将元素的左上角、右下角拉扯。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
skewY 设置元素在垂直方向扭曲，值为角度值，会将元素的左上角、右下角拉扯。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
skew 一个值代表skewX，两个值分别代表：skewX、skewY

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
2. 编写transform的具体值，相关可选值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;10-5-多重变换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10-5-多重变换&#34;&gt;#&lt;/a&gt; 10. 5. 多重变换&lt;/h3&gt;
&lt;p&gt;多个变换，可以同时使用一个 transform 来编写。&lt;/p&gt;
&lt;h5 id=&#34;注意点多重变换时建议最后旋转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意点多重变换时建议最后旋转&#34;&gt;#&lt;/a&gt; 注意点：多重变换时，建议最后旋转。&lt;/h5&gt;
&lt;h3 id=&#34;10-6-变换原点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10-6-变换原点&#34;&gt;#&lt;/a&gt; 10. 6. 变换原点&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
元素变换时，默认的原点是元素的中心，使用transform-origin可以设置变换的原点。

修改变换原点对位移没有影响， 对旋转和缩放会产生影响。

如果提供两个值，第一个用于横坐标，第二个用于纵坐标。

如果只提供一个，若是像素值，表示横坐标，纵坐标取50%；若是关键词，则另一个坐标取50%

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. transform-origin: 50% 50%， 变换原点在元素的中心位置，百分比是相对于自

身。—— 默认值

2. transform-origin: left top，变换原点在元素的左上角 。

3. transform-origin: 50px 50px， 变换原点距离元素左上角 50px 50px 的位置。

4. transform-origin: 0，只写一个值的时候，第二个值默认为 50%。

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;11-3-d变换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-3-d变换&#34;&gt;#&lt;/a&gt; 11. 3 D 变换&lt;/h2&gt;
&lt;h3 id=&#34;11-1-开启-3-d空间&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-1-开启-3-d空间&#34;&gt;#&lt;/a&gt; 11. 1. 开启 3 D 空间&lt;/h3&gt;
&lt;h5 id=&#34;重要原则元素进行3d变换的首要操作-父元素-必须开启3d空间&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#重要原则元素进行3d变换的首要操作-父元素-必须开启3d空间&#34;&gt;#&lt;/a&gt; 重要原则：元素进行 3D 变换的首要操作： 父元素 必须开启 3D 空间！&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
使用transform-style开启3D空间，可选值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
flat： 让子元素位于此元素的二维平面内（2D空间）—— 默认值

preserve-3d： 让子元素位于此元素的三维空间内（3D空间）

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
transform: translate(-50%, -50%) rotate(45deg);

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;11-2-设置景深&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-2-设置景深&#34;&gt;#&lt;/a&gt; 11. 2. 设置景深&lt;/h3&gt;
&lt;p&gt;何为景深？—— 指定观察者与 z=0 平面的距离，能让发生 3D 变换的元素，产生透视效果，看来更加立&lt;/p&gt;
&lt;p&gt;体。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
使用perspective设置景深，可选值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
none： 不指定透视 ——（默认值）

长度值 ： 指定观察者距离z=0平面的距离，不允许负值。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
注意：perspective设置给发生3D变换元素的父元素！

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;11-3-透视点位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-3-透视点位置&#34;&gt;#&lt;/a&gt; 11. 3. 透视点位置&lt;/h3&gt;
&lt;h5 id=&#34;所谓透视点位置就是观察者位置默认的透视点在元素的中心&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#所谓透视点位置就是观察者位置默认的透视点在元素的中心&#34;&gt;#&lt;/a&gt; 所谓透视点位置，就是观察者位置；默认的透视点在元素的中心。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
使用perspective-origin设置观察者位置（透视点的位置），例如：

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;注意通常情况下我们不需要调整透视点位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意通常情况下我们不需要调整透视点位置&#34;&gt;#&lt;/a&gt; 注意：通常情况下，我们不需要调整透视点位置。&lt;/h5&gt;
&lt;h3 id=&#34;11-4-3-d-位移&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-4-3-d-位移&#34;&gt;#&lt;/a&gt; 11. 4. 3 D 位移&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
3D位移是在2D位移的基础上，可以让元素沿z轴位移，具体使用方式如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. 先给元素添加 转换属性 transform

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-含义-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义-7&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
translateZ

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
设置z轴位移，需指定长度值，正值向屏幕外，负值向屏幕里，且不能

写百分比。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
translate3d 第^1 个参数对应x轴，第^2 个参数对应y轴，第^3 个参数对应z轴，且均

不能省略。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
2. 编写transform的具体值，3D相关可选值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;11-5-3-d-旋转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-5-3-d-旋转&#34;&gt;#&lt;/a&gt; 11. 5. 3 D 旋转&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
3D旋转是在2D旋转的基础上，可以让元素沿x轴和y轴旋转，具体使用方式如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. 先给元素添加 转换属性 transform

2. 编写transform的具体值，3D相关可选值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
/* 相对坐标轴往右偏移400px， 往下偏移300px（相当于人蹲下 300 像素，然后向右移动 400 像素看元素）

*/

perspective-origin: 400px 300px;

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-含义-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义-8&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
rotateX

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
设置x轴旋转角度，需指定一个角度值(deg)，面对x轴正方向：正值顺时针，负

值逆时针。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
rotateY 设置y轴旋转角度，需指定一个角度值(deg)，面对y轴正方向：正值顺时针，负

值逆时针。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
rotate3d

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
前 3 个参数分别表示坐标轴：x,y,z，第 4 个参数表示旋转的角度，参数不允

许省略。

例如：transform: rotate3d(1,1,1,30deg)，意思是：x、y、z分别旋转

30 度。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;11-6-3-d-缩放&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-6-3-d-缩放&#34;&gt;#&lt;/a&gt; 11. 6. 3 D 缩放&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
3D缩放是在2D缩放的基础上，可以让元素沿z轴缩放，具体使用方式如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. 先给元素添加 转换属性 transform

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-含义-9&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义-9&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
scaleZ

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
设置z轴方向的缩放比例，值为一个数字， 1 表示不缩放，大于 1 放大，小

于 1 缩小。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
scale3d 第^1 个参数对应x轴，第^2 个参数对应y轴，第^3 个参数对应z轴，参数不允许

省略。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
2. 编写transform的具体值，3D相关可选值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;11-7-多重变换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-7-多重变换&#34;&gt;#&lt;/a&gt; 11. 7. 多重变换&lt;/h3&gt;
&lt;p&gt;多个变换，可以同时使用一个 transform 来编写。&lt;/p&gt;
&lt;h5 id=&#34;注意点多重变换时建议最后旋转-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意点多重变换时建议最后旋转-2&#34;&gt;#&lt;/a&gt; 注意点：多重变换时，建议最后旋转。&lt;/h5&gt;
&lt;h3 id=&#34;11-8-背部可见性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-8-背部可见性&#34;&gt;#&lt;/a&gt; 11. 8. 背部可见性&lt;/h3&gt;
&lt;p&gt;使用 backface-visibility 指定元素背面，在面向用户时是否可见，常用值如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
visible： 指定元素背面可见，允许显示正面的镜像。—— 默认值

hidden： 指定元素背面不可见

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
注意：backface-visibility需要加在发生3D变换元素的自身上。

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;12-过渡&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-过渡&#34;&gt;#&lt;/a&gt; 12. 过渡&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;
transform: translateZ(100px) scaleZ( 3 ) rotateY(40deg);

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;过渡可以在不使用 Flash 动画，不使用 JavaScript 的情况下，让元素从一种样式，平滑过渡为另一&lt;/p&gt;
&lt;p&gt;种样式。&lt;/p&gt;
&lt;h3 id=&#34;121-transition-property&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#121-transition-property&#34;&gt;#&lt;/a&gt; 12.1. transition-property&lt;/h3&gt;
&lt;h5 id=&#34;作用定义哪个属性需要过渡只有在该属性中定义的属性比如宽-高-颜色等才会以有过渡&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#作用定义哪个属性需要过渡只有在该属性中定义的属性比如宽-高-颜色等才会以有过渡&#34;&gt;#&lt;/a&gt; 作用：定义哪个属性需要过渡，只有在该属性中定义的属性（比如宽、高、颜色等）才会以有过渡&lt;/h5&gt;
&lt;h5 id=&#34;效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#效果&#34;&gt;#&lt;/a&gt; 效果。&lt;/h5&gt;
&lt;h5 id=&#34;常用值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用值&#34;&gt;#&lt;/a&gt; 常用值：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
1. none：不过渡任何属性。

2. all：过渡所有能过渡的属性。

3. 具体某个属性名，例如：width、heigth，若有多个以逗号分隔。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;不是所有的属性都能过渡值为数字或者值能转为数字的属性都支持过渡否则不支持&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不是所有的属性都能过渡值为数字或者值能转为数字的属性都支持过渡否则不支持&#34;&gt;#&lt;/a&gt; 不是所有的属性都能过渡，值为数字，或者值能转为数字的属性，都支持过渡，否则不支持&lt;/h5&gt;
&lt;h5 id=&#34;过渡&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过渡&#34;&gt;#&lt;/a&gt; 过渡。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
常见的支持过渡的属性有：颜色、长度值、百分比、z-index、opacity、2D变换属

性、3D变换属性、阴影。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;122-transition-duration&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#122-transition-duration&#34;&gt;#&lt;/a&gt; 12.2. transition-duration&lt;/h3&gt;
&lt;h5 id=&#34;作用设置过渡的持续时间即一个状态过渡到另外一个状态耗时多久&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#作用设置过渡的持续时间即一个状态过渡到另外一个状态耗时多久&#34;&gt;#&lt;/a&gt; 作用：设置过渡的持续时间，即：一个状态过渡到另外一个状态耗时多久。&lt;/h5&gt;
&lt;h5 id=&#34;常用值-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用值-2&#34;&gt;#&lt;/a&gt; 常用值：&lt;/h5&gt;
&lt;h5 id=&#34;1-0-没有任何过渡时间-默认值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-0-没有任何过渡时间-默认值&#34;&gt;#&lt;/a&gt; 1. 0 ：没有任何过渡时间 —— 默认值。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
2. s或ms：秒或毫秒。

3. 列表：

如果想让所有属性都持续一个时间，那就写一个值。

如果想让每个属性持续不同的时间那就写一个时间的列表。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;123-transition-delay&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#123-transition-delay&#34;&gt;#&lt;/a&gt; 12.3. transition-delay&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
作用：指定开始过渡的延迟时间，单位：s或ms

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;124-transition-timing-function&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#124-transition-timing-function&#34;&gt;#&lt;/a&gt; 12.4. transition-timing-function&lt;/h3&gt;
&lt;h5 id=&#34;作用设置过渡的类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#作用设置过渡的类型&#34;&gt;#&lt;/a&gt; 作用：设置过渡的类型&lt;/h5&gt;
&lt;h5 id=&#34;常用值-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用值-3&#34;&gt;#&lt;/a&gt; 常用值：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
1. ease： 平滑过渡 —— 默认值

2. linear： 线性过渡

3. ease-in： 慢 → 快

4. ease-out： 快 → 慢

5. ease-in-out： 慢 → 快 → 慢

6. step-start： 等同于 steps(1, start)

7. step-end： 等同于 steps(1, end)

8. steps( integer,?)： 接受两个参数的步进函数。第一个参数必须为正整数，指定函数的

步数。第二个参数取值可以是start或end，指定每一步的值发生变化的时间点。第二个

参数默认值为end。

9. cubic-bezie( number, number, number, number)： 特定的贝塞尔曲线类型。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
在线制作贝赛尔曲线： https://cubic-bezier.com

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;12-5-transition-复合属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-5-transition-复合属性&#34;&gt;#&lt;/a&gt; 12. 5. transition 复合属性&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
如果设置了一个时间，表示duration；如果设置了两个时间，第一是duration，第二个是

delay；其他值没有顺序要求。

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;13-动画&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-动画&#34;&gt;#&lt;/a&gt; 13. 动画&lt;/h2&gt;
&lt;h3 id=&#34;13-1-什么是帧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-1-什么是帧&#34;&gt;#&lt;/a&gt; 13. 1. 什么是帧&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
一段动画，就是一段时间内连续播放n个画面。每一张画面，我们管它叫做“帧”。一定时间内连续

快速播放若干个帧，就成了人眼中所看到的动画。同样时间内，播放的帧数越多，画面看起来越流

畅。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;13-2-什么是关键帧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-2-什么是关键帧&#34;&gt;#&lt;/a&gt; 13. 2. 什么是关键帧&lt;/h3&gt;
&lt;h5 id=&#34;关键帧指的是在构成一段动画的若干帧中起到决定性作用的-2-3-帧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关键帧指的是在构成一段动画的若干帧中起到决定性作用的-2-3-帧&#34;&gt;#&lt;/a&gt; 关键帧指的是，在构成一段动画的若干帧中，起到决定性作用的 2 - 3 帧。&lt;/h5&gt;
&lt;h3 id=&#34;13-3-动画的基本使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-3-动画的基本使用&#34;&gt;#&lt;/a&gt; 13. 3. 动画的基本使用&lt;/h3&gt;
&lt;h5 id=&#34;第一步定义关键帧定义动画&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一步定义关键帧定义动画&#34;&gt;#&lt;/a&gt; 第一步：定义关键帧（定义动画）&lt;/h5&gt;
&lt;h5 id=&#34;1-简单方式定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-简单方式定义&#34;&gt;#&lt;/a&gt; 1. 简单方式定义：&lt;/h5&gt;
&lt;h5 id=&#34;2-完整方式定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-完整方式定义&#34;&gt;#&lt;/a&gt; 2. 完整方式定义：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
transition:1s 1s linear all;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
/*写法一*/

@keyframes 动画名 &amp;#123;

from &amp;#123;

/*property1:value1*/

/*property2:value2*/

&amp;#125;

to &amp;#123;

/*property1:value1*/

&amp;#125;

&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;第二步给元素应用动画用到的属性如下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二步给元素应用动画用到的属性如下&#34;&gt;#&lt;/a&gt; 第二步：给元素应用动画，用到的属性如下：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
1. animation-name：给元素指定具体的动画（具体的关键帧）

2. animation-duration：设置动画所需时间

3. animation-delay：设置动画延迟

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;4-动画的其他属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-动画的其他属性&#34;&gt;#&lt;/a&gt; 4. 动画的其他属性&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
animation-timing-function，设置动画的类型，常用值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. ease： 平滑动画 —— 默认值

2. linear： 线性过渡

3. ease-in： 慢 → 快

4. ease-out： 快 → 慢

5. ease-in-out： 慢 → 快 → 慢

6. step-start： 等同于 steps(1, start)

7. step-end： 等同于 steps(1, end)

8. steps( integer,?)： 接受两个参数的步进函数。第一个参数必须为正整数，指定

函数的步数。第二个参数取值可以是start或end，指定每一步的值发生变化的时间

点。第二个参数默认值为end。

9. cubic-bezie( number, number, number, number)： 特定的贝塞尔曲线类型。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
animation-iteration-count，指定动画的播放次数，常用值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
@keyframes 动画名 &amp;#123;

0% &amp;#123;

/*property1:value1*/

&amp;#125;

20% &amp;#123;

/*property1:value1*/

&amp;#125;

40% &amp;#123;

/*property1:value1*/

&amp;#125;

60% &amp;#123;

/*property1:value1*/

&amp;#125;

80% &amp;#123;

/*property1:value1*/

&amp;#125;

100% &amp;#123;

/*property1:value1*/

&amp;#125;

&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
.box &amp;#123;

/* 指定动画 */

animation-name: testKey;

/* 设置动画所需时间 */

animation-duration: 5s;

/* 设置动画延迟 */

animation-delay: 0.5s;

&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. number：动画循环次数

2. infinite： 无限循环

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
animation-direction，指定动画方向，常用值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. normal： 正常方向 (默认)

2. reverse： 反方向运行

3. alternate： 动画先正常运行再反方向运行，并持续交替运行

4. alternate-reverse： 动画先反运行再正方向运行，并持续交替运行

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
animation-fill-mode，设置动画之外的状态

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. forwards： 设置对象状态为动画结束时的状态

2. backwards： 设置对象状态为动画开始时的状态

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
animation-play-state，设置动画的播放状态，常用值如下：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. running： 运动 (默认)

2. paused： 暂停

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;5-动画复合属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-动画复合属性&#34;&gt;#&lt;/a&gt; 5. 动画复合属性&lt;/h3&gt;
&lt;p&gt;只设置一个时间表示 duration，设置两个时间分别是： duration 和 delay，其他属性没有数量和&lt;/p&gt;
&lt;p&gt;顺序要求。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
备注：animation-play-state一般单独使用。

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;14-多列布局&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14-多列布局&#34;&gt;#&lt;/a&gt; 14. 多列布局&lt;/h2&gt;
&lt;h5 id=&#34;作用专门用于实现类似于报纸的布局&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#作用专门用于实现类似于报纸的布局&#34;&gt;#&lt;/a&gt; 作用：专门用于实现类似于报纸的布局。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
.inner &amp;#123;

animation: atguigu 3s 0.5s linear 2 alternate-reverse forwards;

&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;常用属性如下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用属性如下&#34;&gt;#&lt;/a&gt; 常用属性如下：&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
column-count ：指定列数，值是数字。

column-width ：指定列宽，值是长度。

columns ：同时指定列宽和列数，复合属性；值没有数量和顺序要求。

column-gap ：设置列边距，值是长度。

column-rule-style ：设置列与列之间边框的风格，值与 border-style 一致。

column-rule-width ：设置列与列之间边框的宽度，值是长度。

column-rule-color ：设置列与列之间边框的颜色。

coumn-rule ：设置列边框，复合属性。

column-span 指定是否跨列；值: none、all。

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;15-伸缩盒模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15-伸缩盒模型&#34;&gt;#&lt;/a&gt; 15 . 伸缩盒模型&lt;/h2&gt;
&lt;h3 id=&#34;1-伸缩盒模型简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-伸缩盒模型简介&#34;&gt;#&lt;/a&gt; 1. 伸缩盒模型简介&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
2009 年，W3C 提出了一种新的盒子模型 —— Flexible Box （伸缩盒模型，又称：弹性盒

子）。

它可以轻松的控制：元素分布方式、元素对齐方式、元素视觉顺序 .......

截止目前，除了在部分IE浏览器不支持，其他浏览器均已全部支持。

伸缩盒模型的出现，逐渐演变出了一套新的布局方案 —— flex布局。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
小贴士：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. 传统布局是指：基于传统盒状模型，主要靠： display 属性 + position 属性 + float

属性。

2. flex布局目前在移动端应用比较广泛，因为传统布局不能很好的呈现在移动设备上。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-伸缩容器-伸缩项目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-伸缩容器-伸缩项目&#34;&gt;#&lt;/a&gt; 2. 伸缩容器、伸缩项目&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
伸缩容器 ： 开启了 flex 的元素，就是：伸缩容器。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. 给元素设置： display:flex 或 display:inline-flex，该元素就变为了伸缩容

器。

2. display:inline-flex很少使用，因为可以给多个伸缩容器的父容器，也设置为伸缩

容器。

3. 一个元素可以同时是：伸缩容器、伸缩项目。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;伸缩项目-伸缩容器所有-子元素-自动成为了伸缩项目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#伸缩项目-伸缩容器所有-子元素-自动成为了伸缩项目&#34;&gt;#&lt;/a&gt; 伸缩项目 ：伸缩容器所有 子元素 自动成为了：伸缩项目。&lt;/h5&gt;
&lt;h5 id=&#34;1-仅伸缩容器的-子元素-成为了伸缩项目孙子元素-重孙子元素等后代不是伸缩项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-仅伸缩容器的-子元素-成为了伸缩项目孙子元素-重孙子元素等后代不是伸缩项&#34;&gt;#&lt;/a&gt; 1. 仅伸缩容器的 子元素 成为了伸缩项目，孙子元素、重孙子元素等后代，不是伸缩项&lt;/h5&gt;
&lt;h5 id=&#34;目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目&#34;&gt;#&lt;/a&gt; 目。&lt;/h5&gt;
&lt;h5 id=&#34;2-无论原来是哪种元素块-行内块-行内一旦成为了伸缩项目全都会块状化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-无论原来是哪种元素块-行内块-行内一旦成为了伸缩项目全都会块状化&#34;&gt;#&lt;/a&gt; 2. 无论原来是哪种元素（块、行内块、行内），一旦成为了伸缩项目，全都会 “块状化”。&lt;/h5&gt;
&lt;h3 id=&#34;3-主轴与侧轴&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-主轴与侧轴&#34;&gt;#&lt;/a&gt; 3. 主轴与侧轴&lt;/h3&gt;
&lt;h5 id=&#34;主轴-伸缩项目沿着主轴排列主轴默认是水平的默认方向是从左到右左边是起点右边&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主轴-伸缩项目沿着主轴排列主轴默认是水平的默认方向是从左到右左边是起点右边&#34;&gt;#&lt;/a&gt; 主轴： 伸缩项目沿着主轴排列，主轴默认是水平的，默认方向是：从左到右（左边是起点，右边&lt;/h5&gt;
&lt;h5 id=&#34;是终点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#是终点&#34;&gt;#&lt;/a&gt; 是终点）。&lt;/h5&gt;
&lt;h5 id=&#34;侧轴-与主轴垂直的就是侧轴侧轴默认是垂直的默认方向是从上到下上边是起点下边&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#侧轴-与主轴垂直的就是侧轴侧轴默认是垂直的默认方向是从上到下上边是起点下边&#34;&gt;#&lt;/a&gt; 侧轴： 与主轴垂直的就是侧轴，侧轴默认是垂直的，默认方向是：从上到下（上边是起点，下边&lt;/h5&gt;
&lt;h5 id=&#34;是终点-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#是终点-2&#34;&gt;#&lt;/a&gt; 是终点）。&lt;/h5&gt;
&lt;h3 id=&#34;4-主轴方向&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-主轴方向&#34;&gt;#&lt;/a&gt; 4. 主轴方向&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
属性名：flex-direction

常用值如下：

1. row ：主轴方向水平从左到右 —— 默认值

2. row-reverse ：主轴方向水平从右到左。

3. column：主轴方向垂直从上到下。

4. column-reverse：主轴方向垂直从下到上。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;注意改变了主轴的方向侧轴方向也随之改变&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意改变了主轴的方向侧轴方向也随之改变&#34;&gt;#&lt;/a&gt; 注意：改变了主轴的方向，侧轴方向也随之改变。&lt;/h5&gt;
&lt;h3 id=&#34;5-主轴换行方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-主轴换行方式&#34;&gt;#&lt;/a&gt; 5. 主轴换行方式&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
属性名：flex-wrap

常用值如下：

1. nowrap：默认值，不换行。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
2. wrap：自动换行，伸缩容器不够自动换行。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
3. wrap-reverse：反向换行。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;6-flex-flow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-flex-flow&#34;&gt;#&lt;/a&gt; 6. flex-flow&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
flex-flow是一个复合属性，复合了 flex-direction 和 flex-wrap 两个属性。 值没有顺序要

求。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;7-主轴对齐方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-主轴对齐方式&#34;&gt;#&lt;/a&gt; 7. 主轴对齐方式&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
属性名：justify-content

常用值如下：

1. flex-start：主轴起点对齐。—— 默认值

2. flex-end：主轴终点对齐。

3. center：居中对齐

4. space-between：均匀分布，两端对齐（最常用）。

5. space-around：均匀分布，两端距离是中间距离的一半。

6. space-evenly ：均匀分布，两端距离与中间距离一致。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
flex-flow: row wrap;

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;8-侧轴对齐方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-侧轴对齐方式&#34;&gt;#&lt;/a&gt; 8. 侧轴对齐方式&lt;/h3&gt;
&lt;h4 id=&#34;8-1-一行的情况&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-1-一行的情况&#34;&gt;#&lt;/a&gt; 8. 1 一行的情况&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
所需属性：align-items

常用值如下：

1. flex-start：侧轴的起点对齐。

2. flex-end：侧轴的终点对齐。

3. center：侧轴的中点对齐。

4. baseline: 伸缩项目的第一行文字的基线对齐。

5. stretch：如果伸缩项目未设置高度，将占满整个容器的高度。—— （默认值）

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;8-2-多行的情况&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-2-多行的情况&#34;&gt;#&lt;/a&gt; 8. 2 多行的情况&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
所需属性：align-content

常用值如下：

1. flex-start：与侧轴的起点对齐。

2. flex-end：与侧轴的终点对齐。

3. center：与侧轴的中点对齐。

4. space-between：与侧轴两端对齐，中间平均分布。

5. space-around：伸缩项目间的距离相等，比距边缘大一倍。

6. space-evenly: 在侧轴上完全平分。

7. stretch：占满整个侧轴。—— 默认值

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;9flex-实现水平垂直居中&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9flex-实现水平垂直居中&#34;&gt;#&lt;/a&gt; 9.flex 实现水平垂直居中&lt;/h3&gt;
&lt;p&gt;方法一：父容器开启 flex 布局，随后使用 justify-content 和 align-items 实现水平垂直居中&lt;/p&gt;
&lt;p&gt;方法二：父容器开启 flex 布局，随后子元素 margin: auto&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.outer&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 400px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 400px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #888&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;justify-content&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;align-items&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.inner&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; orange&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;10-伸缩性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10-伸缩性&#34;&gt;#&lt;/a&gt; 10. 伸缩性&lt;/h3&gt;
&lt;h4 id=&#34;1-flex-basis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-flex-basis&#34;&gt;#&lt;/a&gt; 1. flex-basis&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
概念：flex-basis设置的是主轴方向的 基准长度 ，会让宽度或高度失效。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;备注主轴横向宽度失效主轴纵向高度失效&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#备注主轴横向宽度失效主轴纵向高度失效&#34;&gt;#&lt;/a&gt; 备注：主轴横向：宽度失效；主轴纵向：高度失效&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
作用：浏览器根据这个属性设置的值，计算主轴上是否有多余空间，默认值auto，即：伸缩项目

的宽或高。

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;2-flex-grow伸&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-flex-grow伸&#34;&gt;#&lt;/a&gt; 2. flex-grow（伸）&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
概念：flex-grow 定义伸缩项目的放大比例，默认为 0 ，即：纵使主轴存在剩余空间，也不拉伸

（放大）。

规则：

1. 若所有伸缩项目的 flex-grow 值都为 1 ，则：它们将等分剩余空间（如果有空间的话）。

2. 若三个伸缩项目的flex-grow值分别为： 1 、 2 、 3 ，则：分别瓜分到：1/6、2/6、

3/6的空间。

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;3-flex-shrink缩&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-flex-shrink缩&#34;&gt;#&lt;/a&gt; 3. flex-shrink（缩）&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
概念：flex-shrink定义了项目的压缩比例，默认为 1 ，即：如果空间不足，该项目将会缩小。

收缩项目的计算，略微复杂一点，我们拿一个场景举例：

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;例如&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例如&#34;&gt;#&lt;/a&gt; 例如：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
三个收缩项目，宽度分别为：200px、300px、200px，它们的flex-shrink值分别

为： 1 、 2 、 3

若想刚好容纳下三个项目，需要总宽度为700px，但目前容器只有400px，还差300px

所以每个人都要收缩一下才可以放下，具体收缩的值，这样计算：

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
1. 计算分母：(200×1) + (300×2) + (200×3) = 1400

2. 计算比例：

项目一：(200×1) / 1400 = 比例值 1

项目二：(300×2) / 1400 = 比例值 2

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
.outer &amp;#123;

width: 400px;

height: 400px;

background-color: #888;

display: flex;

&amp;#125;

.inner &amp;#123;

width: 100px;

height: 100px;

background-color: orange;

margin: auto;

&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-含义-10&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义-10&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
all 检测所有设备。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
screen 检测电子屏幕，包括：电脑屏幕、平板屏幕、手机屏幕等。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
print 检测打印机。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
aural 已废弃，用于语音和声音合成器。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
braille 已废弃，应用于盲文触摸式反馈设备。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
embossed 已废弃， 用于打印的盲人印刷设备。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
handheld 已废弃， 用于掌上设备或更小的装置，如PDA和小型电话。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
projection 已废弃， 用于投影设备。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
tty 已废弃， 用于固定的字符网格，如电报、终端设备和对字符有限制的便携设备。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
tv 已废弃， 用于电视和网络电视。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;项目三2003-1400-比例值-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#项目三2003-1400-比例值-3&#34;&gt;#&lt;/a&gt; 项目三：(200×3) / 1400 = 比例值 3&lt;/h5&gt;
&lt;h5 id=&#34;3-计算最终收缩大小&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-计算最终收缩大小&#34;&gt;#&lt;/a&gt; 3. 计算最终收缩大小：&lt;/h5&gt;
&lt;h5 id=&#34;项目一需要收缩比例值1-300&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#项目一需要收缩比例值1-300&#34;&gt;#&lt;/a&gt; 项目一需要收缩：比例值 1 × 300&lt;/h5&gt;
&lt;h5 id=&#34;项目二需要收缩比例值2-300&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#项目二需要收缩比例值2-300&#34;&gt;#&lt;/a&gt; 项目二需要收缩：比例值 2 × 300&lt;/h5&gt;
&lt;h5 id=&#34;项目三需要收缩比例值3-300&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#项目三需要收缩比例值3-300&#34;&gt;#&lt;/a&gt; 项目三需要收缩：比例值 3 × 300&lt;/h5&gt;
&lt;h3 id=&#34;11-flex复合属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-flex复合属性&#34;&gt;#&lt;/a&gt; 11. flex 复合属性&lt;/h3&gt;
&lt;p&gt;flex 是复合属性，复合了： flex-grow 、 flex-shrink 、flex-basis 三个属性，默认值为 0 1&lt;/p&gt;
&lt;p&gt;auto。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
如果写 flex:1 1 auto ，则可简写为： flex:auto

如果写 flex:1 1 0 ，则可简写为： flex:1

如果写 flex:0 0 auto ，则可简写为：flex:none

如果写 flex:0 1 auto ，则可简写为： flex:0 auto —— 即 flex 初始值。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;12-项目排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-项目排序&#34;&gt;#&lt;/a&gt; 12. 项目排序&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
order属性定义项目的排列顺序。数值越小，排列越靠前，默认为 0 。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;13-单独对齐&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-单独对齐&#34;&gt;#&lt;/a&gt; 13. 单独对齐&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
通过align-self 属性，可以单独调整某个伸缩项目的对齐方式

默认值为 auto，表示继承父元素的 align-items 属性。

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;16-响应式布局&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#16-响应式布局&#34;&gt;#&lt;/a&gt; 16. 响应式布局&lt;/h2&gt;
&lt;h3 id=&#34;媒体查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#媒体查询&#34;&gt;#&lt;/a&gt; 媒体查询&lt;/h3&gt;
&lt;h4 id=&#34;11-媒体类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-媒体类型&#34;&gt;#&lt;/a&gt; 1.1 媒体类型&lt;/h4&gt;
&lt;h5 id=&#34;值-含义-11&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义-11&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
width 检测视口 宽度 。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
max-width 检测视口 最大宽度 。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
min-width 检测视口 最小宽度 。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
height 检测视口 高度 。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
max-height 检测视口 最大高度 。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
min-height 检测视口 最小高度 。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
device-width 检测设备 屏幕的宽度 。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
max-device-width 检测设备 屏幕的最大宽度 。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
min-device-width 检测设备 屏幕的最小宽度 。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
orientation

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;检测-视口的旋转方向-是否横屏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#检测-视口的旋转方向-是否横屏&#34;&gt;#&lt;/a&gt; 检测 视口的旋转方向 （是否横屏）。&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
1. portrait：视口处于纵向，即高度大于等于宽度。

2. landscape：视口处于横向，即宽度大于高度。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;值-含义-12&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#值-含义-12&#34;&gt;#&lt;/a&gt; 值 含义&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
and 并且

, 或 or 或

not 否定

only 肯定

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完整列表请参考：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;12-媒体特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-媒体特性&#34;&gt;#&lt;/a&gt; 1.2 媒体特性&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
完整列表请参考： https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;13-运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-运算符&#34;&gt;#&lt;/a&gt; 1.3 运算符&lt;/h4&gt;
&lt;h4 id=&#34;14-常用阈值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14-常用阈值&#34;&gt;#&lt;/a&gt; 1.4 常用阈值&lt;/h4&gt;
&lt;h5 id=&#34;在实际开发中会将屏幕划分成几个区间例如&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在实际开发中会将屏幕划分成几个区间例如&#34;&gt;#&lt;/a&gt; 在实际开发中，会将屏幕划分成几个区间，例如：&lt;/h5&gt;
&lt;h4 id=&#34;15-结合外部样式的用法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15-结合外部样式的用法&#34;&gt;#&lt;/a&gt; 1.5 结合外部样式的用法&lt;/h4&gt;
&lt;h5 id=&#34;用法一&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用法一&#34;&gt;#&lt;/a&gt; 用法一 ：&lt;/h5&gt;
&lt;h5 id=&#34;用法二&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用法二&#34;&gt;#&lt;/a&gt; 用法二：&lt;/h5&gt;
&lt;h2 id=&#34;17-bfc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#17-bfc&#34;&gt;#&lt;/a&gt; 17. BFC&lt;/h2&gt;
&lt;h3 id=&#34;1-什么是bfc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-什么是bfc&#34;&gt;#&lt;/a&gt; 1. 什么是 BFC&lt;/h3&gt;
&lt;h5 id=&#34;w3c-上对-bfc-的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#w3c-上对-bfc-的定义&#34;&gt;#&lt;/a&gt; W3C 上对 BFC 的定义：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
原文：Floats, absolutely positioned elements, block containers (such as inline-blocks, table-

cells, and table-captions) that are not block boxes, and block boxes with &#39;overflow&#39; other than

&#39;visible&#39; (except when that value has been propagated to the viewport) establish new block

formatting contexts for their contents.

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
译文：浮动、绝对定位元素、不是块盒子的块容器（如inline-blocks、table-cells和

table-captions），以及overflow属性的值除visible以外的块盒，将为其内容建立新

的块格式化上下文。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;mdn-上对-bfc-的描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mdn-上对-bfc-的描述&#34;&gt;#&lt;/a&gt; MDN 上对 BFC 的描述：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
块格式化上下文（Block Formatting Context，BFC） 是Web页面的可视CSS渲染的一部分，

是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;更加通俗的描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#更加通俗的描述&#34;&gt;#&lt;/a&gt; 更加通俗的描述：&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
1. BFC 是 Block Formatting Context（ 块级格式上下文 ），可以理解成元素的一个

“特异功能”。

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; media=&amp;quot;具体的媒体查询&amp;quot; href=&amp;quot;mystylesheet.css&amp;quot;&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
@media screen and (max-width:768px) &amp;#123;

/*CSS-Code;*/

&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
@media screen and (min-width:768px) and (max-width:1200px) &amp;#123;

/*CSS-Code;*/

&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;2-该-特异功能在默认的情况下处于关闭状态当元素满足了某些条件后该特异功&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-该-特异功能在默认的情况下处于关闭状态当元素满足了某些条件后该特异功&#34;&gt;#&lt;/a&gt; 2. 该 “特异功能”，在默认的情况下处于关闭状态；当元素满足了某些条件后，该 “特异功&lt;/h5&gt;
&lt;h5 id=&#34;能被激活&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#能被激活&#34;&gt;#&lt;/a&gt; 能” 被激活。&lt;/h5&gt;
&lt;h5 id=&#34;3-所谓激活特异功能专业点说就是该元素创建了-bfc又称开启了-bfc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-所谓激活特异功能专业点说就是该元素创建了-bfc又称开启了-bfc&#34;&gt;#&lt;/a&gt; 3. 所谓激活 “特异功能”，专业点说就是：该元素创建了 BFC（又称：开启了 BFC）。&lt;/h5&gt;
&lt;h3 id=&#34;2-开启了bfc能解决什么问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-开启了bfc能解决什么问题&#34;&gt;#&lt;/a&gt; 2. 开启了 BFC 能解决什么问题&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
1. 元素开启BFC后，其子元素不会再产生margin塌陷问题。

2. 元素开启BFC后，自己不会被其他浮动元素所覆盖。

3. 元素开启BFC后，就算其子元素浮动，元素自身高度也不会塌陷。

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-如何开启bfc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-如何开启bfc&#34;&gt;#&lt;/a&gt; 3. 如何开启 BFC&lt;/h3&gt;
&lt;h5 id=&#34;根元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#根元素&#34;&gt;#&lt;/a&gt; 根元素&lt;/h5&gt;
&lt;h5 id=&#34;浮动元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浮动元素&#34;&gt;#&lt;/a&gt; 浮动元素&lt;/h5&gt;
&lt;h5 id=&#34;绝对定位-固定定位的元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绝对定位-固定定位的元素&#34;&gt;#&lt;/a&gt; 绝对定位、固定定位的元素&lt;/h5&gt;
&lt;h5 id=&#34;行内块元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#行内块元素&#34;&gt;#&lt;/a&gt; 行内块元素&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
表格单元格：table、thead、tbody、tfoot、th、td、tr、caption

overflow 的值不为 visible 的块元素

伸缩项目

多列容器

column-span 为 all 的元素（即使该元素没有包裹在多列容器中）

display的值，设置为flow-root

&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
    </channel>
</rss>
